// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: internal/protobuf/baidu/baidu.proto

/*
	Package protobuf_baidu is a generated protocol buffer package.

	It is generated from these files:
		internal/protobuf/baidu/baidu.proto

	It has these top-level messages:
		Version
		App
		UdId
		Size
		Device
		WiFiAp
		Network
		Gps
		Tracking
		Video
		Page
		AdSlot
		MobadsRequest
		MetaIndex
		MaterialMeta
		Ad
		MobadsResponse
*/
package protobuf_baidu

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import binary "encoding/binary"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 设备类型
type Device_DeviceType int32

const (
	Device_PHONE          Device_DeviceType = 1
	Device_TABLET         Device_DeviceType = 2
	Device_SMART_TV       Device_DeviceType = 3
	Device_OUTDOOR_SCREEN Device_DeviceType = 4
)

var Device_DeviceType_name = map[int32]string{
	1: "PHONE",
	2: "TABLET",
	3: "SMART_TV",
	4: "OUTDOOR_SCREEN",
}
var Device_DeviceType_value = map[string]int32{
	"PHONE":          1,
	"TABLET":         2,
	"SMART_TV":       3,
	"OUTDOOR_SCREEN": 4,
}

func (x Device_DeviceType) Enum() *Device_DeviceType {
	p := new(Device_DeviceType)
	*p = x
	return p
}
func (x Device_DeviceType) String() string {
	return proto.EnumName(Device_DeviceType_name, int32(x))
}
func (x *Device_DeviceType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Device_DeviceType_value, data, "Device_DeviceType")
	if err != nil {
		return err
	}
	*x = Device_DeviceType(value)
	return nil
}
func (Device_DeviceType) EnumDescriptor() ([]byte, []int) { return fileDescriptorBaidu, []int{4, 0} }

// 操作系统类型
type Device_OsType int32

const (
	Device_ANDROID Device_OsType = 1
	Device_IOS     Device_OsType = 2
)

var Device_OsType_name = map[int32]string{
	1: "ANDROID",
	2: "IOS",
}
var Device_OsType_value = map[string]int32{
	"ANDROID": 1,
	"IOS":     2,
}

func (x Device_OsType) Enum() *Device_OsType {
	p := new(Device_OsType)
	*p = x
	return p
}
func (x Device_OsType) String() string {
	return proto.EnumName(Device_OsType_name, int32(x))
}
func (x *Device_OsType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Device_OsType_value, data, "Device_OsType")
	if err != nil {
		return err
	}
	*x = Device_OsType(value)
	return nil
}
func (Device_OsType) EnumDescriptor() ([]byte, []int) { return fileDescriptorBaidu, []int{4, 1} }

// 网络连接类型
type Network_ConnectionType int32

const (
	Network_CONNECTION_UNKNOWN Network_ConnectionType = 0
	Network_CELL_UNKNOWN       Network_ConnectionType = 1
	Network_CELL_2G            Network_ConnectionType = 2
	Network_CELL_3G            Network_ConnectionType = 3
	Network_CELL_4G            Network_ConnectionType = 4
	Network_CELL_5G            Network_ConnectionType = 5
	Network_WIFI               Network_ConnectionType = 100
	Network_ETHERNET           Network_ConnectionType = 101
	Network_NEW_TYPE           Network_ConnectionType = 999
)

var Network_ConnectionType_name = map[int32]string{
	0:   "CONNECTION_UNKNOWN",
	1:   "CELL_UNKNOWN",
	2:   "CELL_2G",
	3:   "CELL_3G",
	4:   "CELL_4G",
	5:   "CELL_5G",
	100: "WIFI",
	101: "ETHERNET",
	999: "NEW_TYPE",
}
var Network_ConnectionType_value = map[string]int32{
	"CONNECTION_UNKNOWN": 0,
	"CELL_UNKNOWN":       1,
	"CELL_2G":            2,
	"CELL_3G":            3,
	"CELL_4G":            4,
	"CELL_5G":            5,
	"WIFI":               100,
	"ETHERNET":           101,
	"NEW_TYPE":           999,
}

func (x Network_ConnectionType) Enum() *Network_ConnectionType {
	p := new(Network_ConnectionType)
	*p = x
	return p
}
func (x Network_ConnectionType) String() string {
	return proto.EnumName(Network_ConnectionType_name, int32(x))
}
func (x *Network_ConnectionType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Network_ConnectionType_value, data, "Network_ConnectionType")
	if err != nil {
		return err
	}
	*x = Network_ConnectionType(value)
	return nil
}
func (Network_ConnectionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptorBaidu, []int{6, 0}
}

// 移动运营商类型
type Network_OperatorType int32

const (
	Network_UNKNOWN_OPERATOR Network_OperatorType = 0
	Network_CHINA_MOBILE     Network_OperatorType = 1
	Network_CHINA_TELECOM    Network_OperatorType = 2
	Network_CHINA_UNICOM     Network_OperatorType = 3
	Network_OTHER_OPERATOR   Network_OperatorType = 99
)

var Network_OperatorType_name = map[int32]string{
	0:  "UNKNOWN_OPERATOR",
	1:  "CHINA_MOBILE",
	2:  "CHINA_TELECOM",
	3:  "CHINA_UNICOM",
	99: "OTHER_OPERATOR",
}
var Network_OperatorType_value = map[string]int32{
	"UNKNOWN_OPERATOR": 0,
	"CHINA_MOBILE":     1,
	"CHINA_TELECOM":    2,
	"CHINA_UNICOM":     3,
	"OTHER_OPERATOR":   99,
}

func (x Network_OperatorType) Enum() *Network_OperatorType {
	p := new(Network_OperatorType)
	*p = x
	return p
}
func (x Network_OperatorType) String() string {
	return proto.EnumName(Network_OperatorType_name, int32(x))
}
func (x *Network_OperatorType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Network_OperatorType_value, data, "Network_OperatorType")
	if err != nil {
		return err
	}
	*x = Network_OperatorType(value)
	return nil
}
func (Network_OperatorType) EnumDescriptor() ([]byte, []int) { return fileDescriptorBaidu, []int{6, 1} }

// GPS坐标类型
type Gps_CoordinateType int32

const (
	Gps_WGS84 Gps_CoordinateType = 1
	Gps_GCJ02 Gps_CoordinateType = 2
	Gps_BD09  Gps_CoordinateType = 3
)

var Gps_CoordinateType_name = map[int32]string{
	1: "WGS84",
	2: "GCJ02",
	3: "BD09",
}
var Gps_CoordinateType_value = map[string]int32{
	"WGS84": 1,
	"GCJ02": 2,
	"BD09":  3,
}

func (x Gps_CoordinateType) Enum() *Gps_CoordinateType {
	p := new(Gps_CoordinateType)
	*p = x
	return p
}
func (x Gps_CoordinateType) String() string {
	return proto.EnumName(Gps_CoordinateType_name, int32(x))
}
func (x *Gps_CoordinateType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Gps_CoordinateType_value, data, "Gps_CoordinateType")
	if err != nil {
		return err
	}
	*x = Gps_CoordinateType(value)
	return nil
}
func (Gps_CoordinateType) EnumDescriptor() ([]byte, []int) { return fileDescriptorBaidu, []int{7, 0} }

// 广告展示过程事件类型
type Tracking_TrackingEvent int32

const (
	// 广告展示过程共性事件
	Tracking_AD_CLICK    Tracking_TrackingEvent = 0
	Tracking_AD_EXPOSURE Tracking_TrackingEvent = 1
	Tracking_AD_CLOSE    Tracking_TrackingEvent = 2
	Tracking_SKIP        Tracking_TrackingEvent = 3
	Tracking_CLICK       Tracking_TrackingEvent = 4
	// 视频类广告展示过程事件
	Tracking_VIDEO_AD_START            Tracking_TrackingEvent = 101000
	Tracking_VIDEO_AD_FULL_SCREEN      Tracking_TrackingEvent = 101001
	Tracking_VIDEO_AD_END              Tracking_TrackingEvent = 101002
	Tracking_VIDEO_AD_START_CARD_CLICK Tracking_TrackingEvent = 101003
	// 下载类广告推广APP相关事件
	Tracking_APP_AD_DOWNLOAD_PAGE     Tracking_TrackingEvent = 102000
	Tracking_APP_AD_DOWNLOAD          Tracking_TrackingEvent = 102001
	Tracking_APP_AD_DOWNLOAD_BEGIN    Tracking_TrackingEvent = 102002
	Tracking_APP_AD_DOWNLOAD_PAUSE    Tracking_TrackingEvent = 102003
	Tracking_APP_AD_DOWNLOAD_CONTINUE Tracking_TrackingEvent = 102004
	Tracking_APP_AD_DOWNLOAD_FINISH   Tracking_TrackingEvent = 102005
	Tracking_APP_AD_INSTALL           Tracking_TrackingEvent = 102006
	Tracking_APP_AD_INSTALL_BEGIN     Tracking_TrackingEvent = 102007
	Tracking_APP_AD_INSTALL_PAUSE     Tracking_TrackingEvent = 102008
	Tracking_APP_AD_INSTALL_CONTINUE  Tracking_TrackingEvent = 102009
	Tracking_APP_AD_INSTALL_FINISH    Tracking_TrackingEvent = 102010
	Tracking_APP_AD_INSTALL_OPEN      Tracking_TrackingEvent = 102011
	Tracking_APP_AD_ACTIVE            Tracking_TrackingEvent = 102012
)

var Tracking_TrackingEvent_name = map[int32]string{
	0:      "AD_CLICK",
	1:      "AD_EXPOSURE",
	2:      "AD_CLOSE",
	3:      "SKIP",
	4:      "CLICK",
	101000: "VIDEO_AD_START",
	101001: "VIDEO_AD_FULL_SCREEN",
	101002: "VIDEO_AD_END",
	101003: "VIDEO_AD_START_CARD_CLICK",
	102000: "APP_AD_DOWNLOAD_PAGE",
	102001: "APP_AD_DOWNLOAD",
	102002: "APP_AD_DOWNLOAD_BEGIN",
	102003: "APP_AD_DOWNLOAD_PAUSE",
	102004: "APP_AD_DOWNLOAD_CONTINUE",
	102005: "APP_AD_DOWNLOAD_FINISH",
	102006: "APP_AD_INSTALL",
	102007: "APP_AD_INSTALL_BEGIN",
	102008: "APP_AD_INSTALL_PAUSE",
	102009: "APP_AD_INSTALL_CONTINUE",
	102010: "APP_AD_INSTALL_FINISH",
	102011: "APP_AD_INSTALL_OPEN",
	102012: "APP_AD_ACTIVE",
}
var Tracking_TrackingEvent_value = map[string]int32{
	"AD_CLICK":                  0,
	"AD_EXPOSURE":               1,
	"AD_CLOSE":                  2,
	"SKIP":                      3,
	"CLICK":                     4,
	"VIDEO_AD_START":            101000,
	"VIDEO_AD_FULL_SCREEN":      101001,
	"VIDEO_AD_END":              101002,
	"VIDEO_AD_START_CARD_CLICK": 101003,
	"APP_AD_DOWNLOAD_PAGE":      102000,
	"APP_AD_DOWNLOAD":           102001,
	"APP_AD_DOWNLOAD_BEGIN":     102002,
	"APP_AD_DOWNLOAD_PAUSE":     102003,
	"APP_AD_DOWNLOAD_CONTINUE":  102004,
	"APP_AD_DOWNLOAD_FINISH":    102005,
	"APP_AD_INSTALL":            102006,
	"APP_AD_INSTALL_BEGIN":      102007,
	"APP_AD_INSTALL_PAUSE":      102008,
	"APP_AD_INSTALL_CONTINUE":   102009,
	"APP_AD_INSTALL_FINISH":     102010,
	"APP_AD_INSTALL_OPEN":       102011,
	"APP_AD_ACTIVE":             102012,
}

func (x Tracking_TrackingEvent) Enum() *Tracking_TrackingEvent {
	p := new(Tracking_TrackingEvent)
	*p = x
	return p
}
func (x Tracking_TrackingEvent) String() string {
	return proto.EnumName(Tracking_TrackingEvent_name, int32(x))
}
func (x *Tracking_TrackingEvent) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Tracking_TrackingEvent_value, data, "Tracking_TrackingEvent")
	if err != nil {
		return err
	}
	*x = Tracking_TrackingEvent(value)
	return nil
}
func (Tracking_TrackingEvent) EnumDescriptor() ([]byte, []int) {
	return fileDescriptorBaidu, []int{8, 0}
}

type Video_CopyRight int32

const (
	Video_CR_NONE  Video_CopyRight = 0
	Video_CR_EXIST Video_CopyRight = 1
	Video_CR_UGC   Video_CopyRight = 2
	Video_CR_OTHER Video_CopyRight = 3
)

var Video_CopyRight_name = map[int32]string{
	0: "CR_NONE",
	1: "CR_EXIST",
	2: "CR_UGC",
	3: "CR_OTHER",
}
var Video_CopyRight_value = map[string]int32{
	"CR_NONE":  0,
	"CR_EXIST": 1,
	"CR_UGC":   2,
	"CR_OTHER": 3,
}

func (x Video_CopyRight) Enum() *Video_CopyRight {
	p := new(Video_CopyRight)
	*p = x
	return p
}
func (x Video_CopyRight) String() string {
	return proto.EnumName(Video_CopyRight_name, int32(x))
}
func (x *Video_CopyRight) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Video_CopyRight_value, data, "Video_CopyRight")
	if err != nil {
		return err
	}
	*x = Video_CopyRight(value)
	return nil
}
func (Video_CopyRight) EnumDescriptor() ([]byte, []int) { return fileDescriptorBaidu, []int{9, 0} }

type Video_MaterialFormat int32

const (
	Video_VIDEO_TCL_MP4 Video_MaterialFormat = 11
	Video_VIDEO_TCL_TS  Video_MaterialFormat = 12
	Video_VIDEO_TS      Video_MaterialFormat = 13
)

var Video_MaterialFormat_name = map[int32]string{
	11: "VIDEO_TCL_MP4",
	12: "VIDEO_TCL_TS",
	13: "VIDEO_TS",
}
var Video_MaterialFormat_value = map[string]int32{
	"VIDEO_TCL_MP4": 11,
	"VIDEO_TCL_TS":  12,
	"VIDEO_TS":      13,
}

func (x Video_MaterialFormat) Enum() *Video_MaterialFormat {
	p := new(Video_MaterialFormat)
	*p = x
	return p
}
func (x Video_MaterialFormat) String() string {
	return proto.EnumName(Video_MaterialFormat_name, int32(x))
}
func (x *Video_MaterialFormat) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Video_MaterialFormat_value, data, "Video_MaterialFormat")
	if err != nil {
		return err
	}
	*x = Video_MaterialFormat(value)
	return nil
}
func (Video_MaterialFormat) EnumDescriptor() ([]byte, []int) { return fileDescriptorBaidu, []int{9, 1} }

// 请求协议类型
type MobadsRequest_RequestProtocolType int32

const (
	MobadsRequest_UNKNOWN_PROTOCOL_TYPE MobadsRequest_RequestProtocolType = 0
	MobadsRequest_HTTP_PROTOCOL_TYPE    MobadsRequest_RequestProtocolType = 1
	MobadsRequest_HTTPS_PROTOCOL_TYPE   MobadsRequest_RequestProtocolType = 2
)

var MobadsRequest_RequestProtocolType_name = map[int32]string{
	0: "UNKNOWN_PROTOCOL_TYPE",
	1: "HTTP_PROTOCOL_TYPE",
	2: "HTTPS_PROTOCOL_TYPE",
}
var MobadsRequest_RequestProtocolType_value = map[string]int32{
	"UNKNOWN_PROTOCOL_TYPE": 0,
	"HTTP_PROTOCOL_TYPE":    1,
	"HTTPS_PROTOCOL_TYPE":   2,
}

func (x MobadsRequest_RequestProtocolType) Enum() *MobadsRequest_RequestProtocolType {
	p := new(MobadsRequest_RequestProtocolType)
	*p = x
	return p
}
func (x MobadsRequest_RequestProtocolType) String() string {
	return proto.EnumName(MobadsRequest_RequestProtocolType_name, int32(x))
}
func (x *MobadsRequest_RequestProtocolType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MobadsRequest_RequestProtocolType_value, data, "MobadsRequest_RequestProtocolType")
	if err != nil {
		return err
	}
	*x = MobadsRequest_RequestProtocolType(value)
	return nil
}
func (MobadsRequest_RequestProtocolType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptorBaidu, []int{12, 0}
}

// 创意类型
type MaterialMeta_CreativeType int32

const (
	MaterialMeta_NO_TYPE   MaterialMeta_CreativeType = 0
	MaterialMeta_TEXT      MaterialMeta_CreativeType = 1
	MaterialMeta_IMAGE     MaterialMeta_CreativeType = 2
	MaterialMeta_TEXT_ICON MaterialMeta_CreativeType = 3
	MaterialMeta_VIDEO     MaterialMeta_CreativeType = 4
)

var MaterialMeta_CreativeType_name = map[int32]string{
	0: "NO_TYPE",
	1: "TEXT",
	2: "IMAGE",
	3: "TEXT_ICON",
	4: "VIDEO",
}
var MaterialMeta_CreativeType_value = map[string]int32{
	"NO_TYPE":   0,
	"TEXT":      1,
	"IMAGE":     2,
	"TEXT_ICON": 3,
	"VIDEO":     4,
}

func (x MaterialMeta_CreativeType) Enum() *MaterialMeta_CreativeType {
	p := new(MaterialMeta_CreativeType)
	*p = x
	return p
}
func (x MaterialMeta_CreativeType) String() string {
	return proto.EnumName(MaterialMeta_CreativeType_name, int32(x))
}
func (x *MaterialMeta_CreativeType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MaterialMeta_CreativeType_value, data, "MaterialMeta_CreativeType")
	if err != nil {
		return err
	}
	*x = MaterialMeta_CreativeType(value)
	return nil
}
func (MaterialMeta_CreativeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptorBaidu, []int{14, 0}
}

// 交互类型
type MaterialMeta_InteractionType int32

const (
	MaterialMeta_NO_INTERACTION MaterialMeta_InteractionType = 0
	MaterialMeta_SURFING        MaterialMeta_InteractionType = 1
	MaterialMeta_DOWNLOAD       MaterialMeta_InteractionType = 2
	MaterialMeta_DEEPLINK       MaterialMeta_InteractionType = 3
)

var MaterialMeta_InteractionType_name = map[int32]string{
	0: "NO_INTERACTION",
	1: "SURFING",
	2: "DOWNLOAD",
	3: "DEEPLINK",
}
var MaterialMeta_InteractionType_value = map[string]int32{
	"NO_INTERACTION": 0,
	"SURFING":        1,
	"DOWNLOAD":       2,
	"DEEPLINK":       3,
}

func (x MaterialMeta_InteractionType) Enum() *MaterialMeta_InteractionType {
	p := new(MaterialMeta_InteractionType)
	*p = x
	return p
}
func (x MaterialMeta_InteractionType) String() string {
	return proto.EnumName(MaterialMeta_InteractionType_name, int32(x))
}
func (x *MaterialMeta_InteractionType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MaterialMeta_InteractionType_value, data, "MaterialMeta_InteractionType")
	if err != nil {
		return err
	}
	*x = MaterialMeta_InteractionType(value)
	return nil
}
func (MaterialMeta_InteractionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptorBaidu, []int{14, 1}
}

// 版本号信息
type Version struct {
	Major            *uint32 `protobuf:"varint,1,opt,name=major,def=0" json:"major,omitempty"`
	Minor            *uint32 `protobuf:"varint,2,opt,name=minor,def=0" json:"minor,omitempty"`
	Micro            *uint32 `protobuf:"varint,3,opt,name=micro,def=0" json:"micro,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Version) Reset()                    { *m = Version{} }
func (m *Version) String() string            { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()               {}
func (*Version) Descriptor() ([]byte, []int) { return fileDescriptorBaidu, []int{0} }

const Default_Version_Major uint32 = 0
const Default_Version_Minor uint32 = 0
const Default_Version_Micro uint32 = 0

func (m *Version) GetMajor() uint32 {
	if m != nil && m.Major != nil {
		return *m.Major
	}
	return Default_Version_Major
}

func (m *Version) GetMinor() uint32 {
	if m != nil && m.Minor != nil {
		return *m.Minor
	}
	return Default_Version_Minor
}

func (m *Version) GetMicro() uint32 {
	if m != nil && m.Micro != nil {
		return *m.Micro
	}
	return Default_Version_Micro
}

// 应用信息
type App struct {
	AppId            *string  `protobuf:"bytes,1,opt,name=app_id,json=appId,def=" json:"app_id,omitempty"`
	ChannelId        *string  `protobuf:"bytes,2,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	AppVersion       *Version `protobuf:"bytes,3,opt,name=app_version,json=appVersion" json:"app_version,omitempty"`
	AppPackage       *string  `protobuf:"bytes,4,opt,name=app_package,json=appPackage" json:"app_package,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *App) Reset()                    { *m = App{} }
func (m *App) String() string            { return proto.CompactTextString(m) }
func (*App) ProtoMessage()               {}
func (*App) Descriptor() ([]byte, []int) { return fileDescriptorBaidu, []int{1} }

func (m *App) GetAppId() string {
	if m != nil && m.AppId != nil {
		return *m.AppId
	}
	return ""
}

func (m *App) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

func (m *App) GetAppVersion() *Version {
	if m != nil {
		return m.AppVersion
	}
	return nil
}

func (m *App) GetAppPackage() string {
	if m != nil && m.AppPackage != nil {
		return *m.AppPackage
	}
	return ""
}

// 唯一用户标识，必需使用明文，必需按要求填写，具体填写指导详见接口说明文档
type UdId struct {
	Idfa             *string `protobuf:"bytes,1,opt,name=idfa,def=" json:"idfa,omitempty"`
	Imei             *string `protobuf:"bytes,2,opt,name=imei,def=" json:"imei,omitempty"`
	Mac              *string `protobuf:"bytes,3,opt,name=mac,def=" json:"mac,omitempty"`
	ImeiMd5          *string `protobuf:"bytes,4,opt,name=imei_md5,json=imeiMd5,def=" json:"imei_md5,omitempty"`
	AndroidId        *string `protobuf:"bytes,5,opt,name=android_id,json=androidId,def=" json:"android_id,omitempty"`
	Baiduid          *string `protobuf:"bytes,6,opt,name=baiduid,def=" json:"baiduid,omitempty"`
	Cuid             *string `protobuf:"bytes,7,opt,name=cuid,def=" json:"cuid,omitempty"`
	IdfaMd5          *string `protobuf:"bytes,8,opt,name=idfa_md5,json=idfaMd5,def=" json:"idfa_md5,omitempty"`
	AndroididMd5     *string `protobuf:"bytes,9,opt,name=androidid_md5,json=androididMd5,def=" json:"androidid_md5,omitempty"`
	Passport         *string `protobuf:"bytes,10,opt,name=passport,def=" json:"passport,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UdId) Reset()                    { *m = UdId{} }
func (m *UdId) String() string            { return proto.CompactTextString(m) }
func (*UdId) ProtoMessage()               {}
func (*UdId) Descriptor() ([]byte, []int) { return fileDescriptorBaidu, []int{2} }

func (m *UdId) GetIdfa() string {
	if m != nil && m.Idfa != nil {
		return *m.Idfa
	}
	return ""
}

func (m *UdId) GetImei() string {
	if m != nil && m.Imei != nil {
		return *m.Imei
	}
	return ""
}

func (m *UdId) GetMac() string {
	if m != nil && m.Mac != nil {
		return *m.Mac
	}
	return ""
}

func (m *UdId) GetImeiMd5() string {
	if m != nil && m.ImeiMd5 != nil {
		return *m.ImeiMd5
	}
	return ""
}

func (m *UdId) GetAndroidId() string {
	if m != nil && m.AndroidId != nil {
		return *m.AndroidId
	}
	return ""
}

func (m *UdId) GetBaiduid() string {
	if m != nil && m.Baiduid != nil {
		return *m.Baiduid
	}
	return ""
}

func (m *UdId) GetCuid() string {
	if m != nil && m.Cuid != nil {
		return *m.Cuid
	}
	return ""
}

func (m *UdId) GetIdfaMd5() string {
	if m != nil && m.IdfaMd5 != nil {
		return *m.IdfaMd5
	}
	return ""
}

func (m *UdId) GetAndroididMd5() string {
	if m != nil && m.AndroididMd5 != nil {
		return *m.AndroididMd5
	}
	return ""
}

func (m *UdId) GetPassport() string {
	if m != nil && m.Passport != nil {
		return *m.Passport
	}
	return ""
}

// 二维尺寸信息
type Size struct {
	Width            *uint32 `protobuf:"varint,1,opt,name=width,def=0" json:"width,omitempty"`
	Height           *uint32 `protobuf:"varint,2,opt,name=height,def=0" json:"height,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Size) Reset()                    { *m = Size{} }
func (m *Size) String() string            { return proto.CompactTextString(m) }
func (*Size) ProtoMessage()               {}
func (*Size) Descriptor() ([]byte, []int) { return fileDescriptorBaidu, []int{3} }

const Default_Size_Width uint32 = 0
const Default_Size_Height uint32 = 0

func (m *Size) GetWidth() uint32 {
	if m != nil && m.Width != nil {
		return *m.Width
	}
	return Default_Size_Width
}

func (m *Size) GetHeight() uint32 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return Default_Size_Height
}

// 设备信息
type Device struct {
	DeviceType       *Device_DeviceType `protobuf:"varint,1,opt,name=device_type,json=deviceType,enum=protobuf.baidu.Device_DeviceType" json:"device_type,omitempty"`
	OsType           *Device_OsType     `protobuf:"varint,2,opt,name=os_type,json=osType,enum=protobuf.baidu.Device_OsType" json:"os_type,omitempty"`
	OsVersion        *Version           `protobuf:"bytes,3,opt,name=os_version,json=osVersion" json:"os_version,omitempty"`
	Vendor           []byte             `protobuf:"bytes,4,opt,name=vendor,def=" json:"vendor,omitempty"`
	Model            []byte             `protobuf:"bytes,5,opt,name=model,def=" json:"model,omitempty"`
	Udid             *UdId              `protobuf:"bytes,6,opt,name=udid" json:"udid,omitempty"`
	ScreenSize       *Size              `protobuf:"bytes,7,opt,name=screen_size,json=screenSize" json:"screen_size,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *Device) Reset()                    { *m = Device{} }
func (m *Device) String() string            { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()               {}
func (*Device) Descriptor() ([]byte, []int) { return fileDescriptorBaidu, []int{4} }

func (m *Device) GetDeviceType() Device_DeviceType {
	if m != nil && m.DeviceType != nil {
		return *m.DeviceType
	}
	return Device_PHONE
}

func (m *Device) GetOsType() Device_OsType {
	if m != nil && m.OsType != nil {
		return *m.OsType
	}
	return Device_ANDROID
}

func (m *Device) GetOsVersion() *Version {
	if m != nil {
		return m.OsVersion
	}
	return nil
}

func (m *Device) GetVendor() []byte {
	if m != nil {
		return m.Vendor
	}
	return nil
}

func (m *Device) GetModel() []byte {
	if m != nil {
		return m.Model
	}
	return nil
}

func (m *Device) GetUdid() *UdId {
	if m != nil {
		return m.Udid
	}
	return nil
}

func (m *Device) GetScreenSize() *Size {
	if m != nil {
		return m.ScreenSize
	}
	return nil
}

// WiFi热点信息
type WiFiAp struct {
	ApMac            *string `protobuf:"bytes,1,opt,name=ap_mac,json=apMac" json:"ap_mac,omitempty"`
	Rssi             *int32  `protobuf:"varint,2,opt,name=rssi" json:"rssi,omitempty"`
	ApName           []byte  `protobuf:"bytes,3,opt,name=ap_name,json=apName" json:"ap_name,omitempty"`
	IsConnected      *bool   `protobuf:"varint,4,opt,name=is_connected,json=isConnected" json:"is_connected,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *WiFiAp) Reset()                    { *m = WiFiAp{} }
func (m *WiFiAp) String() string            { return proto.CompactTextString(m) }
func (*WiFiAp) ProtoMessage()               {}
func (*WiFiAp) Descriptor() ([]byte, []int) { return fileDescriptorBaidu, []int{5} }

func (m *WiFiAp) GetApMac() string {
	if m != nil && m.ApMac != nil {
		return *m.ApMac
	}
	return ""
}

func (m *WiFiAp) GetRssi() int32 {
	if m != nil && m.Rssi != nil {
		return *m.Rssi
	}
	return 0
}

func (m *WiFiAp) GetApName() []byte {
	if m != nil {
		return m.ApName
	}
	return nil
}

func (m *WiFiAp) GetIsConnected() bool {
	if m != nil && m.IsConnected != nil {
		return *m.IsConnected
	}
	return false
}

// 网络环境信息
type Network struct {
	Ipv4             *string                 `protobuf:"bytes,1,opt,name=ipv4" json:"ipv4,omitempty"`
	ConnectionType   *Network_ConnectionType `protobuf:"varint,2,opt,name=connection_type,json=connectionType,enum=protobuf.baidu.Network_ConnectionType" json:"connection_type,omitempty"`
	OperatorType     *Network_OperatorType   `protobuf:"varint,3,opt,name=operator_type,json=operatorType,enum=protobuf.baidu.Network_OperatorType" json:"operator_type,omitempty"`
	CellularId       *string                 `protobuf:"bytes,4,opt,name=cellular_id,json=cellularId" json:"cellular_id,omitempty"`
	WifiAps          []*WiFiAp               `protobuf:"bytes,5,rep,name=wifi_aps,json=wifiAps" json:"wifi_aps,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *Network) Reset()                    { *m = Network{} }
func (m *Network) String() string            { return proto.CompactTextString(m) }
func (*Network) ProtoMessage()               {}
func (*Network) Descriptor() ([]byte, []int) { return fileDescriptorBaidu, []int{6} }

func (m *Network) GetIpv4() string {
	if m != nil && m.Ipv4 != nil {
		return *m.Ipv4
	}
	return ""
}

func (m *Network) GetConnectionType() Network_ConnectionType {
	if m != nil && m.ConnectionType != nil {
		return *m.ConnectionType
	}
	return Network_CONNECTION_UNKNOWN
}

func (m *Network) GetOperatorType() Network_OperatorType {
	if m != nil && m.OperatorType != nil {
		return *m.OperatorType
	}
	return Network_UNKNOWN_OPERATOR
}

func (m *Network) GetCellularId() string {
	if m != nil && m.CellularId != nil {
		return *m.CellularId
	}
	return ""
}

func (m *Network) GetWifiAps() []*WiFiAp {
	if m != nil {
		return m.WifiAps
	}
	return nil
}

// GPS信息
type Gps struct {
	CoordinateType   *Gps_CoordinateType `protobuf:"varint,1,opt,name=coordinate_type,json=coordinateType,enum=protobuf.baidu.Gps_CoordinateType" json:"coordinate_type,omitempty"`
	Longitude        *float64            `protobuf:"fixed64,2,opt,name=longitude" json:"longitude,omitempty"`
	Latitude         *float64            `protobuf:"fixed64,3,opt,name=latitude" json:"latitude,omitempty"`
	Timestamp        *uint32             `protobuf:"varint,4,opt,name=timestamp" json:"timestamp,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *Gps) Reset()                    { *m = Gps{} }
func (m *Gps) String() string            { return proto.CompactTextString(m) }
func (*Gps) ProtoMessage()               {}
func (*Gps) Descriptor() ([]byte, []int) { return fileDescriptorBaidu, []int{7} }

func (m *Gps) GetCoordinateType() Gps_CoordinateType {
	if m != nil && m.CoordinateType != nil {
		return *m.CoordinateType
	}
	return Gps_WGS84
}

func (m *Gps) GetLongitude() float64 {
	if m != nil && m.Longitude != nil {
		return *m.Longitude
	}
	return 0
}

func (m *Gps) GetLatitude() float64 {
	if m != nil && m.Latitude != nil {
		return *m.Latitude
	}
	return 0
}

func (m *Gps) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

// 广告效果跟踪信息
type Tracking struct {
	TrackingEvent    *Tracking_TrackingEvent `protobuf:"varint,1,opt,name=tracking_event,json=trackingEvent,enum=protobuf.baidu.Tracking_TrackingEvent" json:"tracking_event,omitempty"`
	TrackingUrl      []string                `protobuf:"bytes,2,rep,name=tracking_url,json=trackingUrl" json:"tracking_url,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *Tracking) Reset()                    { *m = Tracking{} }
func (m *Tracking) String() string            { return proto.CompactTextString(m) }
func (*Tracking) ProtoMessage()               {}
func (*Tracking) Descriptor() ([]byte, []int) { return fileDescriptorBaidu, []int{8} }

func (m *Tracking) GetTrackingEvent() Tracking_TrackingEvent {
	if m != nil && m.TrackingEvent != nil {
		return *m.TrackingEvent
	}
	return Tracking_AD_CLICK
}

func (m *Tracking) GetTrackingUrl() []string {
	if m != nil {
		return m.TrackingUrl
	}
	return nil
}

type Video struct {
	Title            []byte                 `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	ContentLength    *uint32                `protobuf:"varint,2,opt,name=content_length,json=contentLength" json:"content_length,omitempty"`
	Copyright        *Video_CopyRight       `protobuf:"varint,3,opt,name=copyright,enum=protobuf.baidu.Video_CopyRight" json:"copyright,omitempty"`
	MaterialFormat   []Video_MaterialFormat `protobuf:"varint,4,rep,name=material_format,json=materialFormat,enum=protobuf.baidu.Video_MaterialFormat" json:"material_format,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *Video) Reset()                    { *m = Video{} }
func (m *Video) String() string            { return proto.CompactTextString(m) }
func (*Video) ProtoMessage()               {}
func (*Video) Descriptor() ([]byte, []int) { return fileDescriptorBaidu, []int{9} }

func (m *Video) GetTitle() []byte {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *Video) GetContentLength() uint32 {
	if m != nil && m.ContentLength != nil {
		return *m.ContentLength
	}
	return 0
}

func (m *Video) GetCopyright() Video_CopyRight {
	if m != nil && m.Copyright != nil {
		return *m.Copyright
	}
	return Video_CR_NONE
}

func (m *Video) GetMaterialFormat() []Video_MaterialFormat {
	if m != nil {
		return m.MaterialFormat
	}
	return nil
}

type Page struct {
	Url              []byte   `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	Title            []byte   `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	SourceUrl        []byte   `protobuf:"bytes,3,opt,name=source_url,json=sourceUrl" json:"source_url,omitempty"`
	ContentId        *string  `protobuf:"bytes,4,opt,name=content_id,json=contentId" json:"content_id,omitempty"`
	ContentCategory  [][]byte `protobuf:"bytes,5,rep,name=content_category,json=contentCategory" json:"content_category,omitempty"`
	ContentLabel     [][]byte `protobuf:"bytes,6,rep,name=content_label,json=contentLabel" json:"content_label,omitempty"`
	AuthorId         *string  `protobuf:"bytes,7,opt,name=author_id,json=authorId" json:"author_id,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Page) Reset()                    { *m = Page{} }
func (m *Page) String() string            { return proto.CompactTextString(m) }
func (*Page) ProtoMessage()               {}
func (*Page) Descriptor() ([]byte, []int) { return fileDescriptorBaidu, []int{10} }

func (m *Page) GetUrl() []byte {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *Page) GetTitle() []byte {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *Page) GetSourceUrl() []byte {
	if m != nil {
		return m.SourceUrl
	}
	return nil
}

func (m *Page) GetContentId() string {
	if m != nil && m.ContentId != nil {
		return *m.ContentId
	}
	return ""
}

func (m *Page) GetContentCategory() [][]byte {
	if m != nil {
		return m.ContentCategory
	}
	return nil
}

func (m *Page) GetContentLabel() [][]byte {
	if m != nil {
		return m.ContentLabel
	}
	return nil
}

func (m *Page) GetAuthorId() string {
	if m != nil && m.AuthorId != nil {
		return *m.AuthorId
	}
	return ""
}

// 广告位信息
type AdSlot struct {
	AdslotId         *string  `protobuf:"bytes,1,opt,name=adslot_id,json=adslotId" json:"adslot_id,omitempty"`
	AdslotSize       *Size    `protobuf:"bytes,2,opt,name=adslot_size,json=adslotSize" json:"adslot_size,omitempty"`
	Topics           [][]byte `protobuf:"bytes,3,rep,name=topics" json:"topics,omitempty"`
	Video            *Video   `protobuf:"bytes,4,opt,name=video" json:"video,omitempty"`
	Ctkey            *string  `protobuf:"bytes,5,opt,name=ctkey" json:"ctkey,omitempty"`
	SequenceId       *uint32  `protobuf:"varint,6,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *AdSlot) Reset()                    { *m = AdSlot{} }
func (m *AdSlot) String() string            { return proto.CompactTextString(m) }
func (*AdSlot) ProtoMessage()               {}
func (*AdSlot) Descriptor() ([]byte, []int) { return fileDescriptorBaidu, []int{11} }

func (m *AdSlot) GetAdslotId() string {
	if m != nil && m.AdslotId != nil {
		return *m.AdslotId
	}
	return ""
}

func (m *AdSlot) GetAdslotSize() *Size {
	if m != nil {
		return m.AdslotSize
	}
	return nil
}

func (m *AdSlot) GetTopics() [][]byte {
	if m != nil {
		return m.Topics
	}
	return nil
}

func (m *AdSlot) GetVideo() *Video {
	if m != nil {
		return m.Video
	}
	return nil
}

func (m *AdSlot) GetCtkey() string {
	if m != nil && m.Ctkey != nil {
		return *m.Ctkey
	}
	return ""
}

func (m *AdSlot) GetSequenceId() uint32 {
	if m != nil && m.SequenceId != nil {
		return *m.SequenceId
	}
	return 0
}

// Baidu Mobads API请求
type MobadsRequest struct {
	RequestId           *string                            `protobuf:"bytes,1,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	ApiVersion          *Version                           `protobuf:"bytes,2,opt,name=api_version,json=apiVersion" json:"api_version,omitempty"`
	App                 *App                               `protobuf:"bytes,3,opt,name=app" json:"app,omitempty"`
	Device              *Device                            `protobuf:"bytes,4,opt,name=device" json:"device,omitempty"`
	Network             *Network                           `protobuf:"bytes,5,opt,name=network" json:"network,omitempty"`
	Gps                 *Gps                               `protobuf:"bytes,6,opt,name=gps" json:"gps,omitempty"`
	Adslot              *AdSlot                            `protobuf:"bytes,7,opt,name=adslot" json:"adslot,omitempty"`
	IsDebug             *bool                              `protobuf:"varint,8,opt,name=is_debug,json=isDebug,def=0" json:"is_debug,omitempty"`
	RequestProtocolType *MobadsRequest_RequestProtocolType `protobuf:"varint,9,opt,name=request_protocol_type,json=requestProtocolType,enum=protobuf.baidu.MobadsRequest_RequestProtocolType,def=1" json:"request_protocol_type,omitempty"`
	Page                *Page                              `protobuf:"bytes,10,opt,name=page" json:"page,omitempty"`
	XXX_unrecognized    []byte                             `json:"-"`
}

func (m *MobadsRequest) Reset()                    { *m = MobadsRequest{} }
func (m *MobadsRequest) String() string            { return proto.CompactTextString(m) }
func (*MobadsRequest) ProtoMessage()               {}
func (*MobadsRequest) Descriptor() ([]byte, []int) { return fileDescriptorBaidu, []int{12} }

const Default_MobadsRequest_IsDebug bool = false
const Default_MobadsRequest_RequestProtocolType MobadsRequest_RequestProtocolType = MobadsRequest_HTTP_PROTOCOL_TYPE

func (m *MobadsRequest) GetRequestId() string {
	if m != nil && m.RequestId != nil {
		return *m.RequestId
	}
	return ""
}

func (m *MobadsRequest) GetApiVersion() *Version {
	if m != nil {
		return m.ApiVersion
	}
	return nil
}

func (m *MobadsRequest) GetApp() *App {
	if m != nil {
		return m.App
	}
	return nil
}

func (m *MobadsRequest) GetDevice() *Device {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *MobadsRequest) GetNetwork() *Network {
	if m != nil {
		return m.Network
	}
	return nil
}

func (m *MobadsRequest) GetGps() *Gps {
	if m != nil {
		return m.Gps
	}
	return nil
}

func (m *MobadsRequest) GetAdslot() *AdSlot {
	if m != nil {
		return m.Adslot
	}
	return nil
}

func (m *MobadsRequest) GetIsDebug() bool {
	if m != nil && m.IsDebug != nil {
		return *m.IsDebug
	}
	return Default_MobadsRequest_IsDebug
}

func (m *MobadsRequest) GetRequestProtocolType() MobadsRequest_RequestProtocolType {
	if m != nil && m.RequestProtocolType != nil {
		return *m.RequestProtocolType
	}
	return Default_MobadsRequest_RequestProtocolType
}

func (m *MobadsRequest) GetPage() *Page {
	if m != nil {
		return m.Page
	}
	return nil
}

// 广告元数据组索引结构
// 一条广告可能包含多个物料元信息,我们统称这些元信息为广告元数据组
// 返回广告时，total_num表明当前广告包含的物料元数据个数，current_index表明当前的物料元数据在元数据组中的索引
// 请求多个广告返回时，ad_key唯一标识一个广告元数据组(一个广告)，MetaIndex标识一个元数据组中的每个元数据信息
type MetaIndex struct {
	TotalNum         *uint32 `protobuf:"varint,1,opt,name=total_num,json=totalNum" json:"total_num,omitempty"`
	CurrentIndex     *uint32 `protobuf:"varint,2,opt,name=current_index,json=currentIndex" json:"current_index,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MetaIndex) Reset()                    { *m = MetaIndex{} }
func (m *MetaIndex) String() string            { return proto.CompactTextString(m) }
func (*MetaIndex) ProtoMessage()               {}
func (*MetaIndex) Descriptor() ([]byte, []int) { return fileDescriptorBaidu, []int{13} }

func (m *MetaIndex) GetTotalNum() uint32 {
	if m != nil && m.TotalNum != nil {
		return *m.TotalNum
	}
	return 0
}

func (m *MetaIndex) GetCurrentIndex() uint32 {
	if m != nil && m.CurrentIndex != nil {
		return *m.CurrentIndex
	}
	return 0
}

// 广告物料元数据信息
type MaterialMeta struct {
	CreativeType     *MaterialMeta_CreativeType    `protobuf:"varint,1,opt,name=creative_type,json=creativeType,enum=protobuf.baidu.MaterialMeta_CreativeType" json:"creative_type,omitempty"`
	InteractionType  *MaterialMeta_InteractionType `protobuf:"varint,2,opt,name=interaction_type,json=interactionType,enum=protobuf.baidu.MaterialMeta_InteractionType" json:"interaction_type,omitempty"`
	WinNoticeUrl     []string                      `protobuf:"bytes,3,rep,name=win_notice_url,json=winNoticeUrl" json:"win_notice_url,omitempty"`
	ClickUrl         *string                       `protobuf:"bytes,4,opt,name=click_url,json=clickUrl" json:"click_url,omitempty"`
	Title            []byte                        `protobuf:"bytes,5,opt,name=title" json:"title,omitempty"`
	Description      [][]byte                      `protobuf:"bytes,6,rep,name=description" json:"description,omitempty"`
	IconSrc          []string                      `protobuf:"bytes,7,rep,name=icon_src,json=iconSrc" json:"icon_src,omitempty"`
	ImageSrc         []string                      `protobuf:"bytes,8,rep,name=image_src,json=imageSrc" json:"image_src,omitempty"`
	AppPackage       *string                       `protobuf:"bytes,9,opt,name=app_package,json=appPackage" json:"app_package,omitempty"`
	AppSize          *uint32                       `protobuf:"varint,10,opt,name=app_size,json=appSize" json:"app_size,omitempty"`
	VideoUrl         *string                       `protobuf:"bytes,11,opt,name=video_url,json=videoUrl" json:"video_url,omitempty"`
	VideoDuration    *uint32                       `protobuf:"varint,12,opt,name=video_duration,json=videoDuration" json:"video_duration,omitempty"`
	MetaIndex        *MetaIndex                    `protobuf:"bytes,13,opt,name=meta_index,json=metaIndex" json:"meta_index,omitempty"`
	MaterialWidth    *uint32                       `protobuf:"varint,14,opt,name=material_width,json=materialWidth" json:"material_width,omitempty"`
	MaterialHeight   *uint32                       `protobuf:"varint,15,opt,name=material_height,json=materialHeight" json:"material_height,omitempty"`
	BrandName        *string                       `protobuf:"bytes,16,opt,name=brand_name,json=brandName" json:"brand_name,omitempty"`
	AdTitle          *string                       `protobuf:"bytes,17,opt,name=ad_title,json=adTitle" json:"ad_title,omitempty"`
	MaterialSize     *uint32                       `protobuf:"varint,18,opt,name=material_size,json=materialSize" json:"material_size,omitempty"`
	DeeplinkUrl      []byte                        `protobuf:"bytes,19,opt,name=deeplink_url,json=deeplinkUrl" json:"deeplink_url,omitempty"`
	FallbackType     *uint32                       `protobuf:"varint,20,opt,name=fallback_type,json=fallbackType" json:"fallback_type,omitempty"`
	FallbackUrl      []byte                        `protobuf:"bytes,21,opt,name=fallback_url,json=fallbackUrl" json:"fallback_url,omitempty"`
	ApkName          *string                       `protobuf:"bytes,22,opt,name=apk_name,json=apkName" json:"apk_name,omitempty"`
	Rating           *float32                      `protobuf:"fixed32,23,opt,name=rating" json:"rating,omitempty"`
	Comments         *uint32                       `protobuf:"varint,24,opt,name=comments" json:"comments,omitempty"`
	ImageSize        *MaterialMeta_ImageSize       `protobuf:"bytes,25,opt,name=image_size,json=imageSize" json:"image_size,omitempty"`
	XXX_unrecognized []byte                        `json:"-"`
}

func (m *MaterialMeta) Reset()                    { *m = MaterialMeta{} }
func (m *MaterialMeta) String() string            { return proto.CompactTextString(m) }
func (*MaterialMeta) ProtoMessage()               {}
func (*MaterialMeta) Descriptor() ([]byte, []int) { return fileDescriptorBaidu, []int{14} }

func (m *MaterialMeta) GetCreativeType() MaterialMeta_CreativeType {
	if m != nil && m.CreativeType != nil {
		return *m.CreativeType
	}
	return MaterialMeta_NO_TYPE
}

func (m *MaterialMeta) GetInteractionType() MaterialMeta_InteractionType {
	if m != nil && m.InteractionType != nil {
		return *m.InteractionType
	}
	return MaterialMeta_NO_INTERACTION
}

func (m *MaterialMeta) GetWinNoticeUrl() []string {
	if m != nil {
		return m.WinNoticeUrl
	}
	return nil
}

func (m *MaterialMeta) GetClickUrl() string {
	if m != nil && m.ClickUrl != nil {
		return *m.ClickUrl
	}
	return ""
}

func (m *MaterialMeta) GetTitle() []byte {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *MaterialMeta) GetDescription() [][]byte {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *MaterialMeta) GetIconSrc() []string {
	if m != nil {
		return m.IconSrc
	}
	return nil
}

func (m *MaterialMeta) GetImageSrc() []string {
	if m != nil {
		return m.ImageSrc
	}
	return nil
}

func (m *MaterialMeta) GetAppPackage() string {
	if m != nil && m.AppPackage != nil {
		return *m.AppPackage
	}
	return ""
}

func (m *MaterialMeta) GetAppSize() uint32 {
	if m != nil && m.AppSize != nil {
		return *m.AppSize
	}
	return 0
}

func (m *MaterialMeta) GetVideoUrl() string {
	if m != nil && m.VideoUrl != nil {
		return *m.VideoUrl
	}
	return ""
}

func (m *MaterialMeta) GetVideoDuration() uint32 {
	if m != nil && m.VideoDuration != nil {
		return *m.VideoDuration
	}
	return 0
}

func (m *MaterialMeta) GetMetaIndex() *MetaIndex {
	if m != nil {
		return m.MetaIndex
	}
	return nil
}

func (m *MaterialMeta) GetMaterialWidth() uint32 {
	if m != nil && m.MaterialWidth != nil {
		return *m.MaterialWidth
	}
	return 0
}

func (m *MaterialMeta) GetMaterialHeight() uint32 {
	if m != nil && m.MaterialHeight != nil {
		return *m.MaterialHeight
	}
	return 0
}

func (m *MaterialMeta) GetBrandName() string {
	if m != nil && m.BrandName != nil {
		return *m.BrandName
	}
	return ""
}

func (m *MaterialMeta) GetAdTitle() string {
	if m != nil && m.AdTitle != nil {
		return *m.AdTitle
	}
	return ""
}

func (m *MaterialMeta) GetMaterialSize() uint32 {
	if m != nil && m.MaterialSize != nil {
		return *m.MaterialSize
	}
	return 0
}

func (m *MaterialMeta) GetDeeplinkUrl() []byte {
	if m != nil {
		return m.DeeplinkUrl
	}
	return nil
}

func (m *MaterialMeta) GetFallbackType() uint32 {
	if m != nil && m.FallbackType != nil {
		return *m.FallbackType
	}
	return 0
}

func (m *MaterialMeta) GetFallbackUrl() []byte {
	if m != nil {
		return m.FallbackUrl
	}
	return nil
}

func (m *MaterialMeta) GetApkName() string {
	if m != nil && m.ApkName != nil {
		return *m.ApkName
	}
	return ""
}

func (m *MaterialMeta) GetRating() float32 {
	if m != nil && m.Rating != nil {
		return *m.Rating
	}
	return 0
}

func (m *MaterialMeta) GetComments() uint32 {
	if m != nil && m.Comments != nil {
		return *m.Comments
	}
	return 0
}

func (m *MaterialMeta) GetImageSize() *MaterialMeta_ImageSize {
	if m != nil {
		return m.ImageSize
	}
	return nil
}

// 图片物料尺寸，宽、高
type MaterialMeta_ImageSize struct {
	Width            *uint32 `protobuf:"varint,1,opt,name=width" json:"width,omitempty"`
	Height           *uint32 `protobuf:"varint,2,opt,name=height" json:"height,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MaterialMeta_ImageSize) Reset()                    { *m = MaterialMeta_ImageSize{} }
func (m *MaterialMeta_ImageSize) String() string            { return proto.CompactTextString(m) }
func (*MaterialMeta_ImageSize) ProtoMessage()               {}
func (*MaterialMeta_ImageSize) Descriptor() ([]byte, []int) { return fileDescriptorBaidu, []int{14, 0} }

func (m *MaterialMeta_ImageSize) GetWidth() uint32 {
	if m != nil && m.Width != nil {
		return *m.Width
	}
	return 0
}

func (m *MaterialMeta_ImageSize) GetHeight() uint32 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

// 广告信息
// 同时填充material_meta和meta_group
// 建议使用meta_group，当前为兼容方案，后续版本将合并material_meta和meta_group为meta_group
type Ad struct {
	AdslotId         *string         `protobuf:"bytes,1,opt,name=adslot_id,json=adslotId" json:"adslot_id,omitempty"`
	HtmlSnippet      []byte          `protobuf:"bytes,2,opt,name=html_snippet,json=htmlSnippet" json:"html_snippet,omitempty"`
	MaterialMeta     *MaterialMeta   `protobuf:"bytes,3,opt,name=material_meta,json=materialMeta" json:"material_meta,omitempty"`
	AdKey            *string         `protobuf:"bytes,4,opt,name=ad_key,json=adKey" json:"ad_key,omitempty"`
	AdTracking       []*Tracking     `protobuf:"bytes,5,rep,name=ad_tracking,json=adTracking" json:"ad_tracking,omitempty"`
	MetaGroup        []*MaterialMeta `protobuf:"bytes,6,rep,name=meta_group,json=metaGroup" json:"meta_group,omitempty"`
	MobAdtext        *string         `protobuf:"bytes,7,opt,name=mob_adtext,json=mobAdtext" json:"mob_adtext,omitempty"`
	MobAdlogo        *string         `protobuf:"bytes,8,opt,name=mob_adlogo,json=mobAdlogo" json:"mob_adlogo,omitempty"`
	CpmBid           *uint32         `protobuf:"varint,9,opt,name=cpm_bid,json=cpmBid" json:"cpm_bid,omitempty"`
	Md5              *string         `protobuf:"bytes,10,opt,name=md5" json:"md5,omitempty"`
	AdslotType       *uint32         `protobuf:"varint,11,opt,name=adslot_type,json=adslotType" json:"adslot_type,omitempty"`
	ChargeType       *uint32         `protobuf:"varint,12,opt,name=charge_type,json=chargeType" json:"charge_type,omitempty"`
	BuyerId          *uint32         `protobuf:"varint,13,opt,name=buyer_id,json=buyerId" json:"buyer_id,omitempty"`
	AntiTag          *int32          `protobuf:"varint,14,opt,name=anti_tag,json=antiTag" json:"anti_tag,omitempty"`
	StartTime        *uint64         `protobuf:"varint,15,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime          *uint64         `protobuf:"varint,16,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Ad) Reset()                    { *m = Ad{} }
func (m *Ad) String() string            { return proto.CompactTextString(m) }
func (*Ad) ProtoMessage()               {}
func (*Ad) Descriptor() ([]byte, []int) { return fileDescriptorBaidu, []int{15} }

func (m *Ad) GetAdslotId() string {
	if m != nil && m.AdslotId != nil {
		return *m.AdslotId
	}
	return ""
}

func (m *Ad) GetHtmlSnippet() []byte {
	if m != nil {
		return m.HtmlSnippet
	}
	return nil
}

func (m *Ad) GetMaterialMeta() *MaterialMeta {
	if m != nil {
		return m.MaterialMeta
	}
	return nil
}

func (m *Ad) GetAdKey() string {
	if m != nil && m.AdKey != nil {
		return *m.AdKey
	}
	return ""
}

func (m *Ad) GetAdTracking() []*Tracking {
	if m != nil {
		return m.AdTracking
	}
	return nil
}

func (m *Ad) GetMetaGroup() []*MaterialMeta {
	if m != nil {
		return m.MetaGroup
	}
	return nil
}

func (m *Ad) GetMobAdtext() string {
	if m != nil && m.MobAdtext != nil {
		return *m.MobAdtext
	}
	return ""
}

func (m *Ad) GetMobAdlogo() string {
	if m != nil && m.MobAdlogo != nil {
		return *m.MobAdlogo
	}
	return ""
}

func (m *Ad) GetCpmBid() uint32 {
	if m != nil && m.CpmBid != nil {
		return *m.CpmBid
	}
	return 0
}

func (m *Ad) GetMd5() string {
	if m != nil && m.Md5 != nil {
		return *m.Md5
	}
	return ""
}

func (m *Ad) GetAdslotType() uint32 {
	if m != nil && m.AdslotType != nil {
		return *m.AdslotType
	}
	return 0
}

func (m *Ad) GetChargeType() uint32 {
	if m != nil && m.ChargeType != nil {
		return *m.ChargeType
	}
	return 0
}

func (m *Ad) GetBuyerId() uint32 {
	if m != nil && m.BuyerId != nil {
		return *m.BuyerId
	}
	return 0
}

func (m *Ad) GetAntiTag() int32 {
	if m != nil && m.AntiTag != nil {
		return *m.AntiTag
	}
	return 0
}

func (m *Ad) GetStartTime() uint64 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *Ad) GetEndTime() uint64 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

// Baidu Mobads API应答
type MobadsResponse struct {
	RequestId        *string `protobuf:"bytes,1,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	ErrorCode        *uint64 `protobuf:"varint,2,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	Ads              []*Ad   `protobuf:"bytes,3,rep,name=ads" json:"ads,omitempty"`
	ExpirationTime   *uint32 `protobuf:"varint,4,opt,name=expiration_time,json=expirationTime" json:"expiration_time,omitempty"`
	SearchKey        *string `protobuf:"bytes,5,opt,name=search_key,json=searchKey" json:"search_key,omitempty"`
	ExtStyle         []byte  `protobuf:"bytes,6,opt,name=ext_style,json=extStyle" json:"ext_style,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MobadsResponse) Reset()                    { *m = MobadsResponse{} }
func (m *MobadsResponse) String() string            { return proto.CompactTextString(m) }
func (*MobadsResponse) ProtoMessage()               {}
func (*MobadsResponse) Descriptor() ([]byte, []int) { return fileDescriptorBaidu, []int{16} }

func (m *MobadsResponse) GetRequestId() string {
	if m != nil && m.RequestId != nil {
		return *m.RequestId
	}
	return ""
}

func (m *MobadsResponse) GetErrorCode() uint64 {
	if m != nil && m.ErrorCode != nil {
		return *m.ErrorCode
	}
	return 0
}

func (m *MobadsResponse) GetAds() []*Ad {
	if m != nil {
		return m.Ads
	}
	return nil
}

func (m *MobadsResponse) GetExpirationTime() uint32 {
	if m != nil && m.ExpirationTime != nil {
		return *m.ExpirationTime
	}
	return 0
}

func (m *MobadsResponse) GetSearchKey() string {
	if m != nil && m.SearchKey != nil {
		return *m.SearchKey
	}
	return ""
}

func (m *MobadsResponse) GetExtStyle() []byte {
	if m != nil {
		return m.ExtStyle
	}
	return nil
}

func init() {
	proto.RegisterType((*Version)(nil), "protobuf.baidu.Version")
	proto.RegisterType((*App)(nil), "protobuf.baidu.App")
	proto.RegisterType((*UdId)(nil), "protobuf.baidu.UdId")
	proto.RegisterType((*Size)(nil), "protobuf.baidu.Size")
	proto.RegisterType((*Device)(nil), "protobuf.baidu.Device")
	proto.RegisterType((*WiFiAp)(nil), "protobuf.baidu.WiFiAp")
	proto.RegisterType((*Network)(nil), "protobuf.baidu.Network")
	proto.RegisterType((*Gps)(nil), "protobuf.baidu.Gps")
	proto.RegisterType((*Tracking)(nil), "protobuf.baidu.Tracking")
	proto.RegisterType((*Video)(nil), "protobuf.baidu.Video")
	proto.RegisterType((*Page)(nil), "protobuf.baidu.Page")
	proto.RegisterType((*AdSlot)(nil), "protobuf.baidu.AdSlot")
	proto.RegisterType((*MobadsRequest)(nil), "protobuf.baidu.MobadsRequest")
	proto.RegisterType((*MetaIndex)(nil), "protobuf.baidu.MetaIndex")
	proto.RegisterType((*MaterialMeta)(nil), "protobuf.baidu.MaterialMeta")
	proto.RegisterType((*MaterialMeta_ImageSize)(nil), "protobuf.baidu.MaterialMeta.ImageSize")
	proto.RegisterType((*Ad)(nil), "protobuf.baidu.Ad")
	proto.RegisterType((*MobadsResponse)(nil), "protobuf.baidu.MobadsResponse")
	proto.RegisterEnum("protobuf.baidu.Device_DeviceType", Device_DeviceType_name, Device_DeviceType_value)
	proto.RegisterEnum("protobuf.baidu.Device_OsType", Device_OsType_name, Device_OsType_value)
	proto.RegisterEnum("protobuf.baidu.Network_ConnectionType", Network_ConnectionType_name, Network_ConnectionType_value)
	proto.RegisterEnum("protobuf.baidu.Network_OperatorType", Network_OperatorType_name, Network_OperatorType_value)
	proto.RegisterEnum("protobuf.baidu.Gps_CoordinateType", Gps_CoordinateType_name, Gps_CoordinateType_value)
	proto.RegisterEnum("protobuf.baidu.Tracking_TrackingEvent", Tracking_TrackingEvent_name, Tracking_TrackingEvent_value)
	proto.RegisterEnum("protobuf.baidu.Video_CopyRight", Video_CopyRight_name, Video_CopyRight_value)
	proto.RegisterEnum("protobuf.baidu.Video_MaterialFormat", Video_MaterialFormat_name, Video_MaterialFormat_value)
	proto.RegisterEnum("protobuf.baidu.MobadsRequest_RequestProtocolType", MobadsRequest_RequestProtocolType_name, MobadsRequest_RequestProtocolType_value)
	proto.RegisterEnum("protobuf.baidu.MaterialMeta_CreativeType", MaterialMeta_CreativeType_name, MaterialMeta_CreativeType_value)
	proto.RegisterEnum("protobuf.baidu.MaterialMeta_InteractionType", MaterialMeta_InteractionType_name, MaterialMeta_InteractionType_value)
}
func (m *Version) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Version) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Major != nil {
		dAtA[i] = 0x8
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(*m.Major))
	}
	if m.Minor != nil {
		dAtA[i] = 0x10
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(*m.Minor))
	}
	if m.Micro != nil {
		dAtA[i] = 0x18
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(*m.Micro))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *App) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *App) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.AppId != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(*m.AppId)))
		i += copy(dAtA[i:], *m.AppId)
	}
	if m.ChannelId != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(*m.ChannelId)))
		i += copy(dAtA[i:], *m.ChannelId)
	}
	if m.AppVersion != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(m.AppVersion.Size()))
		n1, err := m.AppVersion.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	if m.AppPackage != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(*m.AppPackage)))
		i += copy(dAtA[i:], *m.AppPackage)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *UdId) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UdId) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Idfa != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(*m.Idfa)))
		i += copy(dAtA[i:], *m.Idfa)
	}
	if m.Imei != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(*m.Imei)))
		i += copy(dAtA[i:], *m.Imei)
	}
	if m.Mac != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(*m.Mac)))
		i += copy(dAtA[i:], *m.Mac)
	}
	if m.ImeiMd5 != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(*m.ImeiMd5)))
		i += copy(dAtA[i:], *m.ImeiMd5)
	}
	if m.AndroidId != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(*m.AndroidId)))
		i += copy(dAtA[i:], *m.AndroidId)
	}
	if m.Baiduid != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(*m.Baiduid)))
		i += copy(dAtA[i:], *m.Baiduid)
	}
	if m.Cuid != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(*m.Cuid)))
		i += copy(dAtA[i:], *m.Cuid)
	}
	if m.IdfaMd5 != nil {
		dAtA[i] = 0x42
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(*m.IdfaMd5)))
		i += copy(dAtA[i:], *m.IdfaMd5)
	}
	if m.AndroididMd5 != nil {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(*m.AndroididMd5)))
		i += copy(dAtA[i:], *m.AndroididMd5)
	}
	if m.Passport != nil {
		dAtA[i] = 0x52
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(*m.Passport)))
		i += copy(dAtA[i:], *m.Passport)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Size) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Size) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Width != nil {
		dAtA[i] = 0x8
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(*m.Width))
	}
	if m.Height != nil {
		dAtA[i] = 0x10
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(*m.Height))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Device) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Device) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.DeviceType != nil {
		dAtA[i] = 0x8
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(*m.DeviceType))
	}
	if m.OsType != nil {
		dAtA[i] = 0x10
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(*m.OsType))
	}
	if m.OsVersion != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(m.OsVersion.Size()))
		n2, err := m.OsVersion.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	if m.Vendor != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(m.Vendor)))
		i += copy(dAtA[i:], m.Vendor)
	}
	if m.Model != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(m.Model)))
		i += copy(dAtA[i:], m.Model)
	}
	if m.Udid != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(m.Udid.Size()))
		n3, err := m.Udid.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n3
	}
	if m.ScreenSize != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(m.ScreenSize.Size()))
		n4, err := m.ScreenSize.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n4
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *WiFiAp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WiFiAp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.ApMac != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(*m.ApMac)))
		i += copy(dAtA[i:], *m.ApMac)
	}
	if m.Rssi != nil {
		dAtA[i] = 0x10
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(*m.Rssi))
	}
	if m.ApName != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(m.ApName)))
		i += copy(dAtA[i:], m.ApName)
	}
	if m.IsConnected != nil {
		dAtA[i] = 0x20
		i++
		if *m.IsConnected {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Network) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Network) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Ipv4 != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(*m.Ipv4)))
		i += copy(dAtA[i:], *m.Ipv4)
	}
	if m.ConnectionType != nil {
		dAtA[i] = 0x10
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(*m.ConnectionType))
	}
	if m.OperatorType != nil {
		dAtA[i] = 0x18
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(*m.OperatorType))
	}
	if m.CellularId != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(*m.CellularId)))
		i += copy(dAtA[i:], *m.CellularId)
	}
	if len(m.WifiAps) > 0 {
		for _, msg := range m.WifiAps {
			dAtA[i] = 0x2a
			i++
			i = encodeVarintBaidu(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Gps) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Gps) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.CoordinateType != nil {
		dAtA[i] = 0x8
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(*m.CoordinateType))
	}
	if m.Longitude != nil {
		dAtA[i] = 0x11
		i++
		binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(*m.Longitude))))
		i += 8
	}
	if m.Latitude != nil {
		dAtA[i] = 0x19
		i++
		binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(*m.Latitude))))
		i += 8
	}
	if m.Timestamp != nil {
		dAtA[i] = 0x20
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(*m.Timestamp))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Tracking) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Tracking) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.TrackingEvent != nil {
		dAtA[i] = 0x8
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(*m.TrackingEvent))
	}
	if len(m.TrackingUrl) > 0 {
		for _, s := range m.TrackingUrl {
			dAtA[i] = 0x12
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Video) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Video) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Title != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(m.Title)))
		i += copy(dAtA[i:], m.Title)
	}
	if m.ContentLength != nil {
		dAtA[i] = 0x10
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(*m.ContentLength))
	}
	if m.Copyright != nil {
		dAtA[i] = 0x18
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(*m.Copyright))
	}
	if len(m.MaterialFormat) > 0 {
		for _, num := range m.MaterialFormat {
			dAtA[i] = 0x20
			i++
			i = encodeVarintBaidu(dAtA, i, uint64(num))
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Page) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Page) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Url != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(m.Url)))
		i += copy(dAtA[i:], m.Url)
	}
	if m.Title != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(m.Title)))
		i += copy(dAtA[i:], m.Title)
	}
	if m.SourceUrl != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(m.SourceUrl)))
		i += copy(dAtA[i:], m.SourceUrl)
	}
	if m.ContentId != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(*m.ContentId)))
		i += copy(dAtA[i:], *m.ContentId)
	}
	if len(m.ContentCategory) > 0 {
		for _, b := range m.ContentCategory {
			dAtA[i] = 0x2a
			i++
			i = encodeVarintBaidu(dAtA, i, uint64(len(b)))
			i += copy(dAtA[i:], b)
		}
	}
	if len(m.ContentLabel) > 0 {
		for _, b := range m.ContentLabel {
			dAtA[i] = 0x32
			i++
			i = encodeVarintBaidu(dAtA, i, uint64(len(b)))
			i += copy(dAtA[i:], b)
		}
	}
	if m.AuthorId != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(*m.AuthorId)))
		i += copy(dAtA[i:], *m.AuthorId)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *AdSlot) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AdSlot) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.AdslotId != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(*m.AdslotId)))
		i += copy(dAtA[i:], *m.AdslotId)
	}
	if m.AdslotSize != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(m.AdslotSize.Size()))
		n5, err := m.AdslotSize.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n5
	}
	if len(m.Topics) > 0 {
		for _, b := range m.Topics {
			dAtA[i] = 0x1a
			i++
			i = encodeVarintBaidu(dAtA, i, uint64(len(b)))
			i += copy(dAtA[i:], b)
		}
	}
	if m.Video != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(m.Video.Size()))
		n6, err := m.Video.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n6
	}
	if m.Ctkey != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(*m.Ctkey)))
		i += copy(dAtA[i:], *m.Ctkey)
	}
	if m.SequenceId != nil {
		dAtA[i] = 0x30
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(*m.SequenceId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *MobadsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MobadsRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.RequestId != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(*m.RequestId)))
		i += copy(dAtA[i:], *m.RequestId)
	}
	if m.ApiVersion != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(m.ApiVersion.Size()))
		n7, err := m.ApiVersion.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n7
	}
	if m.App != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(m.App.Size()))
		n8, err := m.App.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n8
	}
	if m.Device != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(m.Device.Size()))
		n9, err := m.Device.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n9
	}
	if m.Network != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(m.Network.Size()))
		n10, err := m.Network.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n10
	}
	if m.Gps != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(m.Gps.Size()))
		n11, err := m.Gps.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n11
	}
	if m.Adslot != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(m.Adslot.Size()))
		n12, err := m.Adslot.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n12
	}
	if m.IsDebug != nil {
		dAtA[i] = 0x40
		i++
		if *m.IsDebug {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.RequestProtocolType != nil {
		dAtA[i] = 0x48
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(*m.RequestProtocolType))
	}
	if m.Page != nil {
		dAtA[i] = 0x52
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(m.Page.Size()))
		n13, err := m.Page.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n13
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *MetaIndex) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MetaIndex) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.TotalNum != nil {
		dAtA[i] = 0x8
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(*m.TotalNum))
	}
	if m.CurrentIndex != nil {
		dAtA[i] = 0x10
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(*m.CurrentIndex))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *MaterialMeta) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MaterialMeta) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.CreativeType != nil {
		dAtA[i] = 0x8
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(*m.CreativeType))
	}
	if m.InteractionType != nil {
		dAtA[i] = 0x10
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(*m.InteractionType))
	}
	if len(m.WinNoticeUrl) > 0 {
		for _, s := range m.WinNoticeUrl {
			dAtA[i] = 0x1a
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if m.ClickUrl != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(*m.ClickUrl)))
		i += copy(dAtA[i:], *m.ClickUrl)
	}
	if m.Title != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(m.Title)))
		i += copy(dAtA[i:], m.Title)
	}
	if len(m.Description) > 0 {
		for _, b := range m.Description {
			dAtA[i] = 0x32
			i++
			i = encodeVarintBaidu(dAtA, i, uint64(len(b)))
			i += copy(dAtA[i:], b)
		}
	}
	if len(m.IconSrc) > 0 {
		for _, s := range m.IconSrc {
			dAtA[i] = 0x3a
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if len(m.ImageSrc) > 0 {
		for _, s := range m.ImageSrc {
			dAtA[i] = 0x42
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if m.AppPackage != nil {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(*m.AppPackage)))
		i += copy(dAtA[i:], *m.AppPackage)
	}
	if m.AppSize != nil {
		dAtA[i] = 0x50
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(*m.AppSize))
	}
	if m.VideoUrl != nil {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(*m.VideoUrl)))
		i += copy(dAtA[i:], *m.VideoUrl)
	}
	if m.VideoDuration != nil {
		dAtA[i] = 0x60
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(*m.VideoDuration))
	}
	if m.MetaIndex != nil {
		dAtA[i] = 0x6a
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(m.MetaIndex.Size()))
		n14, err := m.MetaIndex.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n14
	}
	if m.MaterialWidth != nil {
		dAtA[i] = 0x70
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(*m.MaterialWidth))
	}
	if m.MaterialHeight != nil {
		dAtA[i] = 0x78
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(*m.MaterialHeight))
	}
	if m.BrandName != nil {
		dAtA[i] = 0x82
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(*m.BrandName)))
		i += copy(dAtA[i:], *m.BrandName)
	}
	if m.AdTitle != nil {
		dAtA[i] = 0x8a
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(*m.AdTitle)))
		i += copy(dAtA[i:], *m.AdTitle)
	}
	if m.MaterialSize != nil {
		dAtA[i] = 0x90
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(*m.MaterialSize))
	}
	if m.DeeplinkUrl != nil {
		dAtA[i] = 0x9a
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(m.DeeplinkUrl)))
		i += copy(dAtA[i:], m.DeeplinkUrl)
	}
	if m.FallbackType != nil {
		dAtA[i] = 0xa0
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(*m.FallbackType))
	}
	if m.FallbackUrl != nil {
		dAtA[i] = 0xaa
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(m.FallbackUrl)))
		i += copy(dAtA[i:], m.FallbackUrl)
	}
	if m.ApkName != nil {
		dAtA[i] = 0xb2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(*m.ApkName)))
		i += copy(dAtA[i:], *m.ApkName)
	}
	if m.Rating != nil {
		dAtA[i] = 0xbd
		i++
		dAtA[i] = 0x1
		i++
		binary.LittleEndian.PutUint32(dAtA[i:], uint32(math.Float32bits(float32(*m.Rating))))
		i += 4
	}
	if m.Comments != nil {
		dAtA[i] = 0xc0
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(*m.Comments))
	}
	if m.ImageSize != nil {
		dAtA[i] = 0xca
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(m.ImageSize.Size()))
		n15, err := m.ImageSize.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n15
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *MaterialMeta_ImageSize) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MaterialMeta_ImageSize) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Width != nil {
		dAtA[i] = 0x8
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(*m.Width))
	}
	if m.Height != nil {
		dAtA[i] = 0x10
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(*m.Height))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Ad) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Ad) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.AdslotId != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(*m.AdslotId)))
		i += copy(dAtA[i:], *m.AdslotId)
	}
	if m.HtmlSnippet != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(m.HtmlSnippet)))
		i += copy(dAtA[i:], m.HtmlSnippet)
	}
	if m.MaterialMeta != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(m.MaterialMeta.Size()))
		n16, err := m.MaterialMeta.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n16
	}
	if m.AdKey != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(*m.AdKey)))
		i += copy(dAtA[i:], *m.AdKey)
	}
	if len(m.AdTracking) > 0 {
		for _, msg := range m.AdTracking {
			dAtA[i] = 0x2a
			i++
			i = encodeVarintBaidu(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.MetaGroup) > 0 {
		for _, msg := range m.MetaGroup {
			dAtA[i] = 0x32
			i++
			i = encodeVarintBaidu(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.MobAdtext != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(*m.MobAdtext)))
		i += copy(dAtA[i:], *m.MobAdtext)
	}
	if m.MobAdlogo != nil {
		dAtA[i] = 0x42
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(*m.MobAdlogo)))
		i += copy(dAtA[i:], *m.MobAdlogo)
	}
	if m.CpmBid != nil {
		dAtA[i] = 0x48
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(*m.CpmBid))
	}
	if m.Md5 != nil {
		dAtA[i] = 0x52
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(*m.Md5)))
		i += copy(dAtA[i:], *m.Md5)
	}
	if m.AdslotType != nil {
		dAtA[i] = 0x58
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(*m.AdslotType))
	}
	if m.ChargeType != nil {
		dAtA[i] = 0x60
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(*m.ChargeType))
	}
	if m.BuyerId != nil {
		dAtA[i] = 0x68
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(*m.BuyerId))
	}
	if m.AntiTag != nil {
		dAtA[i] = 0x70
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(*m.AntiTag))
	}
	if m.StartTime != nil {
		dAtA[i] = 0x78
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(*m.StartTime))
	}
	if m.EndTime != nil {
		dAtA[i] = 0x80
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(*m.EndTime))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *MobadsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MobadsResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.RequestId != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(*m.RequestId)))
		i += copy(dAtA[i:], *m.RequestId)
	}
	if m.ErrorCode != nil {
		dAtA[i] = 0x10
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(*m.ErrorCode))
	}
	if len(m.Ads) > 0 {
		for _, msg := range m.Ads {
			dAtA[i] = 0x1a
			i++
			i = encodeVarintBaidu(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.ExpirationTime != nil {
		dAtA[i] = 0x20
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(*m.ExpirationTime))
	}
	if m.SearchKey != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(*m.SearchKey)))
		i += copy(dAtA[i:], *m.SearchKey)
	}
	if m.ExtStyle != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintBaidu(dAtA, i, uint64(len(m.ExtStyle)))
		i += copy(dAtA[i:], m.ExtStyle)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintBaidu(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *Version) Size() (n int) {
	var l int
	_ = l
	if m.Major != nil {
		n += 1 + sovBaidu(uint64(*m.Major))
	}
	if m.Minor != nil {
		n += 1 + sovBaidu(uint64(*m.Minor))
	}
	if m.Micro != nil {
		n += 1 + sovBaidu(uint64(*m.Micro))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *App) Size() (n int) {
	var l int
	_ = l
	if m.AppId != nil {
		l = len(*m.AppId)
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.ChannelId != nil {
		l = len(*m.ChannelId)
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.AppVersion != nil {
		l = m.AppVersion.Size()
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.AppPackage != nil {
		l = len(*m.AppPackage)
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UdId) Size() (n int) {
	var l int
	_ = l
	if m.Idfa != nil {
		l = len(*m.Idfa)
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.Imei != nil {
		l = len(*m.Imei)
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.Mac != nil {
		l = len(*m.Mac)
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.ImeiMd5 != nil {
		l = len(*m.ImeiMd5)
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.AndroidId != nil {
		l = len(*m.AndroidId)
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.Baiduid != nil {
		l = len(*m.Baiduid)
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.Cuid != nil {
		l = len(*m.Cuid)
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.IdfaMd5 != nil {
		l = len(*m.IdfaMd5)
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.AndroididMd5 != nil {
		l = len(*m.AndroididMd5)
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.Passport != nil {
		l = len(*m.Passport)
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Size) Size() (n int) {
	var l int
	_ = l
	if m.Width != nil {
		n += 1 + sovBaidu(uint64(*m.Width))
	}
	if m.Height != nil {
		n += 1 + sovBaidu(uint64(*m.Height))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Device) Size() (n int) {
	var l int
	_ = l
	if m.DeviceType != nil {
		n += 1 + sovBaidu(uint64(*m.DeviceType))
	}
	if m.OsType != nil {
		n += 1 + sovBaidu(uint64(*m.OsType))
	}
	if m.OsVersion != nil {
		l = m.OsVersion.Size()
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.Vendor != nil {
		l = len(m.Vendor)
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.Model != nil {
		l = len(m.Model)
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.Udid != nil {
		l = m.Udid.Size()
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.ScreenSize != nil {
		l = m.ScreenSize.Size()
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *WiFiAp) Size() (n int) {
	var l int
	_ = l
	if m.ApMac != nil {
		l = len(*m.ApMac)
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.Rssi != nil {
		n += 1 + sovBaidu(uint64(*m.Rssi))
	}
	if m.ApName != nil {
		l = len(m.ApName)
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.IsConnected != nil {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Network) Size() (n int) {
	var l int
	_ = l
	if m.Ipv4 != nil {
		l = len(*m.Ipv4)
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.ConnectionType != nil {
		n += 1 + sovBaidu(uint64(*m.ConnectionType))
	}
	if m.OperatorType != nil {
		n += 1 + sovBaidu(uint64(*m.OperatorType))
	}
	if m.CellularId != nil {
		l = len(*m.CellularId)
		n += 1 + l + sovBaidu(uint64(l))
	}
	if len(m.WifiAps) > 0 {
		for _, e := range m.WifiAps {
			l = e.Size()
			n += 1 + l + sovBaidu(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Gps) Size() (n int) {
	var l int
	_ = l
	if m.CoordinateType != nil {
		n += 1 + sovBaidu(uint64(*m.CoordinateType))
	}
	if m.Longitude != nil {
		n += 9
	}
	if m.Latitude != nil {
		n += 9
	}
	if m.Timestamp != nil {
		n += 1 + sovBaidu(uint64(*m.Timestamp))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Tracking) Size() (n int) {
	var l int
	_ = l
	if m.TrackingEvent != nil {
		n += 1 + sovBaidu(uint64(*m.TrackingEvent))
	}
	if len(m.TrackingUrl) > 0 {
		for _, s := range m.TrackingUrl {
			l = len(s)
			n += 1 + l + sovBaidu(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Video) Size() (n int) {
	var l int
	_ = l
	if m.Title != nil {
		l = len(m.Title)
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.ContentLength != nil {
		n += 1 + sovBaidu(uint64(*m.ContentLength))
	}
	if m.Copyright != nil {
		n += 1 + sovBaidu(uint64(*m.Copyright))
	}
	if len(m.MaterialFormat) > 0 {
		for _, e := range m.MaterialFormat {
			n += 1 + sovBaidu(uint64(e))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Page) Size() (n int) {
	var l int
	_ = l
	if m.Url != nil {
		l = len(m.Url)
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.Title != nil {
		l = len(m.Title)
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.SourceUrl != nil {
		l = len(m.SourceUrl)
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.ContentId != nil {
		l = len(*m.ContentId)
		n += 1 + l + sovBaidu(uint64(l))
	}
	if len(m.ContentCategory) > 0 {
		for _, b := range m.ContentCategory {
			l = len(b)
			n += 1 + l + sovBaidu(uint64(l))
		}
	}
	if len(m.ContentLabel) > 0 {
		for _, b := range m.ContentLabel {
			l = len(b)
			n += 1 + l + sovBaidu(uint64(l))
		}
	}
	if m.AuthorId != nil {
		l = len(*m.AuthorId)
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AdSlot) Size() (n int) {
	var l int
	_ = l
	if m.AdslotId != nil {
		l = len(*m.AdslotId)
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.AdslotSize != nil {
		l = m.AdslotSize.Size()
		n += 1 + l + sovBaidu(uint64(l))
	}
	if len(m.Topics) > 0 {
		for _, b := range m.Topics {
			l = len(b)
			n += 1 + l + sovBaidu(uint64(l))
		}
	}
	if m.Video != nil {
		l = m.Video.Size()
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.Ctkey != nil {
		l = len(*m.Ctkey)
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.SequenceId != nil {
		n += 1 + sovBaidu(uint64(*m.SequenceId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MobadsRequest) Size() (n int) {
	var l int
	_ = l
	if m.RequestId != nil {
		l = len(*m.RequestId)
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.ApiVersion != nil {
		l = m.ApiVersion.Size()
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.App != nil {
		l = m.App.Size()
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.Device != nil {
		l = m.Device.Size()
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.Network != nil {
		l = m.Network.Size()
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.Gps != nil {
		l = m.Gps.Size()
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.Adslot != nil {
		l = m.Adslot.Size()
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.IsDebug != nil {
		n += 2
	}
	if m.RequestProtocolType != nil {
		n += 1 + sovBaidu(uint64(*m.RequestProtocolType))
	}
	if m.Page != nil {
		l = m.Page.Size()
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MetaIndex) Size() (n int) {
	var l int
	_ = l
	if m.TotalNum != nil {
		n += 1 + sovBaidu(uint64(*m.TotalNum))
	}
	if m.CurrentIndex != nil {
		n += 1 + sovBaidu(uint64(*m.CurrentIndex))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MaterialMeta) Size() (n int) {
	var l int
	_ = l
	if m.CreativeType != nil {
		n += 1 + sovBaidu(uint64(*m.CreativeType))
	}
	if m.InteractionType != nil {
		n += 1 + sovBaidu(uint64(*m.InteractionType))
	}
	if len(m.WinNoticeUrl) > 0 {
		for _, s := range m.WinNoticeUrl {
			l = len(s)
			n += 1 + l + sovBaidu(uint64(l))
		}
	}
	if m.ClickUrl != nil {
		l = len(*m.ClickUrl)
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.Title != nil {
		l = len(m.Title)
		n += 1 + l + sovBaidu(uint64(l))
	}
	if len(m.Description) > 0 {
		for _, b := range m.Description {
			l = len(b)
			n += 1 + l + sovBaidu(uint64(l))
		}
	}
	if len(m.IconSrc) > 0 {
		for _, s := range m.IconSrc {
			l = len(s)
			n += 1 + l + sovBaidu(uint64(l))
		}
	}
	if len(m.ImageSrc) > 0 {
		for _, s := range m.ImageSrc {
			l = len(s)
			n += 1 + l + sovBaidu(uint64(l))
		}
	}
	if m.AppPackage != nil {
		l = len(*m.AppPackage)
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.AppSize != nil {
		n += 1 + sovBaidu(uint64(*m.AppSize))
	}
	if m.VideoUrl != nil {
		l = len(*m.VideoUrl)
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.VideoDuration != nil {
		n += 1 + sovBaidu(uint64(*m.VideoDuration))
	}
	if m.MetaIndex != nil {
		l = m.MetaIndex.Size()
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.MaterialWidth != nil {
		n += 1 + sovBaidu(uint64(*m.MaterialWidth))
	}
	if m.MaterialHeight != nil {
		n += 1 + sovBaidu(uint64(*m.MaterialHeight))
	}
	if m.BrandName != nil {
		l = len(*m.BrandName)
		n += 2 + l + sovBaidu(uint64(l))
	}
	if m.AdTitle != nil {
		l = len(*m.AdTitle)
		n += 2 + l + sovBaidu(uint64(l))
	}
	if m.MaterialSize != nil {
		n += 2 + sovBaidu(uint64(*m.MaterialSize))
	}
	if m.DeeplinkUrl != nil {
		l = len(m.DeeplinkUrl)
		n += 2 + l + sovBaidu(uint64(l))
	}
	if m.FallbackType != nil {
		n += 2 + sovBaidu(uint64(*m.FallbackType))
	}
	if m.FallbackUrl != nil {
		l = len(m.FallbackUrl)
		n += 2 + l + sovBaidu(uint64(l))
	}
	if m.ApkName != nil {
		l = len(*m.ApkName)
		n += 2 + l + sovBaidu(uint64(l))
	}
	if m.Rating != nil {
		n += 6
	}
	if m.Comments != nil {
		n += 2 + sovBaidu(uint64(*m.Comments))
	}
	if m.ImageSize != nil {
		l = m.ImageSize.Size()
		n += 2 + l + sovBaidu(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MaterialMeta_ImageSize) Size() (n int) {
	var l int
	_ = l
	if m.Width != nil {
		n += 1 + sovBaidu(uint64(*m.Width))
	}
	if m.Height != nil {
		n += 1 + sovBaidu(uint64(*m.Height))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Ad) Size() (n int) {
	var l int
	_ = l
	if m.AdslotId != nil {
		l = len(*m.AdslotId)
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.HtmlSnippet != nil {
		l = len(m.HtmlSnippet)
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.MaterialMeta != nil {
		l = m.MaterialMeta.Size()
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.AdKey != nil {
		l = len(*m.AdKey)
		n += 1 + l + sovBaidu(uint64(l))
	}
	if len(m.AdTracking) > 0 {
		for _, e := range m.AdTracking {
			l = e.Size()
			n += 1 + l + sovBaidu(uint64(l))
		}
	}
	if len(m.MetaGroup) > 0 {
		for _, e := range m.MetaGroup {
			l = e.Size()
			n += 1 + l + sovBaidu(uint64(l))
		}
	}
	if m.MobAdtext != nil {
		l = len(*m.MobAdtext)
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.MobAdlogo != nil {
		l = len(*m.MobAdlogo)
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.CpmBid != nil {
		n += 1 + sovBaidu(uint64(*m.CpmBid))
	}
	if m.Md5 != nil {
		l = len(*m.Md5)
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.AdslotType != nil {
		n += 1 + sovBaidu(uint64(*m.AdslotType))
	}
	if m.ChargeType != nil {
		n += 1 + sovBaidu(uint64(*m.ChargeType))
	}
	if m.BuyerId != nil {
		n += 1 + sovBaidu(uint64(*m.BuyerId))
	}
	if m.AntiTag != nil {
		n += 1 + sovBaidu(uint64(*m.AntiTag))
	}
	if m.StartTime != nil {
		n += 1 + sovBaidu(uint64(*m.StartTime))
	}
	if m.EndTime != nil {
		n += 2 + sovBaidu(uint64(*m.EndTime))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MobadsResponse) Size() (n int) {
	var l int
	_ = l
	if m.RequestId != nil {
		l = len(*m.RequestId)
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.ErrorCode != nil {
		n += 1 + sovBaidu(uint64(*m.ErrorCode))
	}
	if len(m.Ads) > 0 {
		for _, e := range m.Ads {
			l = e.Size()
			n += 1 + l + sovBaidu(uint64(l))
		}
	}
	if m.ExpirationTime != nil {
		n += 1 + sovBaidu(uint64(*m.ExpirationTime))
	}
	if m.SearchKey != nil {
		l = len(*m.SearchKey)
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.ExtStyle != nil {
		l = len(m.ExtStyle)
		n += 1 + l + sovBaidu(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovBaidu(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozBaidu(x uint64) (n int) {
	return sovBaidu(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Version) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBaidu
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Version: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Version: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Major", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Major = &v
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Minor", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Minor = &v
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Micro", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Micro = &v
		default:
			iNdEx = preIndex
			skippy, err := skipBaidu(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBaidu
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *App) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBaidu
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: App: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: App: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.AppId = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChannelId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ChannelId = &s
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppVersion", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AppVersion == nil {
				m.AppVersion = &Version{}
			}
			if err := m.AppVersion.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppPackage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.AppPackage = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBaidu(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBaidu
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UdId) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBaidu
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UdId: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UdId: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Idfa", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Idfa = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Imei", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Imei = &s
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mac", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Mac = &s
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImeiMd5", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ImeiMd5 = &s
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AndroidId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.AndroidId = &s
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Baiduid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Baiduid = &s
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cuid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Cuid = &s
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IdfaMd5", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.IdfaMd5 = &s
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AndroididMd5", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.AndroididMd5 = &s
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Passport", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Passport = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBaidu(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBaidu
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Size) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBaidu
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Size: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Size: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Width", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Width = &v
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Height = &v
		default:
			iNdEx = preIndex
			skippy, err := skipBaidu(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBaidu
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Device) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBaidu
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Device: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Device: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeviceType", wireType)
			}
			var v Device_DeviceType
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (Device_DeviceType(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DeviceType = &v
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OsType", wireType)
			}
			var v Device_OsType
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (Device_OsType(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OsType = &v
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OsVersion", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.OsVersion == nil {
				m.OsVersion = &Version{}
			}
			if err := m.OsVersion.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vendor", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Vendor = append(m.Vendor[:0], dAtA[iNdEx:postIndex]...)
			if m.Vendor == nil {
				m.Vendor = []byte{}
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Model", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Model = append(m.Model[:0], dAtA[iNdEx:postIndex]...)
			if m.Model == nil {
				m.Model = []byte{}
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Udid", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Udid == nil {
				m.Udid = &UdId{}
			}
			if err := m.Udid.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ScreenSize", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ScreenSize == nil {
				m.ScreenSize = &Size{}
			}
			if err := m.ScreenSize.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBaidu(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBaidu
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WiFiAp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBaidu
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WiFiAp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WiFiAp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApMac", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ApMac = &s
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rssi", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Rssi = &v
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApName", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ApName = append(m.ApName[:0], dAtA[iNdEx:postIndex]...)
			if m.ApName == nil {
				m.ApName = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsConnected", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.IsConnected = &b
		default:
			iNdEx = preIndex
			skippy, err := skipBaidu(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBaidu
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Network) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBaidu
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Network: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Network: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ipv4", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Ipv4 = &s
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConnectionType", wireType)
			}
			var v Network_ConnectionType
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (Network_ConnectionType(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ConnectionType = &v
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OperatorType", wireType)
			}
			var v Network_OperatorType
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (Network_OperatorType(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OperatorType = &v
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CellularId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.CellularId = &s
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WifiAps", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WifiAps = append(m.WifiAps, &WiFiAp{})
			if err := m.WifiAps[len(m.WifiAps)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBaidu(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBaidu
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Gps) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBaidu
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Gps: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Gps: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoordinateType", wireType)
			}
			var v Gps_CoordinateType
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (Gps_CoordinateType(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CoordinateType = &v
		case 2:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Longitude", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			v2 := float64(math.Float64frombits(v))
			m.Longitude = &v2
		case 3:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Latitude", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			v2 := float64(math.Float64frombits(v))
			m.Latitude = &v2
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Timestamp = &v
		default:
			iNdEx = preIndex
			skippy, err := skipBaidu(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBaidu
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Tracking) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBaidu
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Tracking: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Tracking: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TrackingEvent", wireType)
			}
			var v Tracking_TrackingEvent
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (Tracking_TrackingEvent(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TrackingEvent = &v
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TrackingUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TrackingUrl = append(m.TrackingUrl, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBaidu(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBaidu
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Video) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBaidu
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Video: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Video: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = append(m.Title[:0], dAtA[iNdEx:postIndex]...)
			if m.Title == nil {
				m.Title = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContentLength", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ContentLength = &v
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Copyright", wireType)
			}
			var v Video_CopyRight
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (Video_CopyRight(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Copyright = &v
		case 4:
			if wireType == 0 {
				var v Video_MaterialFormat
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowBaidu
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (Video_MaterialFormat(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.MaterialFormat = append(m.MaterialFormat, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowBaidu
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthBaidu
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v Video_MaterialFormat
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowBaidu
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (Video_MaterialFormat(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.MaterialFormat = append(m.MaterialFormat, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field MaterialFormat", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipBaidu(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBaidu
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Page) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBaidu
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Page: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Page: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = append(m.Url[:0], dAtA[iNdEx:postIndex]...)
			if m.Url == nil {
				m.Url = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = append(m.Title[:0], dAtA[iNdEx:postIndex]...)
			if m.Title == nil {
				m.Title = []byte{}
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceUrl", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SourceUrl = append(m.SourceUrl[:0], dAtA[iNdEx:postIndex]...)
			if m.SourceUrl == nil {
				m.SourceUrl = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContentId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ContentId = &s
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContentCategory", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ContentCategory = append(m.ContentCategory, make([]byte, postIndex-iNdEx))
			copy(m.ContentCategory[len(m.ContentCategory)-1], dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContentLabel", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ContentLabel = append(m.ContentLabel, make([]byte, postIndex-iNdEx))
			copy(m.ContentLabel[len(m.ContentLabel)-1], dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthorId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.AuthorId = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBaidu(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBaidu
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AdSlot) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBaidu
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AdSlot: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AdSlot: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdslotId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.AdslotId = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdslotSize", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AdslotSize == nil {
				m.AdslotSize = &Size{}
			}
			if err := m.AdslotSize.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Topics", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Topics = append(m.Topics, make([]byte, postIndex-iNdEx))
			copy(m.Topics[len(m.Topics)-1], dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Video", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Video == nil {
				m.Video = &Video{}
			}
			if err := m.Video.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ctkey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Ctkey = &s
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SequenceId", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SequenceId = &v
		default:
			iNdEx = preIndex
			skippy, err := skipBaidu(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBaidu
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MobadsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBaidu
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MobadsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MobadsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.RequestId = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiVersion", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ApiVersion == nil {
				m.ApiVersion = &Version{}
			}
			if err := m.ApiVersion.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field App", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.App == nil {
				m.App = &App{}
			}
			if err := m.App.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Device", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Device == nil {
				m.Device = &Device{}
			}
			if err := m.Device.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Network", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Network == nil {
				m.Network = &Network{}
			}
			if err := m.Network.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Gps", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Gps == nil {
				m.Gps = &Gps{}
			}
			if err := m.Gps.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Adslot", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Adslot == nil {
				m.Adslot = &AdSlot{}
			}
			if err := m.Adslot.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsDebug", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.IsDebug = &b
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestProtocolType", wireType)
			}
			var v MobadsRequest_RequestProtocolType
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (MobadsRequest_RequestProtocolType(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RequestProtocolType = &v
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Page == nil {
				m.Page = &Page{}
			}
			if err := m.Page.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBaidu(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBaidu
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MetaIndex) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBaidu
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MetaIndex: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MetaIndex: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalNum", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TotalNum = &v
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentIndex", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CurrentIndex = &v
		default:
			iNdEx = preIndex
			skippy, err := skipBaidu(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBaidu
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MaterialMeta) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBaidu
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MaterialMeta: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MaterialMeta: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreativeType", wireType)
			}
			var v MaterialMeta_CreativeType
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (MaterialMeta_CreativeType(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CreativeType = &v
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InteractionType", wireType)
			}
			var v MaterialMeta_InteractionType
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (MaterialMeta_InteractionType(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InteractionType = &v
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WinNoticeUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WinNoticeUrl = append(m.WinNoticeUrl, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClickUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ClickUrl = &s
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = append(m.Title[:0], dAtA[iNdEx:postIndex]...)
			if m.Title == nil {
				m.Title = []byte{}
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = append(m.Description, make([]byte, postIndex-iNdEx))
			copy(m.Description[len(m.Description)-1], dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IconSrc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IconSrc = append(m.IconSrc, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImageSrc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ImageSrc = append(m.ImageSrc, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppPackage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.AppPackage = &s
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppSize", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AppSize = &v
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VideoUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.VideoUrl = &s
			iNdEx = postIndex
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VideoDuration", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.VideoDuration = &v
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MetaIndex", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MetaIndex == nil {
				m.MetaIndex = &MetaIndex{}
			}
			if err := m.MetaIndex.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaterialWidth", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MaterialWidth = &v
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaterialHeight", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MaterialHeight = &v
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BrandName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.BrandName = &s
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdTitle", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.AdTitle = &s
			iNdEx = postIndex
		case 18:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaterialSize", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MaterialSize = &v
		case 19:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeeplinkUrl", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeeplinkUrl = append(m.DeeplinkUrl[:0], dAtA[iNdEx:postIndex]...)
			if m.DeeplinkUrl == nil {
				m.DeeplinkUrl = []byte{}
			}
			iNdEx = postIndex
		case 20:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FallbackType", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FallbackType = &v
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FallbackUrl", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FallbackUrl = append(m.FallbackUrl[:0], dAtA[iNdEx:postIndex]...)
			if m.FallbackUrl == nil {
				m.FallbackUrl = []byte{}
			}
			iNdEx = postIndex
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApkName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ApkName = &s
			iNdEx = postIndex
		case 23:
			if wireType != 5 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rating", wireType)
			}
			var v uint32
			if (iNdEx + 4) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint32(binary.LittleEndian.Uint32(dAtA[iNdEx:]))
			iNdEx += 4
			v2 := float32(math.Float32frombits(v))
			m.Rating = &v2
		case 24:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Comments", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Comments = &v
		case 25:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImageSize", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ImageSize == nil {
				m.ImageSize = &MaterialMeta_ImageSize{}
			}
			if err := m.ImageSize.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBaidu(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBaidu
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MaterialMeta_ImageSize) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBaidu
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ImageSize: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ImageSize: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Width", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Width = &v
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Height = &v
		default:
			iNdEx = preIndex
			skippy, err := skipBaidu(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBaidu
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Ad) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBaidu
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Ad: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Ad: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdslotId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.AdslotId = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HtmlSnippet", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HtmlSnippet = append(m.HtmlSnippet[:0], dAtA[iNdEx:postIndex]...)
			if m.HtmlSnippet == nil {
				m.HtmlSnippet = []byte{}
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaterialMeta", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MaterialMeta == nil {
				m.MaterialMeta = &MaterialMeta{}
			}
			if err := m.MaterialMeta.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.AdKey = &s
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdTracking", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AdTracking = append(m.AdTracking, &Tracking{})
			if err := m.AdTracking[len(m.AdTracking)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MetaGroup", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MetaGroup = append(m.MetaGroup, &MaterialMeta{})
			if err := m.MetaGroup[len(m.MetaGroup)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MobAdtext", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.MobAdtext = &s
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MobAdlogo", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.MobAdlogo = &s
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CpmBid", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CpmBid = &v
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Md5", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Md5 = &s
			iNdEx = postIndex
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdslotType", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AdslotType = &v
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChargeType", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ChargeType = &v
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuyerId", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BuyerId = &v
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AntiTag", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AntiTag = &v
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartTime", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.StartTime = &v
		case 16:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndTime", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EndTime = &v
		default:
			iNdEx = preIndex
			skippy, err := skipBaidu(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBaidu
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MobadsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBaidu
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MobadsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MobadsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.RequestId = &s
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrorCode", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ErrorCode = &v
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ads", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ads = append(m.Ads, &Ad{})
			if err := m.Ads[len(m.Ads)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpirationTime", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ExpirationTime = &v
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SearchKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.SearchKey = &s
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExtStyle", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthBaidu
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExtStyle = append(m.ExtStyle[:0], dAtA[iNdEx:postIndex]...)
			if m.ExtStyle == nil {
				m.ExtStyle = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBaidu(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBaidu
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipBaidu(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowBaidu
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBaidu
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthBaidu
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowBaidu
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipBaidu(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthBaidu = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowBaidu   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("internal/protobuf/baidu/baidu.proto", fileDescriptorBaidu) }

var fileDescriptorBaidu = []byte{
	// 2829 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x58, 0x4b, 0x73, 0xdb, 0xc8,
	0xb5, 0x16, 0xdf, 0xc4, 0x21, 0x29, 0x61, 0x5a, 0x96, 0x44, 0xbf, 0x6d, 0x7a, 0x3c, 0xd7, 0x53,
	0xf7, 0x96, 0xc6, 0xa3, 0x6b, 0xdf, 0x9a, 0xf1, 0xad, 0x54, 0x85, 0x26, 0x61, 0x19, 0x63, 0x0a,
	0x64, 0x35, 0x21, 0x6b, 0xb2, 0x42, 0x41, 0x40, 0x8b, 0x42, 0x44, 0x02, 0x08, 0x00, 0xca, 0xd6,
	0xfc, 0x82, 0x3c, 0xd6, 0x4e, 0xcd, 0x42, 0xf9, 0x05, 0x59, 0x65, 0x93, 0xdf, 0x90, 0x65, 0x96,
	0x99, 0xaa, 0x2c, 0x52, 0x93, 0x45, 0xb6, 0x49, 0x26, 0xef, 0x64, 0x91, 0x3a, 0xdd, 0x0d, 0xf0,
	0x21, 0x8d, 0x27, 0x1b, 0x12, 0xe7, 0x3b, 0xa7, 0x4f, 0x3f, 0xce, 0xe9, 0xd3, 0x5f, 0x37, 0xdc,
	0xf3, 0xfc, 0x84, 0x45, 0xbe, 0x3d, 0xfe, 0x20, 0x8c, 0x82, 0x24, 0x38, 0x9c, 0x1e, 0x7d, 0x70,
	0x68, 0x7b, 0xee, 0x54, 0xfc, 0x6e, 0x73, 0x90, 0xac, 0xa6, 0xba, 0x6d, 0x8e, 0xb6, 0x4c, 0xa8,
	0xbc, 0x64, 0x51, 0xec, 0x05, 0x3e, 0xd9, 0x82, 0xd2, 0xc4, 0xfe, 0x6e, 0x10, 0x35, 0x73, 0x77,
	0x72, 0x0f, 0x1a, 0x4f, 0x72, 0x0f, 0xa9, 0x90, 0xb9, 0xc2, 0xf3, 0x83, 0xa8, 0x99, 0x9f, 0x29,
	0x50, 0x16, 0x0a, 0x27, 0x0a, 0x9a, 0x85, 0x39, 0x85, 0x13, 0x05, 0xad, 0xcf, 0x73, 0x50, 0x68,
	0x87, 0x21, 0xd9, 0x82, 0xb2, 0x1d, 0x86, 0x96, 0xe7, 0x72, 0x9f, 0xca, 0x93, 0x15, 0x5a, 0xb2,
	0xc3, 0x50, 0x77, 0xc9, 0x4d, 0x00, 0xe7, 0xd8, 0xf6, 0x7d, 0x36, 0x46, 0x25, 0xfa, 0x55, 0xa8,
	0x22, 0x11, 0xdd, 0x25, 0x1f, 0x41, 0x0d, 0xdb, 0x9d, 0x8a, 0x91, 0x71, 0xf7, 0xb5, 0x9d, 0xad,
	0xed, 0xc5, 0xb1, 0x6f, 0xcb, 0x81, 0x53, 0xb0, 0xc3, 0x30, 0x9d, 0xc4, 0x6d, 0xd1, 0x32, 0xb4,
	0x9d, 0x13, 0x7b, 0xc4, 0x9a, 0x45, 0xee, 0x19, 0x0d, 0x06, 0x02, 0x69, 0x7d, 0x9e, 0x87, 0xe2,
	0xbe, 0xab, 0xbb, 0xe4, 0x0a, 0x14, 0x3d, 0xf7, 0xc8, 0xce, 0x46, 0xc6, 0x25, 0x8e, 0x4e, 0x98,
	0x27, 0x86, 0xc4, 0xd1, 0x09, 0xf3, 0x08, 0x81, 0xc2, 0xc4, 0x76, 0xf8, 0x38, 0x10, 0x44, 0x81,
	0x5c, 0x87, 0x2a, 0xea, 0xac, 0x89, 0xfb, 0x58, 0x74, 0xf3, 0x64, 0x85, 0x56, 0x10, 0xd9, 0x73,
	0x1f, 0x93, 0xdb, 0x00, 0xb6, 0xef, 0x46, 0x81, 0xe7, 0xe2, 0xfc, 0x4a, 0x52, 0xad, 0x48, 0x4c,
	0x77, 0xc9, 0x35, 0xa8, 0xf0, 0x49, 0x78, 0x6e, 0xb3, 0x9c, 0x36, 0x96, 0x00, 0x8e, 0xc1, 0x41,
	0x45, 0x25, 0x1d, 0x03, 0x4a, 0xbc, 0x3f, 0xf7, 0xc8, 0xe6, 0xfd, 0x55, 0xb3, 0xfe, 0xdc, 0x23,
	0x1b, 0xfb, 0xbb, 0x0f, 0x0d, 0xe9, 0xdb, 0x73, 0xb9, 0x85, 0x22, 0x2d, 0xea, 0x19, 0x8c, 0x66,
	0x37, 0xa0, 0x1a, 0xda, 0x71, 0x1c, 0x06, 0x51, 0xd2, 0x04, 0x69, 0x91, 0x21, 0xad, 0x27, 0x50,
	0x1c, 0x7a, 0x9f, 0x31, 0x0c, 0xeb, 0x2b, 0xcf, 0x4d, 0x8e, 0xe7, 0x12, 0x81, 0xcb, 0xe4, 0x2a,
	0x94, 0x8f, 0x99, 0x37, 0x3a, 0x4e, 0x66, 0x99, 0x20, 0x81, 0xd6, 0xcf, 0x0b, 0x50, 0xee, 0xb2,
	0x53, 0xcf, 0x61, 0xe4, 0x29, 0xd4, 0x5c, 0xfe, 0x65, 0x25, 0x67, 0x21, 0xe3, 0x4e, 0x56, 0x77,
	0xee, 0x2e, 0x07, 0x4f, 0x18, 0xcb, 0x3f, 0xf3, 0x2c, 0x64, 0x14, 0xdc, 0xec, 0x9b, 0xfc, 0x1f,
	0x54, 0x82, 0x58, 0xb4, 0xcf, 0xf3, 0xf6, 0x37, 0xbf, 0xa6, 0x7d, 0x3f, 0xe6, 0x6d, 0xcb, 0x41,
	0x2c, 0xdb, 0x41, 0x10, 0xff, 0xa7, 0x79, 0xa3, 0x04, 0x71, 0x9a, 0x36, 0x4d, 0x28, 0x9f, 0x32,
	0xdf, 0x0d, 0x22, 0x1e, 0xca, 0xfa, 0x93, 0x15, 0x2a, 0x65, 0xb2, 0x09, 0xa5, 0x49, 0xe0, 0xb2,
	0x31, 0x0f, 0x22, 0x2a, 0x84, 0x48, 0x1e, 0x40, 0x71, 0xea, 0xca, 0xe8, 0xd5, 0x76, 0xae, 0x2c,
	0xf7, 0x81, 0x29, 0x46, 0xb9, 0x05, 0x79, 0x0c, 0xb5, 0xd8, 0x89, 0x18, 0xf3, 0xad, 0xd8, 0xfb,
	0x8c, 0xf1, 0xa8, 0x5e, 0xd2, 0x00, 0x57, 0x9e, 0x82, 0x30, 0xc4, 0xef, 0x96, 0x06, 0x30, 0x5b,
	0x1c, 0xa2, 0x40, 0x69, 0xf0, 0xbc, 0x6f, 0x68, 0x6a, 0x8e, 0x00, 0x94, 0xcd, 0xf6, 0xd3, 0x9e,
	0x66, 0xaa, 0x79, 0x52, 0x87, 0xea, 0x70, 0xaf, 0x4d, 0x4d, 0xcb, 0x7c, 0xa9, 0x16, 0x08, 0x81,
	0xd5, 0xfe, 0xbe, 0xd9, 0xed, 0xf7, 0xa9, 0x35, 0xec, 0x50, 0x4d, 0x33, 0xd4, 0x62, 0xeb, 0x16,
	0x94, 0xc5, 0x1a, 0x91, 0x1a, 0x54, 0xda, 0x46, 0x97, 0xf6, 0xf5, 0xae, 0x9a, 0x23, 0x15, 0x28,
	0xe8, 0xfd, 0xa1, 0x9a, 0x6f, 0x05, 0x50, 0x3e, 0xf0, 0x9e, 0x79, 0xed, 0x90, 0x6c, 0xe0, 0x66,
	0xb5, 0x30, 0xcf, 0xf9, 0x96, 0xc0, 0xad, 0xba, 0x67, 0x3b, 0x84, 0x40, 0x31, 0x8a, 0x63, 0xb1,
	0x23, 0x4a, 0x94, 0x7f, 0x93, 0x2d, 0xa8, 0xd8, 0xa1, 0xe5, 0xdb, 0x13, 0xc6, 0xd7, 0xb8, 0x4e,
	0xcb, 0x76, 0x68, 0xd8, 0x13, 0x46, 0xee, 0x42, 0xdd, 0x8b, 0x2d, 0x27, 0xf0, 0x7d, 0xe6, 0x24,
	0xcc, 0xe5, 0xab, 0x59, 0xa5, 0x35, 0x2f, 0xee, 0xa4, 0x50, 0xeb, 0xc7, 0x45, 0xa8, 0x18, 0x2c,
	0x79, 0x15, 0x44, 0x27, 0xe8, 0xdb, 0x0b, 0x4f, 0x1f, 0xc9, 0x0e, 0xf9, 0x37, 0xe9, 0xc3, 0x9a,
	0x6c, 0xef, 0x05, 0xfe, 0x7c, 0x0a, 0xbc, 0xb7, 0xbc, 0x64, 0xd2, 0xcb, 0x76, 0x27, 0x33, 0xe7,
	0xb9, 0xb0, 0xea, 0x2c, 0xc8, 0x44, 0x87, 0x46, 0x10, 0xb2, 0xc8, 0x4e, 0x82, 0x48, 0xb8, 0x2b,
	0x70, 0x77, 0xef, 0x7e, 0x9d, 0xbb, 0xbe, 0x34, 0xe6, 0xce, 0xea, 0xc1, 0x9c, 0x84, 0xd5, 0xc5,
	0x61, 0xe3, 0xf1, 0x74, 0x6c, 0x47, 0xb8, 0xaf, 0x65, 0x75, 0x49, 0x21, 0xdd, 0x25, 0x1f, 0x42,
	0xf5, 0x95, 0x77, 0xe4, 0x59, 0x76, 0x18, 0x37, 0x4b, 0x77, 0x0a, 0x0f, 0x6a, 0x3b, 0x9b, 0xcb,
	0xdd, 0x88, 0xd5, 0xa6, 0x15, 0xb4, 0x6b, 0x87, 0x71, 0xeb, 0x4d, 0x0e, 0x56, 0x17, 0x67, 0x40,
	0x36, 0x81, 0x74, 0xfa, 0x86, 0xa1, 0x75, 0x4c, 0xbd, 0x6f, 0x58, 0xfb, 0xc6, 0x0b, 0xa3, 0x7f,
	0x60, 0xa8, 0x2b, 0x44, 0x85, 0x7a, 0x47, 0xeb, 0xf5, 0x32, 0x24, 0x87, 0x31, 0xe5, 0xc8, 0xce,
	0xae, 0x9a, 0xcf, 0x84, 0xff, 0xdd, 0x55, 0x0b, 0x99, 0xf0, 0x68, 0x57, 0x2d, 0x66, 0xc2, 0xe3,
	0x5d, 0xb5, 0x44, 0xaa, 0x50, 0x3c, 0xd0, 0x9f, 0xe9, 0xaa, 0x8b, 0xd9, 0xa3, 0x99, 0xcf, 0x35,
	0x6a, 0x68, 0xa6, 0xca, 0x48, 0x03, 0xaa, 0x86, 0x76, 0x60, 0x99, 0xdf, 0x19, 0x68, 0xea, 0xef,
	0x2a, 0xad, 0x00, 0xea, 0xf3, 0x2b, 0x41, 0xae, 0x80, 0x2a, 0xfb, 0xb5, 0xfa, 0x03, 0x8d, 0xb6,
	0xcd, 0x3e, 0x95, 0x43, 0x7a, 0xae, 0x1b, 0x6d, 0x6b, 0xaf, 0xff, 0x54, 0xef, 0x61, 0x7a, 0xbe,
	0x03, 0x0d, 0x81, 0x98, 0x5a, 0x4f, 0xeb, 0xf4, 0xf7, 0xd4, 0xfc, 0xcc, 0x68, 0xdf, 0xd0, 0x11,
	0x11, 0x99, 0x8a, 0x3d, 0xcf, 0x5c, 0x39, 0xad, 0x5f, 0xe7, 0xa0, 0xb0, 0x1b, 0xc6, 0xe4, 0x05,
	0x26, 0x40, 0x10, 0xb9, 0x9e, 0x6f, 0x27, 0x0b, 0x35, 0xa4, 0xb5, 0xbc, 0x94, 0xbb, 0x61, 0xbc,
	0xdd, 0xc9, 0x4c, 0xd3, 0xe0, 0xcf, 0xcb, 0xe4, 0x06, 0x28, 0xe3, 0xc0, 0x1f, 0x79, 0xc9, 0xd4,
	0x15, 0x79, 0x94, 0xa3, 0x33, 0x80, 0x5c, 0x83, 0xea, 0xd8, 0x4e, 0x84, 0xb2, 0xc0, 0x95, 0x99,
	0x8c, 0x2d, 0x13, 0x6f, 0xc2, 0xe2, 0xc4, 0x9e, 0x84, 0x3c, 0xd2, 0x0d, 0x3a, 0x03, 0x5a, 0x0f,
	0x31, 0x68, 0x0b, 0x3d, 0x29, 0x50, 0x3a, 0xd8, 0x1d, 0x7e, 0xf4, 0x48, 0xcd, 0xe1, 0xe7, 0x6e,
	0xe7, 0x93, 0x87, 0x3b, 0x6a, 0x1e, 0x17, 0xfb, 0x69, 0xf7, 0xe1, 0xc7, 0x6a, 0xa1, 0x75, 0x5e,
	0x82, 0xaa, 0x19, 0xd9, 0xce, 0x89, 0xe7, 0x8f, 0xc8, 0x1e, 0xac, 0x26, 0xf2, 0xdb, 0x62, 0xa7,
	0xcc, 0x4f, 0xe4, 0x14, 0x2f, 0xe4, 0x78, 0xda, 0x22, 0xfb, 0xd0, 0xd0, 0x9a, 0x36, 0x92, 0x79,
	0x11, 0xb7, 0x5d, 0xe6, 0x6e, 0x1a, 0x8d, 0x9b, 0xf9, 0x3b, 0x85, 0x07, 0x0a, 0xad, 0xa5, 0xd8,
	0x7e, 0x34, 0x6e, 0xfd, 0xa4, 0x08, 0x8d, 0x05, 0x1f, 0x18, 0xfd, 0x76, 0xd7, 0xea, 0xf4, 0xf4,
	0xce, 0x0b, 0x75, 0x85, 0xac, 0x41, 0xad, 0xdd, 0xb5, 0xb4, 0x4f, 0x07, 0xfd, 0xe1, 0x3e, 0xc5,
	0x38, 0xa6, 0xea, 0xfe, 0x50, 0x13, 0xf3, 0x18, 0xbe, 0xd0, 0x07, 0x6a, 0x01, 0x27, 0x27, 0xda,
	0x14, 0xc9, 0x15, 0x58, 0x7d, 0xa9, 0x77, 0xb5, 0xbe, 0xd5, 0xee, 0x5a, 0x43, 0xb3, 0x4d, 0x4d,
	0xf5, 0xfb, 0x6f, 0xca, 0xe4, 0x1a, 0x5c, 0xc9, 0xd0, 0x67, 0xfb, 0xbd, 0x5e, 0x5a, 0x8b, 0x7e,
	0xf0, 0xa6, 0x4c, 0x08, 0xd4, 0x33, 0x9d, 0x66, 0x74, 0xd5, 0x1f, 0xbe, 0x29, 0x93, 0xdb, 0x70,
	0x75, 0xd1, 0x8b, 0xd5, 0x69, 0xd3, 0x74, 0x60, 0x3f, 0x12, 0x0e, 0xdb, 0x83, 0x01, 0xaa, 0xbb,
	0xfd, 0x03, 0xa3, 0xd7, 0x6f, 0x77, 0xad, 0x41, 0x7b, 0x57, 0x53, 0x7f, 0x7f, 0x5e, 0x26, 0x1b,
	0xb0, 0xb6, 0xa4, 0x53, 0xff, 0x70, 0x5e, 0x26, 0xd7, 0x61, 0x63, 0xb9, 0xc9, 0x53, 0x6d, 0x57,
	0x37, 0xd4, 0x3f, 0x5e, 0xae, 0x1c, 0xb4, 0xf7, 0x87, 0x9a, 0xfa, 0xd5, 0x79, 0x99, 0xdc, 0x82,
	0xe6, 0xb2, 0xb2, 0xd3, 0x37, 0x4c, 0xdd, 0xd8, 0xd7, 0xd4, 0x3f, 0x9d, 0x97, 0xc9, 0x0d, 0xd8,
	0x5c, 0xd6, 0x3f, 0xd3, 0x0d, 0x7d, 0xf8, 0x5c, 0xfd, 0xf3, 0x79, 0x19, 0x57, 0x44, 0x6a, 0x75,
	0x63, 0x68, 0xb6, 0x7b, 0x3d, 0xf5, 0x2f, 0xe7, 0xf3, 0x13, 0x90, 0xa8, 0x1c, 0xcc, 0x5f, 0x2f,
	0xd5, 0x89, 0xb1, 0xfc, 0xed, 0xbc, 0x4c, 0x6e, 0xc2, 0xd6, 0x92, 0x2e, 0x1b, 0xca, 0xdf, 0x17,
	0xe6, 0x91, 0xaa, 0xe5, 0x48, 0xfe, 0x71, 0x5e, 0x26, 0x57, 0x61, 0x7d, 0x49, 0xd9, 0x1f, 0x68,
	0x86, 0xfa, 0xcf, 0xf3, 0x32, 0x59, 0x87, 0x86, 0x54, 0xb5, 0x3b, 0xa6, 0xfe, 0x52, 0x53, 0xff,
	0x75, 0x5e, 0x6e, 0x7d, 0x91, 0x87, 0xd2, 0x4b, 0xcf, 0x65, 0x01, 0xb9, 0x02, 0xa5, 0xc4, 0x4b,
	0xc6, 0x62, 0xd7, 0xd5, 0xa9, 0x10, 0xc8, 0x7d, 0xc0, 0xba, 0x9a, 0x30, 0x3f, 0xb1, 0xc6, 0xcc,
	0x1f, 0x25, 0xc7, 0x82, 0x03, 0xd0, 0x86, 0x44, 0x7b, 0x1c, 0x24, 0xdf, 0x02, 0xc5, 0x09, 0xc2,
	0xb3, 0x88, 0xb3, 0x04, 0x51, 0x68, 0x6f, 0x5f, 0x38, 0x7f, 0xb1, 0x9b, 0xed, 0x4e, 0x10, 0x9e,
	0x51, 0x34, 0xa3, 0xb3, 0x16, 0x64, 0x0f, 0xd6, 0x26, 0x76, 0xc2, 0x22, 0xcf, 0x1e, 0x5b, 0x47,
	0x41, 0x34, 0xb1, 0x93, 0x66, 0xf1, 0x4e, 0xe1, 0xb2, 0x6a, 0x2d, 0x9c, 0xec, 0x49, 0xe3, 0x67,
	0xdc, 0x96, 0xae, 0x4e, 0x16, 0xe4, 0xd6, 0xb7, 0x41, 0xc9, 0xba, 0xe1, 0x45, 0x90, 0x5a, 0x06,
	0x1e, 0xa2, 0x2b, 0x98, 0xdd, 0x1d, 0x6a, 0x69, 0x9f, 0xea, 0x43, 0x53, 0x1c, 0xa9, 0x1d, 0x6a,
	0xed, 0xef, 0x76, 0xc4, 0x91, 0xda, 0xa1, 0x16, 0xaf, 0x4e, 0x6a, 0xa1, 0xd5, 0x81, 0xd5, 0xc5,
	0x3e, 0xb0, 0xbe, 0x89, 0x74, 0x35, 0x3b, 0x3d, 0x6b, 0x6f, 0xf0, 0x48, 0xad, 0x61, 0x7d, 0x9b,
	0x41, 0xe6, 0x50, 0xad, 0xa3, 0x13, 0x89, 0x0c, 0xd5, 0x46, 0xeb, 0x8b, 0x1c, 0x14, 0x07, 0xf6,
	0x88, 0x11, 0x15, 0x0a, 0xb8, 0x3d, 0xc5, 0xc2, 0xe2, 0xe7, 0x6c, 0xb1, 0xf3, 0xf3, 0x8b, 0x7d,
	0x13, 0x20, 0x0e, 0xa6, 0x91, 0xc3, 0xf8, 0x6e, 0x16, 0x47, 0xac, 0x22, 0x90, 0xfd, 0x68, 0xcc,
	0xd9, 0xb3, 0x8c, 0x45, 0x76, 0x0a, 0x29, 0x12, 0xd1, 0x5d, 0xf2, 0x3e, 0xa8, 0xa9, 0xda, 0xb1,
	0x13, 0x36, 0x0a, 0xa2, 0x33, 0x7e, 0x18, 0xd5, 0xe9, 0x9a, 0xc4, 0x3b, 0x12, 0x26, 0xf7, 0xa0,
	0x91, 0x45, 0xd5, 0x3e, 0x64, 0xe3, 0x66, 0x99, 0xdb, 0xd5, 0xd3, 0xa0, 0x22, 0x46, 0xae, 0x83,
	0x62, 0x4f, 0x93, 0xe3, 0x80, 0x9f, 0x79, 0x9c, 0x94, 0xd2, 0xaa, 0x00, 0x74, 0xb7, 0xf5, 0xab,
	0x1c, 0x94, 0xdb, 0xee, 0x70, 0x1c, 0x24, 0xdc, 0xce, 0x8d, 0xc7, 0x41, 0x92, 0x11, 0x7e, 0x5a,
	0x15, 0x80, 0xce, 0x59, 0x90, 0x54, 0x72, 0x16, 0x94, 0x7f, 0x1b, 0x0b, 0x12, 0x86, 0x9c, 0x8b,
	0x6e, 0x42, 0x39, 0x09, 0x42, 0xcf, 0x89, 0x9b, 0x05, 0x3e, 0x32, 0x29, 0x91, 0xff, 0x86, 0xd2,
	0x29, 0x66, 0x00, 0x9f, 0x7d, 0x6d, 0x67, 0xe3, 0xd2, 0xf4, 0xa0, 0xc2, 0x06, 0x17, 0xd9, 0x49,
	0x4e, 0xd8, 0x99, 0x20, 0xe2, 0x54, 0x08, 0x78, 0x98, 0xc7, 0xec, 0x7b, 0x53, 0xe6, 0x3b, 0xcc,
	0x92, 0x44, 0xae, 0x41, 0x21, 0x85, 0x74, 0xb7, 0xf5, 0x55, 0x11, 0x1a, 0x7b, 0xc1, 0xa1, 0xed,
	0xc6, 0x14, 0xc1, 0x38, 0xc1, 0x85, 0x8f, 0xc4, 0xe7, 0x6c, 0x8a, 0x8a, 0x44, 0xd2, 0x6b, 0x8b,
	0x97, 0xd1, 0xcf, 0xfc, 0x37, 0x5e, 0x5b, 0xbc, 0x94, 0x7f, 0xde, 0x87, 0x82, 0x1d, 0x86, 0x92,
	0xb0, 0xae, 0x2f, 0xb7, 0x68, 0x87, 0x21, 0x45, 0x3d, 0xd9, 0x86, 0xb2, 0x20, 0xc9, 0x72, 0xda,
	0x9b, 0x97, 0xb3, 0x62, 0x2a, 0xad, 0xc8, 0x87, 0x50, 0xf1, 0x05, 0xab, 0xe1, 0x53, 0xbf, 0x64,
	0x30, 0x92, 0xf4, 0xd0, 0xd4, 0x0e, 0x47, 0x32, 0x0a, 0x63, 0x49, 0x6b, 0xd7, 0x2f, 0x39, 0x71,
	0x29, 0xea, 0x71, 0x24, 0x22, 0x4a, 0x92, 0xcf, 0x5e, 0x18, 0x89, 0xc8, 0x09, 0x2a, 0xad, 0xc8,
	0x1d, 0xa8, 0x7a, 0xb1, 0xe5, 0xb2, 0xc3, 0xe9, 0x88, 0xdf, 0x5e, 0xaa, 0x4f, 0x4a, 0x47, 0xf6,
	0x38, 0x66, 0xb4, 0xe2, 0xc5, 0x5d, 0x44, 0xc9, 0x19, 0x6c, 0xa4, 0x6b, 0xcb, 0x5d, 0x39, 0xc1,
	0x58, 0x1c, 0xfe, 0x0a, 0xaf, 0x22, 0x1f, 0x2e, 0x77, 0xb0, 0x10, 0x99, 0x6d, 0xf9, 0x3f, 0x90,
	0x2d, 0xf1, 0x44, 0x7e, 0x42, 0x9e, 0x9b, 0xe6, 0xc0, 0x1a, 0xd0, 0xbe, 0xd9, 0xef, 0xf4, 0x7b,
	0x9c, 0xd8, 0xd0, 0xf5, 0xe8, 0xa2, 0x21, 0x72, 0xf9, 0x10, 0x6f, 0x8b, 0x70, 0x79, 0x52, 0xe2,
	0xd6, 0xa5, 0xdc, 0xa2, 0x65, 0xc3, 0xfa, 0x25, 0x3d, 0x91, 0xab, 0xb0, 0x91, 0x72, 0xa3, 0x85,
	0xee, 0xd4, 0x15, 0xe4, 0x72, 0x17, 0x87, 0xa1, 0xe6, 0xc8, 0x16, 0xac, 0x23, 0x3e, 0x5c, 0x52,
	0xe4, 0x5b, 0x7b, 0xa0, 0xec, 0xb1, 0xc4, 0xd6, 0x7d, 0x97, 0xbd, 0xc6, 0x2d, 0x95, 0x04, 0x89,
	0x3d, 0xb6, 0xfc, 0xe9, 0x44, 0x5c, 0xc7, 0x68, 0x95, 0x03, 0xc6, 0x74, 0xc2, 0x37, 0xef, 0x34,
	0x8a, 0x78, 0x19, 0x40, 0x6b, 0x59, 0x91, 0xeb, 0x12, 0xe4, 0x1e, 0x5a, 0x3f, 0x55, 0xa0, 0x9e,
	0x56, 0x30, 0xf4, 0x4b, 0x0c, 0x68, 0x38, 0x11, 0xb3, 0x13, 0xef, 0x74, 0x81, 0x5c, 0xbd, 0x7f,
	0x61, 0x7d, 0xe7, 0x1a, 0x6d, 0x77, 0x64, 0x0b, 0xc1, 0x89, 0x9d, 0x39, 0x89, 0x1c, 0x80, 0xca,
	0x1f, 0x1e, 0xec, 0x0b, 0x84, 0xfd, 0x7f, 0xde, 0xea, 0x52, 0x9f, 0x35, 0xe2, 0x5e, 0xd7, 0xbc,
	0x45, 0x80, 0xbc, 0x0b, 0xab, 0xaf, 0x3c, 0xdf, 0xf2, 0x83, 0xc4, 0xcb, 0x0a, 0x21, 0xd2, 0x9a,
	0xfa, 0x2b, 0xcf, 0x37, 0x38, 0x88, 0xb5, 0xf0, 0x3a, 0x28, 0xce, 0xd8, 0x73, 0x4e, 0xb8, 0x81,
	0x28, 0x85, 0x55, 0x0e, 0xec, 0xcf, 0x57, 0xd7, 0xd2, 0x7c, 0x75, 0xbd, 0x83, 0x17, 0xd4, 0xd8,
	0x89, 0xbc, 0x10, 0xfb, 0x92, 0x25, 0x6f, 0x1e, 0x22, 0x57, 0xa1, 0xea, 0x39, 0x81, 0x6f, 0xc5,
	0x91, 0xd3, 0xac, 0xf0, 0x4e, 0x2b, 0x28, 0x0f, 0x23, 0xbc, 0xf6, 0x2b, 0xde, 0xc4, 0x1e, 0x31,
	0xae, 0xab, 0x72, 0x5d, 0x95, 0x03, 0xa8, 0x5c, 0x7a, 0x7d, 0x50, 0x96, 0x5f, 0x1f, 0xd0, 0x31,
	0x1a, 0xf0, 0x12, 0x08, 0x3c, 0x5a, 0x15, 0x3b, 0x0c, 0x79, 0xa5, 0xbb, 0x0e, 0x0a, 0xaf, 0x56,
	0x7c, 0x22, 0x35, 0x31, 0x11, 0x0e, 0xe0, 0x44, 0xee, 0xc3, 0xaa, 0x50, 0xba, 0xd3, 0xc8, 0xe6,
	0xa3, 0xae, 0x8b, 0xd3, 0x97, 0xa3, 0x5d, 0x09, 0x92, 0x8f, 0x00, 0x26, 0x2c, 0xb1, 0x65, 0x3a,
	0x34, 0x78, 0x3a, 0x5f, 0xbd, 0x10, 0x85, 0x34, 0xbb, 0xa8, 0x32, 0xc9, 0x12, 0xed, 0x3e, 0x64,
	0x67, 0xa7, 0x25, 0x2e, 0xff, 0xab, 0xa2, 0x83, 0x14, 0x3d, 0xe0, 0x2f, 0x00, 0xff, 0x35, 0x77,
	0x3e, 0xcb, 0xa7, 0x80, 0x35, 0x6e, 0x97, 0xb5, 0x7e, 0xce, 0x51, 0xac, 0x94, 0x87, 0x91, 0xed,
	0xbb, 0xe2, 0x92, 0xa8, 0x8a, 0x4a, 0xc9, 0x11, 0x7e, 0x4f, 0xc4, 0x75, 0x70, 0x2d, 0x11, 0x9b,
	0x77, 0xb8, 0xb2, 0x62, 0xbb, 0x26, 0x8f, 0xce, 0x3d, 0xc8, 0xfa, 0x14, 0xeb, 0x44, 0x44, 0x56,
	0xa7, 0x20, 0x5f, 0xac, 0xbb, 0x50, 0x77, 0x19, 0x0b, 0xc7, 0x9e, 0x2f, 0x02, 0xbf, 0xce, 0xe3,
	0x5b, 0x4b, 0x31, 0x5c, 0xb2, 0x7b, 0xd0, 0x38, 0xb2, 0xc7, 0xe3, 0x43, 0xdb, 0x39, 0x11, 0x49,
	0x79, 0x45, 0xf8, 0x49, 0x41, 0x9e, 0x63, 0x77, 0x21, 0x93, 0xb9, 0x9f, 0x0d, 0xe1, 0x27, 0xc5,
	0xd0, 0x0f, 0x0f, 0xd9, 0x89, 0x98, 0xc7, 0xa6, 0x1c, 0x6a, 0x78, 0xc2, 0x67, 0xb1, 0x09, 0x65,
	0x5c, 0x78, 0x7f, 0xd4, 0xdc, 0xba, 0x93, 0x7b, 0x90, 0xa7, 0x52, 0xc2, 0x6b, 0x85, 0x13, 0x4c,
	0x26, 0xcc, 0x4f, 0xe2, 0x66, 0x53, 0x6c, 0xda, 0x54, 0x26, 0x1a, 0x80, 0xcc, 0x1f, 0x9c, 0xdb,
	0x55, 0x1e, 0xa2, 0xf7, 0xde, 0xbe, 0x51, 0x78, 0x76, 0xe1, 0xc1, 0x28, 0x32, 0x0f, 0x3f, 0xaf,
	0x7d, 0x0c, 0x4a, 0x86, 0x63, 0x9a, 0xcf, 0x3d, 0xd8, 0xa4, 0xaf, 0x35, 0x9b, 0x8b, 0xaf, 0x35,
	0xd9, 0x53, 0xcd, 0x27, 0x50, 0x9f, 0xdf, 0xce, 0xc8, 0x8b, 0x8c, 0x7e, 0x5a, 0xae, 0xaa, 0x50,
	0x34, 0xb5, 0x4f, 0x4d, 0x71, 0x89, 0xd1, 0xf7, 0x90, 0x66, 0xe7, 0x49, 0x03, 0x14, 0x04, 0x2d,
	0xbd, 0xd3, 0x37, 0xc4, 0x0d, 0x80, 0x93, 0x1b, 0xb5, 0xd8, 0x32, 0x60, 0x6d, 0x69, 0x1f, 0xe3,
	0xd5, 0xce, 0xe8, 0x5b, 0xba, 0x61, 0x6a, 0xb4, 0xcd, 0x2f, 0xb0, 0xea, 0x0a, 0x76, 0x31, 0xdc,
	0xa7, 0xcf, 0x74, 0x63, 0x57, 0x5c, 0x2c, 0x32, 0xae, 0xce, 0xe9, 0x56, 0x57, 0xd3, 0x06, 0x3d,
	0xdd, 0x78, 0xa1, 0x16, 0x5a, 0x3f, 0x2b, 0x42, 0xbe, 0xed, 0xbe, 0x9d, 0x49, 0xdc, 0x85, 0xfa,
	0x71, 0x32, 0x19, 0x5b, 0xb1, 0xef, 0x85, 0x21, 0x4b, 0x24, 0x73, 0xaa, 0x21, 0x36, 0x14, 0x10,
	0x69, 0xcf, 0xe5, 0x10, 0xe6, 0xb8, 0x3c, 0x58, 0x6f, 0xbc, 0x6d, 0x9d, 0x67, 0x19, 0xc6, 0xcb,
	0xe4, 0x06, 0x1e, 0x70, 0x16, 0x92, 0x86, 0xa2, 0x7c, 0x0d, 0x71, 0x5f, 0xb0, 0x33, 0xf2, 0x31,
	0xd2, 0x18, 0x2b, 0xbd, 0x58, 0xc9, 0x3b, 0x7e, 0xf3, 0xeb, 0x6e, 0x6d, 0x48, 0x65, 0xb2, 0x3b,
	0xdf, 0xff, 0xcb, 0xcd, 0x39, 0x8a, 0x82, 0x69, 0xc8, 0xab, 0xce, 0x37, 0x8d, 0x88, 0xef, 0xcf,
	0x5d, 0x34, 0xc7, 0xfd, 0x34, 0x09, 0x0e, 0x2d, 0xdb, 0x4d, 0xd8, 0xeb, 0x44, 0x92, 0x30, 0x65,
	0x12, 0x1c, 0xb6, 0x39, 0x30, 0x53, 0x8f, 0x83, 0x51, 0x20, 0x9e, 0x07, 0xa5, 0x1a, 0x01, 0xb2,
	0x05, 0x15, 0x27, 0x9c, 0x58, 0x87, 0x9e, 0xcb, 0x6b, 0x52, 0x83, 0x96, 0x9d, 0x70, 0xf2, 0xd4,
	0x73, 0x91, 0x90, 0x4e, 0xdc, 0xc7, 0xe2, 0x2d, 0x90, 0xe2, 0x27, 0x2f, 0x61, 0x62, 0xe9, 0xf9,
	0xa6, 0xa9, 0x09, 0x56, 0x24, 0xa0, 0xec, 0x0d, 0xe4, 0xd8, 0x8e, 0x46, 0xf2, 0xf4, 0x10, 0x75,
	0x08, 0x04, 0x24, 0x0f, 0xc3, 0xea, 0xe1, 0xf4, 0x8c, 0x71, 0xb6, 0xd8, 0x10, 0x35, 0x8e, 0xcb,
	0xba, 0xcb, 0xf7, 0x92, 0x9f, 0x78, 0x56, 0x62, 0x8f, 0x78, 0x7d, 0x29, 0xd1, 0x0a, 0xca, 0xa6,
	0x3d, 0xe2, 0x94, 0x37, 0xb1, 0xa3, 0xc4, 0xc2, 0x3b, 0x36, 0x2f, 0x2a, 0x45, 0xaa, 0x70, 0xc4,
	0xf4, 0x44, 0xc1, 0x60, 0xbe, 0x2b, 0x94, 0x2a, 0x57, 0x56, 0x98, 0xef, 0xa2, 0x0a, 0xd9, 0xf5,
	0x6a, 0x4a, 0x06, 0xe2, 0x30, 0xf0, 0x63, 0xf6, 0x4d, 0x3c, 0xed, 0x26, 0x00, 0x8b, 0xa2, 0x20,
	0xb2, 0x9c, 0x40, 0xbe, 0x0a, 0x14, 0xa9, 0xc2, 0x91, 0x4e, 0xe0, 0xe2, 0xc1, 0x53, 0xb0, 0x5d,
	0x41, 0x38, 0x6b, 0x3b, 0xe4, 0x22, 0xb1, 0xa1, 0xa8, 0xc6, 0x52, 0xc8, 0x5e, 0x87, 0x9e, 0xa8,
	0xbc, 0x62, 0x60, 0xe2, 0x95, 0x60, 0x75, 0x06, 0xf3, 0xa1, 0xe3, 0xcc, 0x98, 0x1d, 0x39, 0xc7,
	0xd6, 0x8c, 0x82, 0x2a, 0x02, 0xc1, 0x8c, 0xba, 0x0e, 0x0a, 0x7b, 0x9d, 0x58, 0x71, 0x72, 0x36,
	0x66, 0x9c, 0x76, 0xd5, 0x69, 0x95, 0xbd, 0x4e, 0x86, 0x28, 0x3f, 0x55, 0x7f, 0xf1, 0xe5, 0xad,
	0xdc, 0x2f, 0xbf, 0xbc, 0x95, 0xfb, 0xcd, 0x97, 0xb7, 0x72, 0x9f, 0xff, 0xf6, 0xd6, 0xca, 0xbf,
	0x03, 0x00, 0x00, 0xff, 0xff, 0xea, 0x11, 0xf5, 0x38, 0xe6, 0x17, 0x00, 0x00,
}
