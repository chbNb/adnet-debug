// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: internal/protobuf/max360.proto

package protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import github_com_golang_protobuf_proto "github.com/golang/protobuf/proto"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 推广位的可见形式， 0 未定义, 1 首屏, 2 非首屏
type BidRequest_AdSlot_SlotVisibility int32

const (
	BidRequest_AdSlot_NO_DETECTION   BidRequest_AdSlot_SlotVisibility = 0
	BidRequest_AdSlot_ABOVE_THE_FOLD BidRequest_AdSlot_SlotVisibility = 1
	BidRequest_AdSlot_BELOW_THE_FOLD BidRequest_AdSlot_SlotVisibility = 2
)

var BidRequest_AdSlot_SlotVisibility_name = map[int32]string{
	0: "NO_DETECTION",
	1: "ABOVE_THE_FOLD",
	2: "BELOW_THE_FOLD",
}
var BidRequest_AdSlot_SlotVisibility_value = map[string]int32{
	"NO_DETECTION":   0,
	"ABOVE_THE_FOLD": 1,
	"BELOW_THE_FOLD": 2,
}

func (x BidRequest_AdSlot_SlotVisibility) Enum() *BidRequest_AdSlot_SlotVisibility {
	p := new(BidRequest_AdSlot_SlotVisibility)
	*p = x
	return p
}
func (x BidRequest_AdSlot_SlotVisibility) String() string {
	return proto.EnumName(BidRequest_AdSlot_SlotVisibility_name, int32(x))
}
func (x *BidRequest_AdSlot_SlotVisibility) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_AdSlot_SlotVisibility_value, data, "BidRequest_AdSlot_SlotVisibility")
	if err != nil {
		return err
	}
	*x = BidRequest_AdSlot_SlotVisibility(value)
	return nil
}
func (BidRequest_AdSlot_SlotVisibility) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_max360_cc82d1867cdb5338, []int{0, 2, 0}
}

// 优先交易类型
type BidRequest_AdSlot_Deal_DealType int32

const (
	BidRequest_AdSlot_Deal_UNKNOWN_DEAL_TYPE  BidRequest_AdSlot_Deal_DealType = 0
	BidRequest_AdSlot_Deal_PREFERRED_DEAL     BidRequest_AdSlot_Deal_DealType = 1
	BidRequest_AdSlot_Deal_PRIVATE_AUCTION    BidRequest_AdSlot_Deal_DealType = 2
	BidRequest_AdSlot_Deal_PRIVATE_DIRECT_BUY BidRequest_AdSlot_Deal_DealType = 3
)

var BidRequest_AdSlot_Deal_DealType_name = map[int32]string{
	0: "UNKNOWN_DEAL_TYPE",
	1: "PREFERRED_DEAL",
	2: "PRIVATE_AUCTION",
	3: "PRIVATE_DIRECT_BUY",
}
var BidRequest_AdSlot_Deal_DealType_value = map[string]int32{
	"UNKNOWN_DEAL_TYPE":  0,
	"PREFERRED_DEAL":     1,
	"PRIVATE_AUCTION":    2,
	"PRIVATE_DIRECT_BUY": 3,
}

func (x BidRequest_AdSlot_Deal_DealType) Enum() *BidRequest_AdSlot_Deal_DealType {
	p := new(BidRequest_AdSlot_Deal_DealType)
	*p = x
	return p
}
func (x BidRequest_AdSlot_Deal_DealType) String() string {
	return proto.EnumName(BidRequest_AdSlot_Deal_DealType_name, int32(x))
}
func (x *BidRequest_AdSlot_Deal_DealType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_AdSlot_Deal_DealType_value, data, "BidRequest_AdSlot_Deal_DealType")
	if err != nil {
		return err
	}
	*x = BidRequest_AdSlot_Deal_DealType(value)
	return nil
}
func (BidRequest_AdSlot_Deal_DealType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_max360_cc82d1867cdb5338, []int{0, 2, 1, 0}
}

// 设备屏幕的方向
type BidRequest_Mobile_Device_ScreenOrientation int32

const (
	BidRequest_Mobile_Device_SCREEN_ORIENTATION_UNKNOWN   BidRequest_Mobile_Device_ScreenOrientation = 0
	BidRequest_Mobile_Device_SCREEN_ORIENTATION_PORTRAIT  BidRequest_Mobile_Device_ScreenOrientation = 1
	BidRequest_Mobile_Device_SCREEN_ORIENTATION_LANDSCAPE BidRequest_Mobile_Device_ScreenOrientation = 2
)

var BidRequest_Mobile_Device_ScreenOrientation_name = map[int32]string{
	0: "SCREEN_ORIENTATION_UNKNOWN",
	1: "SCREEN_ORIENTATION_PORTRAIT",
	2: "SCREEN_ORIENTATION_LANDSCAPE",
}
var BidRequest_Mobile_Device_ScreenOrientation_value = map[string]int32{
	"SCREEN_ORIENTATION_UNKNOWN":   0,
	"SCREEN_ORIENTATION_PORTRAIT":  1,
	"SCREEN_ORIENTATION_LANDSCAPE": 2,
}

func (x BidRequest_Mobile_Device_ScreenOrientation) Enum() *BidRequest_Mobile_Device_ScreenOrientation {
	p := new(BidRequest_Mobile_Device_ScreenOrientation)
	*p = x
	return p
}
func (x BidRequest_Mobile_Device_ScreenOrientation) String() string {
	return proto.EnumName(BidRequest_Mobile_Device_ScreenOrientation_name, int32(x))
}
func (x *BidRequest_Mobile_Device_ScreenOrientation) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_Mobile_Device_ScreenOrientation_value, data, "BidRequest_Mobile_Device_ScreenOrientation")
	if err != nil {
		return err
	}
	*x = BidRequest_Mobile_Device_ScreenOrientation(value)
	return nil
}
func (BidRequest_Mobile_Device_ScreenOrientation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_max360_cc82d1867cdb5338, []int{0, 3, 0, 0}
}

type BidRequest struct {
	// ------------------------------------------- 协议基础信息
	// MAX生成的唯一的竞价ID，32字节的字符串
	Bid *string `protobuf:"bytes,1,req,name=bid" json:"bid,omitempty"`
	// 如果不为0，那么这是一个测试请求。
	// DSP需要返回一个正常填写的应答
	// 不会展现给用户，且不会对该次请求计费
	IsTest *uint32 `protobuf:"varint,9,opt,name=is_test,json=isTest,def=0" json:"is_test,omitempty"`
	// 已弃用， 由mv_user_id代替
	MediavUserId *string `protobuf:"bytes,2,opt,name=mediav_user_id,json=mediavUserId" json:"mediav_user_id,omitempty"` // Deprecated: Do not use.
	// MAX用户身份标识
	MvUserId *string `protobuf:"bytes,17,opt,name=mv_user_id,json=mvUserId" json:"mv_user_id,omitempty"`
	// 额外用户身份标识
	Mid *string `protobuf:"bytes,20,opt,name=mid" json:"mid,omitempty"`
	// 用户的IP地址， ipv4
	// 例如：192.168.1.1
	Ip *string `protobuf:"bytes,3,opt,name=ip" json:"ip,omitempty"`
	// 用户的浏览器类型，即HTTP请求头部的User-Agent
	UserAgent *string `protobuf:"bytes,4,opt,name=user_agent,json=userAgent" json:"user_agent,omitempty"`
	// 用户垂直类别
	// 预留字段，暂无实际值
	UserVertical []int32 `protobuf:"varint,10,rep,name=user_vertical,json=userVertical" json:"user_vertical,omitempty"`
	// 用户人群类别
	UserCategory []*BidRequest_UserCategory `protobuf:"bytes,19,rep,name=user_category,json=userCategory" json:"user_category,omitempty"`
	// 推广位所在的页面url
	Url *string `protobuf:"bytes,5,opt,name=url" json:"url,omitempty"`
	// 推广位所在页面是否是HTTPS站点
	IsHttps *bool `protobuf:"varint,21,opt,name=is_https,json=isHttps" json:"is_https,omitempty"`
	// 流量所属来源，0：MAX自有流量，1：趣游流量，2：联盟流量，3：大客流量
	AdxType *uint32 `protobuf:"varint,6,opt,name=adx_type,json=adxType,def=0" json:"adx_type,omitempty"`
	// 预留字段，暂无实际值
	DetectedLanguage *string `protobuf:"bytes,11,opt,name=detected_language,json=detectedLanguage" json:"detected_language,omitempty"`
	// 广告位所在的媒体的id
	PublisherId *int32 `protobuf:"varint,13,opt,name=publisher_id,json=publisherId" json:"publisher_id,omitempty"`
	// 广告位所在媒体的类别
	PublisherCategory []int32 `protobuf:"varint,14,rep,name=publisher_category,json=publisherCategory" json:"publisher_category,omitempty"`
	// category字段版本号， 目前为1
	PublisherCategoryVersion *int32 `protobuf:"varint,15,opt,name=publisher_category_version,json=publisherCategoryVersion" json:"publisher_category_version,omitempty"`
	// 页面上下文类别
	ContentCategory []*BidRequest_ContentCategory `protobuf:"bytes,18,rep,name=content_category,json=contentCategory" json:"content_category,omitempty"`
	Adslot          []*BidRequest_AdSlot          `protobuf:"bytes,7,rep,name=adslot" json:"adslot,omitempty"`
	// 广告位禁止的创意属性，1：纯图片，2：纯文字，3：图文混合，4：FLASH
	ExcludedAttribute []int32 `protobuf:"varint,16,rep,name=excluded_attribute,json=excludedAttribute" json:"excluded_attribute,omitempty"`
	// 媒体禁止的广告行业类目， 字典: 聚效广告主行业字典
	ExcludedAdCategory []int32 `protobuf:"varint,12,rep,name=excluded_ad_category,json=excludedAdCategory" json:"excluded_ad_category,omitempty"`
	// 若本字段被设置，则本次请求，来自移动设备。
	Mobile *BidRequest_Mobile `protobuf:"bytes,8,opt,name=mobile" json:"mobile,omitempty"`
	// 请求中没有列出的字段(保留字段)
	ExtendData           *string  `protobuf:"bytes,100,opt,name=extend_data,json=extendData" json:"extend_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidRequest) Reset()         { *m = BidRequest{} }
func (m *BidRequest) String() string { return proto.CompactTextString(m) }
func (*BidRequest) ProtoMessage()    {}
func (*BidRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_max360_cc82d1867cdb5338, []int{0}
}
func (m *BidRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BidRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BidRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *BidRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest.Merge(dst, src)
}
func (m *BidRequest) XXX_Size() int {
	return m.Size()
}
func (m *BidRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest proto.InternalMessageInfo

const Default_BidRequest_IsTest uint32 = 0
const Default_BidRequest_AdxType uint32 = 0

func (m *BidRequest) GetBid() string {
	if m != nil && m.Bid != nil {
		return *m.Bid
	}
	return ""
}

func (m *BidRequest) GetIsTest() uint32 {
	if m != nil && m.IsTest != nil {
		return *m.IsTest
	}
	return Default_BidRequest_IsTest
}

// Deprecated: Do not use.
func (m *BidRequest) GetMediavUserId() string {
	if m != nil && m.MediavUserId != nil {
		return *m.MediavUserId
	}
	return ""
}

func (m *BidRequest) GetMvUserId() string {
	if m != nil && m.MvUserId != nil {
		return *m.MvUserId
	}
	return ""
}

func (m *BidRequest) GetMid() string {
	if m != nil && m.Mid != nil {
		return *m.Mid
	}
	return ""
}

func (m *BidRequest) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *BidRequest) GetUserAgent() string {
	if m != nil && m.UserAgent != nil {
		return *m.UserAgent
	}
	return ""
}

func (m *BidRequest) GetUserVertical() []int32 {
	if m != nil {
		return m.UserVertical
	}
	return nil
}

func (m *BidRequest) GetUserCategory() []*BidRequest_UserCategory {
	if m != nil {
		return m.UserCategory
	}
	return nil
}

func (m *BidRequest) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *BidRequest) GetIsHttps() bool {
	if m != nil && m.IsHttps != nil {
		return *m.IsHttps
	}
	return false
}

func (m *BidRequest) GetAdxType() uint32 {
	if m != nil && m.AdxType != nil {
		return *m.AdxType
	}
	return Default_BidRequest_AdxType
}

func (m *BidRequest) GetDetectedLanguage() string {
	if m != nil && m.DetectedLanguage != nil {
		return *m.DetectedLanguage
	}
	return ""
}

func (m *BidRequest) GetPublisherId() int32 {
	if m != nil && m.PublisherId != nil {
		return *m.PublisherId
	}
	return 0
}

func (m *BidRequest) GetPublisherCategory() []int32 {
	if m != nil {
		return m.PublisherCategory
	}
	return nil
}

func (m *BidRequest) GetPublisherCategoryVersion() int32 {
	if m != nil && m.PublisherCategoryVersion != nil {
		return *m.PublisherCategoryVersion
	}
	return 0
}

func (m *BidRequest) GetContentCategory() []*BidRequest_ContentCategory {
	if m != nil {
		return m.ContentCategory
	}
	return nil
}

func (m *BidRequest) GetAdslot() []*BidRequest_AdSlot {
	if m != nil {
		return m.Adslot
	}
	return nil
}

func (m *BidRequest) GetExcludedAttribute() []int32 {
	if m != nil {
		return m.ExcludedAttribute
	}
	return nil
}

func (m *BidRequest) GetExcludedAdCategory() []int32 {
	if m != nil {
		return m.ExcludedAdCategory
	}
	return nil
}

func (m *BidRequest) GetMobile() *BidRequest_Mobile {
	if m != nil {
		return m.Mobile
	}
	return nil
}

func (m *BidRequest) GetExtendData() string {
	if m != nil && m.ExtendData != nil {
		return *m.ExtendData
	}
	return ""
}

type BidRequest_UserCategory struct {
	// 人群类别
	// 字典： 聚效人群类别字典
	Id *int32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	// 人群类别的的置信度， 取值范围(0, 1000]
	Weight               *int32   `protobuf:"varint,2,req,name=weight,def=1000" json:"weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidRequest_UserCategory) Reset()         { *m = BidRequest_UserCategory{} }
func (m *BidRequest_UserCategory) String() string { return proto.CompactTextString(m) }
func (*BidRequest_UserCategory) ProtoMessage()    {}
func (*BidRequest_UserCategory) Descriptor() ([]byte, []int) {
	return fileDescriptor_max360_cc82d1867cdb5338, []int{0, 0}
}
func (m *BidRequest_UserCategory) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BidRequest_UserCategory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BidRequest_UserCategory.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *BidRequest_UserCategory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_UserCategory.Merge(dst, src)
}
func (m *BidRequest_UserCategory) XXX_Size() int {
	return m.Size()
}
func (m *BidRequest_UserCategory) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_UserCategory.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_UserCategory proto.InternalMessageInfo

const Default_BidRequest_UserCategory_Weight int32 = 1000

func (m *BidRequest_UserCategory) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *BidRequest_UserCategory) GetWeight() int32 {
	if m != nil && m.Weight != nil {
		return *m.Weight
	}
	return Default_BidRequest_UserCategory_Weight
}

type BidRequest_ContentCategory struct {
	// 广告位所在页面的上下文类别
	// 字典： 聚效上下文类别字典
	Id *int32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	// 页面上下文的置信度， 取值范围(0, 1000]
	Weight               *int32   `protobuf:"varint,2,req,name=weight,def=1000" json:"weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidRequest_ContentCategory) Reset()         { *m = BidRequest_ContentCategory{} }
func (m *BidRequest_ContentCategory) String() string { return proto.CompactTextString(m) }
func (*BidRequest_ContentCategory) ProtoMessage()    {}
func (*BidRequest_ContentCategory) Descriptor() ([]byte, []int) {
	return fileDescriptor_max360_cc82d1867cdb5338, []int{0, 1}
}
func (m *BidRequest_ContentCategory) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BidRequest_ContentCategory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BidRequest_ContentCategory.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *BidRequest_ContentCategory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_ContentCategory.Merge(dst, src)
}
func (m *BidRequest_ContentCategory) XXX_Size() int {
	return m.Size()
}
func (m *BidRequest_ContentCategory) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_ContentCategory.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_ContentCategory proto.InternalMessageInfo

const Default_BidRequest_ContentCategory_Weight int32 = 1000

func (m *BidRequest_ContentCategory) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *BidRequest_ContentCategory) GetWeight() int32 {
	if m != nil && m.Weight != nil {
		return *m.Weight
	}
	return Default_BidRequest_ContentCategory_Weight
}

// ------------------------------------------- 推广位基础信息
type BidRequest_AdSlot struct {
	// 推广位编号
	Id *uint32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	// 推广位的唯一标识
	Pid *string `protobuf:"bytes,2,opt,name=pid" json:"pid,omitempty"`
	// 允许的推广位的尺寸:
	Width  *int32 `protobuf:"varint,3,opt,name=width" json:"width,omitempty"`
	Height *int32 `protobuf:"varint,4,opt,name=height" json:"height,omitempty"`
	// 推广位的展现形式 PC流量 0: 未知 1： 固定 2： 弹窗 3： 对联 4： 客户端 5： 视频暂停位
	// 移动流量 6: 插页广告 10: 横幅广告 12：信息流广告 13：嵌入式广告 14：开屏广告 15：焦点图广告
	ViewType []uint32 `protobuf:"varint,5,rep,name=view_type,json=viewType" json:"view_type,omitempty"`
	// 最低竞标价格，货币单位为人民币，数值含义为微分(10^-6元)/千次展现
	MinCpmPrice    *uint32                           `protobuf:"varint,6,opt,name=min_cpm_price,json=minCpmPrice" json:"min_cpm_price,omitempty"`
	SlotVisibility *BidRequest_AdSlot_SlotVisibility `protobuf:"varint,7,opt,name=slot_visibility,json=slotVisibility,enum=protobuf.BidRequest_AdSlot_SlotVisibility,def=0" json:"slot_visibility,omitempty"`
	// 推广位等级，即推广位允许投放的最低创意级别，低于此等级的创意不允许投放
	// 创意级别由高到低依次为：A级(1000); B级(2000); C级(3000)
	// 该创意级别与创意审核接口以及广告位接口返回的创意级别一致
	AdslotLevel *uint32 `protobuf:"varint,10,opt,name=adslot_level,json=adslotLevel" json:"adslot_level,omitempty"`
	// 推广位禁止的广告主id
	ExcludedAdvertiserId []string                  `protobuf:"bytes,11,rep,name=excluded_advertiser_id,json=excludedAdvertiserId" json:"excluded_advertiser_id,omitempty"`
	Native               *BidRequest_AdSlot_Native `protobuf:"bytes,8,opt,name=native" json:"native,omitempty"`
	Deals                []*BidRequest_AdSlot_Deal `protobuf:"bytes,9,rep,name=deals" json:"deals,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *BidRequest_AdSlot) Reset()         { *m = BidRequest_AdSlot{} }
func (m *BidRequest_AdSlot) String() string { return proto.CompactTextString(m) }
func (*BidRequest_AdSlot) ProtoMessage()    {}
func (*BidRequest_AdSlot) Descriptor() ([]byte, []int) {
	return fileDescriptor_max360_cc82d1867cdb5338, []int{0, 2}
}
func (m *BidRequest_AdSlot) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BidRequest_AdSlot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BidRequest_AdSlot.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *BidRequest_AdSlot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_AdSlot.Merge(dst, src)
}
func (m *BidRequest_AdSlot) XXX_Size() int {
	return m.Size()
}
func (m *BidRequest_AdSlot) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_AdSlot.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_AdSlot proto.InternalMessageInfo

const Default_BidRequest_AdSlot_SlotVisibility BidRequest_AdSlot_SlotVisibility = BidRequest_AdSlot_NO_DETECTION

func (m *BidRequest_AdSlot) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *BidRequest_AdSlot) GetPid() string {
	if m != nil && m.Pid != nil {
		return *m.Pid
	}
	return ""
}

func (m *BidRequest_AdSlot) GetWidth() int32 {
	if m != nil && m.Width != nil {
		return *m.Width
	}
	return 0
}

func (m *BidRequest_AdSlot) GetHeight() int32 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

func (m *BidRequest_AdSlot) GetViewType() []uint32 {
	if m != nil {
		return m.ViewType
	}
	return nil
}

func (m *BidRequest_AdSlot) GetMinCpmPrice() uint32 {
	if m != nil && m.MinCpmPrice != nil {
		return *m.MinCpmPrice
	}
	return 0
}

func (m *BidRequest_AdSlot) GetSlotVisibility() BidRequest_AdSlot_SlotVisibility {
	if m != nil && m.SlotVisibility != nil {
		return *m.SlotVisibility
	}
	return Default_BidRequest_AdSlot_SlotVisibility
}

func (m *BidRequest_AdSlot) GetAdslotLevel() uint32 {
	if m != nil && m.AdslotLevel != nil {
		return *m.AdslotLevel
	}
	return 0
}

func (m *BidRequest_AdSlot) GetExcludedAdvertiserId() []string {
	if m != nil {
		return m.ExcludedAdvertiserId
	}
	return nil
}

func (m *BidRequest_AdSlot) GetNative() *BidRequest_AdSlot_Native {
	if m != nil {
		return m.Native
	}
	return nil
}

func (m *BidRequest_AdSlot) GetDeals() []*BidRequest_AdSlot_Deal {
	if m != nil {
		return m.Deals
	}
	return nil
}

// 原生推广位信息，该字段设置即为原生推广位
type BidRequest_AdSlot_Native struct {
	// 推广位可以展示的原生广告数量
	AdNum *uint32 `protobuf:"varint,1,opt,name=ad_num,json=adNum" json:"ad_num,omitempty"`
	// 推广位允许的广告打开方式，仅对移动APP原生流量有效，0：内开 1：下载 2：外开
	LandingType    []int32                                    `protobuf:"varint,2,rep,name=landing_type,json=landingType" json:"landing_type,omitempty"`
	NativeTemplate []*BidRequest_AdSlot_Native_NativeTemplate `protobuf:"bytes,4,rep,name=native_template,json=nativeTemplate" json:"native_template,omitempty"`
	// 推广位允许的原生模板id，模板id规范了广告样式，并对原生广告的属性有详细的描述
	// 字典：聚效广告模板字典
	TemplateId           []int32  `protobuf:"varint,3,rep,name=template_id,json=templateId" json:"template_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidRequest_AdSlot_Native) Reset()         { *m = BidRequest_AdSlot_Native{} }
func (m *BidRequest_AdSlot_Native) String() string { return proto.CompactTextString(m) }
func (*BidRequest_AdSlot_Native) ProtoMessage()    {}
func (*BidRequest_AdSlot_Native) Descriptor() ([]byte, []int) {
	return fileDescriptor_max360_cc82d1867cdb5338, []int{0, 2, 0}
}
func (m *BidRequest_AdSlot_Native) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BidRequest_AdSlot_Native) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BidRequest_AdSlot_Native.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *BidRequest_AdSlot_Native) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_AdSlot_Native.Merge(dst, src)
}
func (m *BidRequest_AdSlot_Native) XXX_Size() int {
	return m.Size()
}
func (m *BidRequest_AdSlot_Native) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_AdSlot_Native.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_AdSlot_Native proto.InternalMessageInfo

func (m *BidRequest_AdSlot_Native) GetAdNum() uint32 {
	if m != nil && m.AdNum != nil {
		return *m.AdNum
	}
	return 0
}

func (m *BidRequest_AdSlot_Native) GetLandingType() []int32 {
	if m != nil {
		return m.LandingType
	}
	return nil
}

func (m *BidRequest_AdSlot_Native) GetNativeTemplate() []*BidRequest_AdSlot_Native_NativeTemplate {
	if m != nil {
		return m.NativeTemplate
	}
	return nil
}

func (m *BidRequest_AdSlot_Native) GetTemplateId() []int32 {
	if m != nil {
		return m.TemplateId
	}
	return nil
}

// 推广位允许的原生模板，模板规范了广告返回格式，并对原生广告的属性有详细的描述
// 字典：聚效广告模版字典
type BidRequest_AdSlot_Native_NativeTemplate struct {
	// 每一种广告返回格式，MAX都会分配一个模版id来标识
	TemplateId *int32 `protobuf:"varint,1,req,name=template_id,json=templateId" json:"template_id,omitempty"`
	// 对应模板的JSON描述，预留
	TemplateDesc *string `protobuf:"bytes,2,opt,name=template_desc,json=templateDesc" json:"template_desc,omitempty"`
	// 对应模版要求返回的素材数量，对应NativeAd.Creative的数量，默认为1
	CreativeNum          *int32                                               `protobuf:"varint,3,opt,name=creative_num,json=creativeNum" json:"creative_num,omitempty"`
	ImageSize            []*BidRequest_AdSlot_Native_NativeTemplate_ImageSize `protobuf:"bytes,4,rep,name=image_size,json=imageSize" json:"image_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                             `json:"-"`
	XXX_unrecognized     []byte                                               `json:"-"`
	XXX_sizecache        int32                                                `json:"-"`
}

func (m *BidRequest_AdSlot_Native_NativeTemplate) Reset() {
	*m = BidRequest_AdSlot_Native_NativeTemplate{}
}
func (m *BidRequest_AdSlot_Native_NativeTemplate) String() string { return proto.CompactTextString(m) }
func (*BidRequest_AdSlot_Native_NativeTemplate) ProtoMessage()    {}
func (*BidRequest_AdSlot_Native_NativeTemplate) Descriptor() ([]byte, []int) {
	return fileDescriptor_max360_cc82d1867cdb5338, []int{0, 2, 0, 0}
}
func (m *BidRequest_AdSlot_Native_NativeTemplate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BidRequest_AdSlot_Native_NativeTemplate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BidRequest_AdSlot_Native_NativeTemplate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *BidRequest_AdSlot_Native_NativeTemplate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_AdSlot_Native_NativeTemplate.Merge(dst, src)
}
func (m *BidRequest_AdSlot_Native_NativeTemplate) XXX_Size() int {
	return m.Size()
}
func (m *BidRequest_AdSlot_Native_NativeTemplate) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_AdSlot_Native_NativeTemplate.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_AdSlot_Native_NativeTemplate proto.InternalMessageInfo

func (m *BidRequest_AdSlot_Native_NativeTemplate) GetTemplateId() int32 {
	if m != nil && m.TemplateId != nil {
		return *m.TemplateId
	}
	return 0
}

func (m *BidRequest_AdSlot_Native_NativeTemplate) GetTemplateDesc() string {
	if m != nil && m.TemplateDesc != nil {
		return *m.TemplateDesc
	}
	return ""
}

func (m *BidRequest_AdSlot_Native_NativeTemplate) GetCreativeNum() int32 {
	if m != nil && m.CreativeNum != nil {
		return *m.CreativeNum
	}
	return 0
}

func (m *BidRequest_AdSlot_Native_NativeTemplate) GetImageSize() []*BidRequest_AdSlot_Native_NativeTemplate_ImageSize {
	if m != nil {
		return m.ImageSize
	}
	return nil
}

type BidRequest_AdSlot_Native_NativeTemplate_ImageSize struct {
	Width                *int32   `protobuf:"varint,1,req,name=width" json:"width,omitempty"`
	Height               *int32   `protobuf:"varint,2,req,name=height" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidRequest_AdSlot_Native_NativeTemplate_ImageSize) Reset() {
	*m = BidRequest_AdSlot_Native_NativeTemplate_ImageSize{}
}
func (m *BidRequest_AdSlot_Native_NativeTemplate_ImageSize) String() string {
	return proto.CompactTextString(m)
}
func (*BidRequest_AdSlot_Native_NativeTemplate_ImageSize) ProtoMessage() {}
func (*BidRequest_AdSlot_Native_NativeTemplate_ImageSize) Descriptor() ([]byte, []int) {
	return fileDescriptor_max360_cc82d1867cdb5338, []int{0, 2, 0, 0, 0}
}
func (m *BidRequest_AdSlot_Native_NativeTemplate_ImageSize) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BidRequest_AdSlot_Native_NativeTemplate_ImageSize) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BidRequest_AdSlot_Native_NativeTemplate_ImageSize.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *BidRequest_AdSlot_Native_NativeTemplate_ImageSize) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_AdSlot_Native_NativeTemplate_ImageSize.Merge(dst, src)
}
func (m *BidRequest_AdSlot_Native_NativeTemplate_ImageSize) XXX_Size() int {
	return m.Size()
}
func (m *BidRequest_AdSlot_Native_NativeTemplate_ImageSize) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_AdSlot_Native_NativeTemplate_ImageSize.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_AdSlot_Native_NativeTemplate_ImageSize proto.InternalMessageInfo

func (m *BidRequest_AdSlot_Native_NativeTemplate_ImageSize) GetWidth() int32 {
	if m != nil && m.Width != nil {
		return *m.Width
	}
	return 0
}

func (m *BidRequest_AdSlot_Native_NativeTemplate_ImageSize) GetHeight() int32 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

// 优先交易信息
type BidRequest_AdSlot_Deal struct {
	// 优先交易ID
	DealId   *int64                           `protobuf:"varint,1,req,name=deal_id,json=dealId" json:"deal_id,omitempty"`
	DealType *BidRequest_AdSlot_Deal_DealType `protobuf:"varint,2,req,name=deal_type,json=dealType,enum=protobuf.BidRequest_AdSlot_Deal_DealType,def=0" json:"deal_type,omitempty"`
	// 交易的价格/底价
	Price *uint32 `protobuf:"varint,4,opt,name=price" json:"price,omitempty"`
	// 广告生效日期（目前仅对开屏联动流量生效）
	Date                 *string  `protobuf:"bytes,3,opt,name=date" json:"date,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidRequest_AdSlot_Deal) Reset()         { *m = BidRequest_AdSlot_Deal{} }
func (m *BidRequest_AdSlot_Deal) String() string { return proto.CompactTextString(m) }
func (*BidRequest_AdSlot_Deal) ProtoMessage()    {}
func (*BidRequest_AdSlot_Deal) Descriptor() ([]byte, []int) {
	return fileDescriptor_max360_cc82d1867cdb5338, []int{0, 2, 1}
}
func (m *BidRequest_AdSlot_Deal) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BidRequest_AdSlot_Deal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BidRequest_AdSlot_Deal.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *BidRequest_AdSlot_Deal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_AdSlot_Deal.Merge(dst, src)
}
func (m *BidRequest_AdSlot_Deal) XXX_Size() int {
	return m.Size()
}
func (m *BidRequest_AdSlot_Deal) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_AdSlot_Deal.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_AdSlot_Deal proto.InternalMessageInfo

const Default_BidRequest_AdSlot_Deal_DealType BidRequest_AdSlot_Deal_DealType = BidRequest_AdSlot_Deal_UNKNOWN_DEAL_TYPE

func (m *BidRequest_AdSlot_Deal) GetDealId() int64 {
	if m != nil && m.DealId != nil {
		return *m.DealId
	}
	return 0
}

func (m *BidRequest_AdSlot_Deal) GetDealType() BidRequest_AdSlot_Deal_DealType {
	if m != nil && m.DealType != nil {
		return *m.DealType
	}
	return Default_BidRequest_AdSlot_Deal_DealType
}

func (m *BidRequest_AdSlot_Deal) GetPrice() uint32 {
	if m != nil && m.Price != nil {
		return *m.Price
	}
	return 0
}

func (m *BidRequest_AdSlot_Deal) GetDate() string {
	if m != nil && m.Date != nil {
		return *m.Date
	}
	return ""
}

// ------------------------------------------- 无线推广位其他信息
type BidRequest_Mobile struct {
	// 标识该次广告请求是否来自APP应用
	IsApp *bool `protobuf:"varint,1,opt,name=is_app,json=isApp" json:"is_app,omitempty"`
	// 推广位是否全屏展示
	IsFullscreen *bool `protobuf:"varint,2,opt,name=is_fullscreen,json=isFullscreen" json:"is_fullscreen,omitempty"`
	// 推广位所在的应用id, 字典： 移动APP应用列表
	AppId *string `protobuf:"bytes,3,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	// android app包名，如 com.hy.supermario
	PackageName *string                   `protobuf:"bytes,6,opt,name=package_name,json=packageName" json:"package_name,omitempty"`
	Device      *BidRequest_Mobile_Device `protobuf:"bytes,4,opt,name=device" json:"device,omitempty"`
	// app的类别， 字典: 聚效移动应用类型字典
	AppCategory          []int32  `protobuf:"varint,5,rep,name=app_category,json=appCategory" json:"app_category,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidRequest_Mobile) Reset()         { *m = BidRequest_Mobile{} }
func (m *BidRequest_Mobile) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Mobile) ProtoMessage()    {}
func (*BidRequest_Mobile) Descriptor() ([]byte, []int) {
	return fileDescriptor_max360_cc82d1867cdb5338, []int{0, 3}
}
func (m *BidRequest_Mobile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BidRequest_Mobile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BidRequest_Mobile.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *BidRequest_Mobile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_Mobile.Merge(dst, src)
}
func (m *BidRequest_Mobile) XXX_Size() int {
	return m.Size()
}
func (m *BidRequest_Mobile) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_Mobile.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_Mobile proto.InternalMessageInfo

func (m *BidRequest_Mobile) GetIsApp() bool {
	if m != nil && m.IsApp != nil {
		return *m.IsApp
	}
	return false
}

func (m *BidRequest_Mobile) GetIsFullscreen() bool {
	if m != nil && m.IsFullscreen != nil {
		return *m.IsFullscreen
	}
	return false
}

func (m *BidRequest_Mobile) GetAppId() string {
	if m != nil && m.AppId != nil {
		return *m.AppId
	}
	return ""
}

func (m *BidRequest_Mobile) GetPackageName() string {
	if m != nil && m.PackageName != nil {
		return *m.PackageName
	}
	return ""
}

func (m *BidRequest_Mobile) GetDevice() *BidRequest_Mobile_Device {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *BidRequest_Mobile) GetAppCategory() []int32 {
	if m != nil {
		return m.AppCategory
	}
	return nil
}

type BidRequest_Mobile_Device struct {
	// 设备平台(小写), 暂时不提供
	Platform *string `protobuf:"bytes,1,opt,name=platform" json:"platform,omitempty"`
	// 设备型号(小写)
	// 例如：n70, galaxy.
	Model *string `protobuf:"bytes,3,opt,name=model" json:"model,omitempty"`
	// 操作系统(小写)
	// 例如：android, ios
	Os *string `protobuf:"bytes,4,opt,name=os" json:"os,omitempty"`
	// 操作系统版本
	// 例如：7.0.2
	OsVersion *string `protobuf:"bytes,5,opt,name=os_version,json=osVersion" json:"os_version,omitempty"`
	// 设备所处网络环境
	// 0-未识别, 1-wifi, 2-2g, 3-3g, 4-4g, 5-未知移动网络
	Network *uint32 `protobuf:"varint,6,opt,name=network" json:"network,omitempty"`
	// 设备的网络运营商
	// 0-未知, 1-移动, 2-联通, 3-电信
	// 预留字段，目前都为0
	CarrierId *int32 `protobuf:"varint,7,opt,name=carrier_id,json=carrierId" json:"carrier_id,omitempty"`
	// 设备所在地理位置的经度(小数点格式)
	// 例如：116.41667
	Longitude *string `protobuf:"bytes,8,opt,name=longitude" json:"longitude,omitempty"`
	// 设备所在地理位置的纬度(小数点格式)
	// 例如：39.91667
	Latitude *string `protobuf:"bytes,9,opt,name=latitude" json:"latitude,omitempty"`
	// 设备的屏幕宽度像素
	ScreenWidth *int32 `protobuf:"varint,10,opt,name=screen_width,json=screenWidth" json:"screen_width,omitempty"`
	// 设备的屏幕高度像素
	ScreenHeight      *int32                                      `protobuf:"varint,11,opt,name=screen_height,json=screenHeight" json:"screen_height,omitempty"`
	ScreenOrientation *BidRequest_Mobile_Device_ScreenOrientation `protobuf:"varint,12,opt,name=screen_orientation,json=screenOrientation,enum=protobuf.BidRequest_Mobile_Device_ScreenOrientation,def=0" json:"screen_orientation,omitempty"`
	// IOS设备idfa号(OS版本6及以上)(预留字段)
	Idfa *string `protobuf:"bytes,13,opt,name=idfa" json:"idfa,omitempty"`
	// IOS设备idfa号(OS版本6及以上)(原始值或者小写值)被md5 hash后的小写值
	HashedIdfa *string `protobuf:"bytes,14,opt,name=hashed_idfa,json=hashedIdfa" json:"hashed_idfa,omitempty"`
	// android设备系统的imei(预留字段)
	Imei *string `protobuf:"bytes,16,opt,name=imei" json:"imei,omitempty"`
	// android设备系统的imei(原始值或者小写值)被md5 hash后的小写值
	HashedImei *string `protobuf:"bytes,15,opt,name=hashed_imei,json=hashedImei" json:"hashed_imei,omitempty"`
	// android设备id(预留字段)
	AndroidId *string `protobuf:"bytes,17,opt,name=android_id,json=androidId" json:"android_id,omitempty"`
	// android设备id(原始值或者小写值)被md5 hash后的小写值
	HashedAndroidId *string `protobuf:"bytes,18,opt,name=hashed_android_id,json=hashedAndroidId" json:"hashed_android_id,omitempty"`
	// 设备的mac地址(预留字段)
	Mac *string `protobuf:"bytes,19,opt,name=mac" json:"mac,omitempty"`
	// 设备的mac地址(原始值或者小写值)被md5 hash后的小写值
	HashedMac *string `protobuf:"bytes,20,opt,name=hashed_mac,json=hashedMac" json:"hashed_mac,omitempty"`
	// MAX内部标识的设备id(预留字段)
	M2Id                 *string  `protobuf:"bytes,21,opt,name=m2id" json:"m2id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidRequest_Mobile_Device) Reset()         { *m = BidRequest_Mobile_Device{} }
func (m *BidRequest_Mobile_Device) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Mobile_Device) ProtoMessage()    {}
func (*BidRequest_Mobile_Device) Descriptor() ([]byte, []int) {
	return fileDescriptor_max360_cc82d1867cdb5338, []int{0, 3, 0}
}
func (m *BidRequest_Mobile_Device) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BidRequest_Mobile_Device) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BidRequest_Mobile_Device.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *BidRequest_Mobile_Device) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_Mobile_Device.Merge(dst, src)
}
func (m *BidRequest_Mobile_Device) XXX_Size() int {
	return m.Size()
}
func (m *BidRequest_Mobile_Device) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_Mobile_Device.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_Mobile_Device proto.InternalMessageInfo

const Default_BidRequest_Mobile_Device_ScreenOrientation BidRequest_Mobile_Device_ScreenOrientation = BidRequest_Mobile_Device_SCREEN_ORIENTATION_UNKNOWN

func (m *BidRequest_Mobile_Device) GetPlatform() string {
	if m != nil && m.Platform != nil {
		return *m.Platform
	}
	return ""
}

func (m *BidRequest_Mobile_Device) GetModel() string {
	if m != nil && m.Model != nil {
		return *m.Model
	}
	return ""
}

func (m *BidRequest_Mobile_Device) GetOs() string {
	if m != nil && m.Os != nil {
		return *m.Os
	}
	return ""
}

func (m *BidRequest_Mobile_Device) GetOsVersion() string {
	if m != nil && m.OsVersion != nil {
		return *m.OsVersion
	}
	return ""
}

func (m *BidRequest_Mobile_Device) GetNetwork() uint32 {
	if m != nil && m.Network != nil {
		return *m.Network
	}
	return 0
}

func (m *BidRequest_Mobile_Device) GetCarrierId() int32 {
	if m != nil && m.CarrierId != nil {
		return *m.CarrierId
	}
	return 0
}

func (m *BidRequest_Mobile_Device) GetLongitude() string {
	if m != nil && m.Longitude != nil {
		return *m.Longitude
	}
	return ""
}

func (m *BidRequest_Mobile_Device) GetLatitude() string {
	if m != nil && m.Latitude != nil {
		return *m.Latitude
	}
	return ""
}

func (m *BidRequest_Mobile_Device) GetScreenWidth() int32 {
	if m != nil && m.ScreenWidth != nil {
		return *m.ScreenWidth
	}
	return 0
}

func (m *BidRequest_Mobile_Device) GetScreenHeight() int32 {
	if m != nil && m.ScreenHeight != nil {
		return *m.ScreenHeight
	}
	return 0
}

func (m *BidRequest_Mobile_Device) GetScreenOrientation() BidRequest_Mobile_Device_ScreenOrientation {
	if m != nil && m.ScreenOrientation != nil {
		return *m.ScreenOrientation
	}
	return Default_BidRequest_Mobile_Device_ScreenOrientation
}

func (m *BidRequest_Mobile_Device) GetIdfa() string {
	if m != nil && m.Idfa != nil {
		return *m.Idfa
	}
	return ""
}

func (m *BidRequest_Mobile_Device) GetHashedIdfa() string {
	if m != nil && m.HashedIdfa != nil {
		return *m.HashedIdfa
	}
	return ""
}

func (m *BidRequest_Mobile_Device) GetImei() string {
	if m != nil && m.Imei != nil {
		return *m.Imei
	}
	return ""
}

func (m *BidRequest_Mobile_Device) GetHashedImei() string {
	if m != nil && m.HashedImei != nil {
		return *m.HashedImei
	}
	return ""
}

func (m *BidRequest_Mobile_Device) GetAndroidId() string {
	if m != nil && m.AndroidId != nil {
		return *m.AndroidId
	}
	return ""
}

func (m *BidRequest_Mobile_Device) GetHashedAndroidId() string {
	if m != nil && m.HashedAndroidId != nil {
		return *m.HashedAndroidId
	}
	return ""
}

func (m *BidRequest_Mobile_Device) GetMac() string {
	if m != nil && m.Mac != nil {
		return *m.Mac
	}
	return ""
}

func (m *BidRequest_Mobile_Device) GetHashedMac() string {
	if m != nil && m.HashedMac != nil {
		return *m.HashedMac
	}
	return ""
}

func (m *BidRequest_Mobile_Device) GetM2Id() string {
	if m != nil && m.M2Id != nil {
		return *m.M2Id
	}
	return ""
}

type BidResponse struct {
	// 请填充BidRequest中的bid, 32字节的字符串
	Bid                  *string            `protobuf:"bytes,1,req,name=bid" json:"bid,omitempty"`
	Ads                  []*BidResponse_Ads `protobuf:"bytes,3,rep,name=ads" json:"ads,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *BidResponse) Reset()         { *m = BidResponse{} }
func (m *BidResponse) String() string { return proto.CompactTextString(m) }
func (*BidResponse) ProtoMessage()    {}
func (*BidResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_max360_cc82d1867cdb5338, []int{1}
}
func (m *BidResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BidResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BidResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *BidResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidResponse.Merge(dst, src)
}
func (m *BidResponse) XXX_Size() int {
	return m.Size()
}
func (m *BidResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BidResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BidResponse proto.InternalMessageInfo

func (m *BidResponse) GetBid() string {
	if m != nil && m.Bid != nil {
		return *m.Bid
	}
	return ""
}

func (m *BidResponse) GetAds() []*BidResponse_Ads {
	if m != nil {
		return m.Ads
	}
	return nil
}

// 广告定义
// 若DSP不对本次请求报价，则不要设置本字段
type BidResponse_Ads struct {
	// 标记该广告对应的推广位的编号
	AdslotId *uint32 `protobuf:"varint,1,req,name=adslot_id,json=adslotId" json:"adslot_id,omitempty"`
	// 最高竞标价格，货币单位为人民币，数值含义为(10^-6元)/千次展现
	// 该字段值不允许为0
	// 且不能低于推广位最低竞标价格(BidRequest.min_cpm_price)
	MaxCpmPrice *uint32 `protobuf:"varint,2,req,name=max_cpm_price,json=maxCpmPrice" json:"max_cpm_price,omitempty"`
	// 广告代码片段，针对非原生流量，DSP必填
	// 详细用法请参见API文档
	HtmlSnippet *string `protobuf:"bytes,3,opt,name=html_snippet,json=htmlSnippet" json:"html_snippet,omitempty"`
	// 原生广告信息，针对原生流量，DSP必填
	NativeAd []*NativeAd `protobuf:"bytes,13,rep,name=native_ad,json=nativeAd" json:"native_ad,omitempty"`
	// DSP声明的本广告所属的广告行业类目，针对非原生流量，DSP必须填写
	Category []int32 `protobuf:"varint,4,rep,name=category" json:"category,omitempty"`
	// DSP声明的广告创意类型, 目前必须为1, 表示HTML创意，针对非原生流量，DSP必须填写
	CreativeType []int32 `protobuf:"varint,5,rep,name=creative_type,json=creativeType" json:"creative_type,omitempty"`
	// DSP声明的广告创意属性，详见BidRequest.excluded_attribute，针对非原生流量，DSP必须填写
	CreativeAttribute []int32 `protobuf:"varint,14,rep,name=creative_attribute,json=creativeAttribute" json:"creative_attribute,omitempty"`
	// 用户点击广告后跳转的最终目标页面地址，针对非原生流量，DSP必须填写
	// 必须以http://或者https://开头.
	DestinationUrl []string `protobuf:"bytes,6,rep,name=destination_url,json=destinationUrl" json:"destination_url,omitempty"`
	// 广告主id，DSP必须填写
	// 长度不超过32字节，且只能是字符、数字、减号、下划线的组合，如果包含其他字符，将会被过滤
	AdvertiserId *string `protobuf:"bytes,7,opt,name=advertiser_id,json=advertiserId" json:"advertiser_id,omitempty"`
	// 广告创意id，DSP必须填写
	// 长度不超过64字节，且只能是字符、数字、减号、下划线的组合，如果包含其他字符，将会被过滤
	CreativeId *string `protobuf:"bytes,8,opt,name=creative_id,json=creativeId" json:"creative_id,omitempty"`
	// 创意的宽度合高度，必须与BidRequest中的尺寸吻合，针对非原生流量，DSP必须填写
	Width  *int32 `protobuf:"varint,9,opt,name=width" json:"width,omitempty"`
	Height *int32 `protobuf:"varint,10,opt,name=height" json:"height,omitempty"`
	// DSP自定义的extend data， exchange会对其内容作一次base64编码并替换到创意代码的%%EXTEND_DATA%%宏中
	ExtendData *string `protobuf:"bytes,11,opt,name=extend_data,json=extendData" json:"extend_data,omitempty"`
	// DSP自定义的notice url,如果被创意正常展示，会向这个url发起HTTP请求，DSP可以使用这个url来做展示跟踪
	Nurl                 *string  `protobuf:"bytes,12,opt,name=nurl" json:"nurl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidResponse_Ads) Reset()         { *m = BidResponse_Ads{} }
func (m *BidResponse_Ads) String() string { return proto.CompactTextString(m) }
func (*BidResponse_Ads) ProtoMessage()    {}
func (*BidResponse_Ads) Descriptor() ([]byte, []int) {
	return fileDescriptor_max360_cc82d1867cdb5338, []int{1, 0}
}
func (m *BidResponse_Ads) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BidResponse_Ads) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BidResponse_Ads.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *BidResponse_Ads) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidResponse_Ads.Merge(dst, src)
}
func (m *BidResponse_Ads) XXX_Size() int {
	return m.Size()
}
func (m *BidResponse_Ads) XXX_DiscardUnknown() {
	xxx_messageInfo_BidResponse_Ads.DiscardUnknown(m)
}

var xxx_messageInfo_BidResponse_Ads proto.InternalMessageInfo

func (m *BidResponse_Ads) GetAdslotId() uint32 {
	if m != nil && m.AdslotId != nil {
		return *m.AdslotId
	}
	return 0
}

func (m *BidResponse_Ads) GetMaxCpmPrice() uint32 {
	if m != nil && m.MaxCpmPrice != nil {
		return *m.MaxCpmPrice
	}
	return 0
}

func (m *BidResponse_Ads) GetHtmlSnippet() string {
	if m != nil && m.HtmlSnippet != nil {
		return *m.HtmlSnippet
	}
	return ""
}

func (m *BidResponse_Ads) GetNativeAd() []*NativeAd {
	if m != nil {
		return m.NativeAd
	}
	return nil
}

func (m *BidResponse_Ads) GetCategory() []int32 {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *BidResponse_Ads) GetCreativeType() []int32 {
	if m != nil {
		return m.CreativeType
	}
	return nil
}

func (m *BidResponse_Ads) GetCreativeAttribute() []int32 {
	if m != nil {
		return m.CreativeAttribute
	}
	return nil
}

func (m *BidResponse_Ads) GetDestinationUrl() []string {
	if m != nil {
		return m.DestinationUrl
	}
	return nil
}

func (m *BidResponse_Ads) GetAdvertiserId() string {
	if m != nil && m.AdvertiserId != nil {
		return *m.AdvertiserId
	}
	return ""
}

func (m *BidResponse_Ads) GetCreativeId() string {
	if m != nil && m.CreativeId != nil {
		return *m.CreativeId
	}
	return ""
}

func (m *BidResponse_Ads) GetWidth() int32 {
	if m != nil && m.Width != nil {
		return *m.Width
	}
	return 0
}

func (m *BidResponse_Ads) GetHeight() int32 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

func (m *BidResponse_Ads) GetExtendData() string {
	if m != nil && m.ExtendData != nil {
		return *m.ExtendData
	}
	return ""
}

func (m *BidResponse_Ads) GetNurl() string {
	if m != nil && m.Nurl != nil {
		return *m.Nurl
	}
	return ""
}

// 该接口专门为原生广告竞价设计
type NativeAd struct {
	// 最高竞标价格，货币单位为人民币，数值含义为(10^-6元)/千次展现
	// 该字段值不允许为0
	// 且不能低于推广位最低竞标价格(BidRequest.min_cpm_price)
	MaxCpmPrice *uint32              `protobuf:"varint,1,req,name=max_cpm_price,json=maxCpmPrice" json:"max_cpm_price,omitempty"`
	Creatives   []*NativeAd_Creative `protobuf:"bytes,2,rep,name=creatives" json:"creatives,omitempty"`
	// 原生创意模板id，针对原生流量，DSP必须填写
	TemplateId *int32            `protobuf:"varint,10,opt,name=template_id,json=templateId" json:"template_id,omitempty"`
	AppAttr    *NativeAd_AppAttr `protobuf:"bytes,9,opt,name=app_attr,json=appAttr" json:"app_attr,omitempty"`
	// DSP自定义的竞价过滤追踪地址(仅支持HTTP协议)，DSP选择填写
	// 如果广告竞价被过滤，会由服务器触发竞价过滤追踪，支持%%FILTER_REASON%%宏替换
	// %%FILTER_REASON%%宏会被替换成广告过滤原因ID，ID与原因的映射关系详见MAX广告过滤行业字典
	FilterNoticeTracks []string `protobuf:"bytes,12,rep,name=filter_notice_tracks,json=filterNoticeTracks" json:"filter_notice_tracks,omitempty"`
	// DSP自定义的竞价胜出追踪地址(仅支持HTTP协议)，DSP选择填写
	// 如果广告竞价胜出，会由服务器触发竞价胜出追踪，支持%%WIN_PRICE%%宏替换
	WinNoticeTracks []string `protobuf:"bytes,11,rep,name=win_notice_tracks,json=winNoticeTracks" json:"win_notice_tracks,omitempty"`
	// DSP自定义的展示跟踪地址，DSP必须填写
	// 如果广告正常展示，会由客户端触发展示追踪，支持%%WIN_PRICE%%宏替换
	ImpressionTracks []string `protobuf:"bytes,3,rep,name=impression_tracks,json=impressionTracks" json:"impression_tracks,omitempty"`
	// DSP声明的本广告所属的广告行业类目，DSP必须填写
	Category []int32 `protobuf:"varint,4,rep,name=category" json:"category,omitempty"`
	// 用户点击广告后跳转的最终目标页面地址，DSP必须填写
	// 必须以http://或者https://开头.
	DestinationUrl []string `protobuf:"bytes,5,rep,name=destination_url,json=destinationUrl" json:"destination_url,omitempty"`
	// 广告主id, DSP必须填写
	// 长度不超过32字节，且只能是字母、数字、减号、下划线的组合，如果包含其他字符，将会被过滤
	AdvertiserId *string `protobuf:"bytes,6,opt,name=advertiser_id,json=advertiserId" json:"advertiser_id,omitempty"`
	// 广告创意id，DSP必须填写
	// 长度不超过64字节，且只能是字母、数字、减号、下划线的组合，如果包含其他字符，将会被过滤
	CreativeId *string `protobuf:"bytes,7,opt,name=creative_id,json=creativeId" json:"creative_id,omitempty"`
	// DSP声明创意对应的dealid，与BidRequest.AdSlot.Deal.deal_id一致
	DealId               *int64   `protobuf:"varint,8,opt,name=deal_id,json=dealId" json:"deal_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NativeAd) Reset()         { *m = NativeAd{} }
func (m *NativeAd) String() string { return proto.CompactTextString(m) }
func (*NativeAd) ProtoMessage()    {}
func (*NativeAd) Descriptor() ([]byte, []int) {
	return fileDescriptor_max360_cc82d1867cdb5338, []int{2}
}
func (m *NativeAd) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NativeAd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NativeAd.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *NativeAd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NativeAd.Merge(dst, src)
}
func (m *NativeAd) XXX_Size() int {
	return m.Size()
}
func (m *NativeAd) XXX_DiscardUnknown() {
	xxx_messageInfo_NativeAd.DiscardUnknown(m)
}

var xxx_messageInfo_NativeAd proto.InternalMessageInfo

func (m *NativeAd) GetMaxCpmPrice() uint32 {
	if m != nil && m.MaxCpmPrice != nil {
		return *m.MaxCpmPrice
	}
	return 0
}

func (m *NativeAd) GetCreatives() []*NativeAd_Creative {
	if m != nil {
		return m.Creatives
	}
	return nil
}

func (m *NativeAd) GetTemplateId() int32 {
	if m != nil && m.TemplateId != nil {
		return *m.TemplateId
	}
	return 0
}

func (m *NativeAd) GetAppAttr() *NativeAd_AppAttr {
	if m != nil {
		return m.AppAttr
	}
	return nil
}

func (m *NativeAd) GetFilterNoticeTracks() []string {
	if m != nil {
		return m.FilterNoticeTracks
	}
	return nil
}

func (m *NativeAd) GetWinNoticeTracks() []string {
	if m != nil {
		return m.WinNoticeTracks
	}
	return nil
}

func (m *NativeAd) GetImpressionTracks() []string {
	if m != nil {
		return m.ImpressionTracks
	}
	return nil
}

func (m *NativeAd) GetCategory() []int32 {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *NativeAd) GetDestinationUrl() []string {
	if m != nil {
		return m.DestinationUrl
	}
	return nil
}

func (m *NativeAd) GetAdvertiserId() string {
	if m != nil && m.AdvertiserId != nil {
		return *m.AdvertiserId
	}
	return ""
}

func (m *NativeAd) GetCreativeId() string {
	if m != nil && m.CreativeId != nil {
		return *m.CreativeId
	}
	return ""
}

func (m *NativeAd) GetDealId() int64 {
	if m != nil && m.DealId != nil {
		return *m.DealId
	}
	return 0
}

// 原生创意素材资源描述
type NativeAd_Creative struct {
	// 原生创意模板id
	TemplateId *int32 `protobuf:"varint,9,opt,name=template_id,json=templateId" json:"template_id,omitempty"`
	// 创意标题，具体以创意模板的要求为准
	// 推荐填写创意的主要Slogan
	Title *string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	// 创意子标题，一般都是紧随标题出现，10个字以内，具体以创意模板的要求为准
	// 可以填写DSP名称、广告主名称、价格、Rating等信息
	SubTitle *string `protobuf:"bytes,2,opt,name=sub_title,json=subTitle" json:"sub_title,omitempty"`
	// 创意描述，具体以创意模板的要求为准
	// 可以填写更详细的商品说明或者品牌推广信息
	Description *string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	// 按钮名称，2~4个字，具体以创意模板的要求为准
	// 可以为Call To Action或者广告主名称
	ButtonName *string `protobuf:"bytes,4,opt,name=button_name,json=buttonName" json:"button_name,omitempty"`
	// 创意主图信息(除多图模版外，其他模版必填)，JPG/PNG/静态GIF，尺寸及K数对应关系参考：素材尺寸与占比表格，具体以创意模板的要求为准
	ContentImage *NativeAd_Creative_Image `protobuf:"bytes,5,opt,name=content_image,json=contentImage" json:"content_image,omitempty"`
	// 创意组图信息(仅多图模版填写)，JPG/PNG/静态GIF，具体以创意模板的要求为准
	MultiImages []*NativeAd_Creative_Image `protobuf:"bytes,12,rep,name=multi_images,json=multiImages" json:"multi_images,omitempty"`
	// 创意联动图信息(仅开屏联动模版填写)，JPG/PNG/静态GIF，K数：50K以内，具体以创意模板的要求为准
	LinkedImage *NativeAd_Creative_Image `protobuf:"bytes,8,opt,name=linked_image,json=linkedImage" json:"linked_image,omitempty"`
	// 广告主logo信息，JPG/PNG/静态GIF，尺寸：200X200，K数：50K以内，具体以创意模板的要求为准
	Logo                 *NativeAd_Creative_Image `protobuf:"bytes,6,opt,name=logo" json:"logo,omitempty"`
	Video                *NativeAd_Creative_Video `protobuf:"bytes,13,opt,name=video" json:"video,omitempty"`
	Link                 *NativeAd_Creative_Link  `protobuf:"bytes,7,opt,name=link" json:"link,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *NativeAd_Creative) Reset()         { *m = NativeAd_Creative{} }
func (m *NativeAd_Creative) String() string { return proto.CompactTextString(m) }
func (*NativeAd_Creative) ProtoMessage()    {}
func (*NativeAd_Creative) Descriptor() ([]byte, []int) {
	return fileDescriptor_max360_cc82d1867cdb5338, []int{2, 0}
}
func (m *NativeAd_Creative) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NativeAd_Creative) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NativeAd_Creative.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *NativeAd_Creative) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NativeAd_Creative.Merge(dst, src)
}
func (m *NativeAd_Creative) XXX_Size() int {
	return m.Size()
}
func (m *NativeAd_Creative) XXX_DiscardUnknown() {
	xxx_messageInfo_NativeAd_Creative.DiscardUnknown(m)
}

var xxx_messageInfo_NativeAd_Creative proto.InternalMessageInfo

func (m *NativeAd_Creative) GetTemplateId() int32 {
	if m != nil && m.TemplateId != nil {
		return *m.TemplateId
	}
	return 0
}

func (m *NativeAd_Creative) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *NativeAd_Creative) GetSubTitle() string {
	if m != nil && m.SubTitle != nil {
		return *m.SubTitle
	}
	return ""
}

func (m *NativeAd_Creative) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *NativeAd_Creative) GetButtonName() string {
	if m != nil && m.ButtonName != nil {
		return *m.ButtonName
	}
	return ""
}

func (m *NativeAd_Creative) GetContentImage() *NativeAd_Creative_Image {
	if m != nil {
		return m.ContentImage
	}
	return nil
}

func (m *NativeAd_Creative) GetMultiImages() []*NativeAd_Creative_Image {
	if m != nil {
		return m.MultiImages
	}
	return nil
}

func (m *NativeAd_Creative) GetLinkedImage() *NativeAd_Creative_Image {
	if m != nil {
		return m.LinkedImage
	}
	return nil
}

func (m *NativeAd_Creative) GetLogo() *NativeAd_Creative_Image {
	if m != nil {
		return m.Logo
	}
	return nil
}

func (m *NativeAd_Creative) GetVideo() *NativeAd_Creative_Video {
	if m != nil {
		return m.Video
	}
	return nil
}

func (m *NativeAd_Creative) GetLink() *NativeAd_Creative_Link {
	if m != nil {
		return m.Link
	}
	return nil
}

// 图片信息
type NativeAd_Creative_Image struct {
	// 图片地址
	ImageUrl *string `protobuf:"bytes,1,opt,name=image_url,json=imageUrl" json:"image_url,omitempty"`
	// 图片的宽度和高度
	ImageWidth           *int32   `protobuf:"varint,2,opt,name=image_width,json=imageWidth" json:"image_width,omitempty"`
	ImageHeight          *int32   `protobuf:"varint,3,opt,name=image_height,json=imageHeight" json:"image_height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NativeAd_Creative_Image) Reset()         { *m = NativeAd_Creative_Image{} }
func (m *NativeAd_Creative_Image) String() string { return proto.CompactTextString(m) }
func (*NativeAd_Creative_Image) ProtoMessage()    {}
func (*NativeAd_Creative_Image) Descriptor() ([]byte, []int) {
	return fileDescriptor_max360_cc82d1867cdb5338, []int{2, 0, 0}
}
func (m *NativeAd_Creative_Image) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NativeAd_Creative_Image) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NativeAd_Creative_Image.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *NativeAd_Creative_Image) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NativeAd_Creative_Image.Merge(dst, src)
}
func (m *NativeAd_Creative_Image) XXX_Size() int {
	return m.Size()
}
func (m *NativeAd_Creative_Image) XXX_DiscardUnknown() {
	xxx_messageInfo_NativeAd_Creative_Image.DiscardUnknown(m)
}

var xxx_messageInfo_NativeAd_Creative_Image proto.InternalMessageInfo

func (m *NativeAd_Creative_Image) GetImageUrl() string {
	if m != nil && m.ImageUrl != nil {
		return *m.ImageUrl
	}
	return ""
}

func (m *NativeAd_Creative_Image) GetImageWidth() int32 {
	if m != nil && m.ImageWidth != nil {
		return *m.ImageWidth
	}
	return 0
}

func (m *NativeAd_Creative_Image) GetImageHeight() int32 {
	if m != nil && m.ImageHeight != nil {
		return *m.ImageHeight
	}
	return 0
}

// 视频广告信息
type NativeAd_Creative_Video struct {
	// 视频地址
	VideoUrl *string `protobuf:"bytes,1,opt,name=video_url,json=videoUrl" json:"video_url,omitempty"`
	// 视频时长
	Duration *int32 `protobuf:"varint,2,opt,name=duration" json:"duration,omitempty"`
	// 视频文件MD5后的值，例如：d8bff3104d4ac1b246061c9b6355bea4
	VideoMd5 *string `protobuf:"bytes,3,opt,name=video_md5,json=videoMd5" json:"video_md5,omitempty"`
	// 视频文件的大小，单位是字节，例如：126465485
	VideoSize *int32 `protobuf:"varint,4,opt,name=video_size,json=videoSize" json:"video_size,omitempty"`
	// DSP自定义的视频开始播放追踪(视频开始播放时, 发送视频开始追踪)
	VideoStartTracks []string `protobuf:"bytes,5,rep,name=video_start_tracks,json=videoStartTracks" json:"video_start_tracks,omitempty"`
	// DSP自定义的视频暂停追踪
	VideoPauseTracks []string `protobuf:"bytes,6,rep,name=video_pause_tracks,json=videoPauseTracks" json:"video_pause_tracks,omitempty"`
	// DSP自定义的视频继续追踪
	VideoContinueTracks []string `protobuf:"bytes,7,rep,name=video_continue_tracks,json=videoContinueTracks" json:"video_continue_tracks,omitempty"`
	// DSP自定义的视频退出追踪
	VideoExitTracks []string `protobuf:"bytes,8,rep,name=video_exit_tracks,json=videoExitTracks" json:"video_exit_tracks,omitempty"`
	// DSP自定义的视完成追踪
	VideoComplateTracks  []string `protobuf:"bytes,9,rep,name=video_complate_tracks,json=videoComplateTracks" json:"video_complate_tracks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NativeAd_Creative_Video) Reset()         { *m = NativeAd_Creative_Video{} }
func (m *NativeAd_Creative_Video) String() string { return proto.CompactTextString(m) }
func (*NativeAd_Creative_Video) ProtoMessage()    {}
func (*NativeAd_Creative_Video) Descriptor() ([]byte, []int) {
	return fileDescriptor_max360_cc82d1867cdb5338, []int{2, 0, 1}
}
func (m *NativeAd_Creative_Video) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NativeAd_Creative_Video) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NativeAd_Creative_Video.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *NativeAd_Creative_Video) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NativeAd_Creative_Video.Merge(dst, src)
}
func (m *NativeAd_Creative_Video) XXX_Size() int {
	return m.Size()
}
func (m *NativeAd_Creative_Video) XXX_DiscardUnknown() {
	xxx_messageInfo_NativeAd_Creative_Video.DiscardUnknown(m)
}

var xxx_messageInfo_NativeAd_Creative_Video proto.InternalMessageInfo

func (m *NativeAd_Creative_Video) GetVideoUrl() string {
	if m != nil && m.VideoUrl != nil {
		return *m.VideoUrl
	}
	return ""
}

func (m *NativeAd_Creative_Video) GetDuration() int32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *NativeAd_Creative_Video) GetVideoMd5() string {
	if m != nil && m.VideoMd5 != nil {
		return *m.VideoMd5
	}
	return ""
}

func (m *NativeAd_Creative_Video) GetVideoSize() int32 {
	if m != nil && m.VideoSize != nil {
		return *m.VideoSize
	}
	return 0
}

func (m *NativeAd_Creative_Video) GetVideoStartTracks() []string {
	if m != nil {
		return m.VideoStartTracks
	}
	return nil
}

func (m *NativeAd_Creative_Video) GetVideoPauseTracks() []string {
	if m != nil {
		return m.VideoPauseTracks
	}
	return nil
}

func (m *NativeAd_Creative_Video) GetVideoContinueTracks() []string {
	if m != nil {
		return m.VideoContinueTracks
	}
	return nil
}

func (m *NativeAd_Creative_Video) GetVideoExitTracks() []string {
	if m != nil {
		return m.VideoExitTracks
	}
	return nil
}

func (m *NativeAd_Creative_Video) GetVideoComplateTracks() []string {
	if m != nil {
		return m.VideoComplateTracks
	}
	return nil
}

// 点击交互信息
type NativeAd_Creative_Link struct {
	// 点击地址
	ClickUrl *string `protobuf:"bytes,1,opt,name=click_url,json=clickUrl" json:"click_url,omitempty"`
	// deep_link地址，如果使用该字段，则DSP的点击监测需要放到click_tracks字段
	// 建议在设置该字段的同时，也设置一个click_url，如果deep_link跳转失败，我们会继续使用click_url进行跳转
	DeepLink *string `protobuf:"bytes,4,opt,name=deep_link,json=deepLink" json:"deep_link,omitempty"`
	// deep_link唤起成功追踪
	// 有些对接方式触发deep_link唤起成功追踪并不是必需的，但是只要该追踪触发就一定是唤起成功了
	DeepLinkSuccessTracks []string `protobuf:"bytes,6,rep,name=deep_link_success_tracks,json=deepLinkSuccessTracks" json:"deep_link_success_tracks,omitempty"`
	// DSP声明的广告打开方式，仅对移动APP原生流量有效
	// 且必须从广告位允许的广告打开方式中选取(BidRequest.AdSlot.Native.landing_type)
	// 如果落地页地址为安装包地址，则必须指定打开方式为下载
	LandingType *int32 `protobuf:"varint,2,opt,name=landing_type,json=landingType" json:"landing_type,omitempty"`
	// DSP自定义的素材点击追踪地址(素材被点击时，发送素材点击追踪)
	// 如果素材点击被正常触发，会向该地址发送HTTP请求
	ContentClickTracks []string `protobuf:"bytes,5,rep,name=content_click_tracks,json=contentClickTracks" json:"content_click_tracks,omitempty"`
	// DSP自定义的点击追踪地址(点击地址触发时，发送点击追踪)
	// 如果点击被正常触发，会向该地址发送HTTP请求
	ClickTracks          []string `protobuf:"bytes,3,rep,name=click_tracks,json=clickTracks" json:"click_tracks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NativeAd_Creative_Link) Reset()         { *m = NativeAd_Creative_Link{} }
func (m *NativeAd_Creative_Link) String() string { return proto.CompactTextString(m) }
func (*NativeAd_Creative_Link) ProtoMessage()    {}
func (*NativeAd_Creative_Link) Descriptor() ([]byte, []int) {
	return fileDescriptor_max360_cc82d1867cdb5338, []int{2, 0, 2}
}
func (m *NativeAd_Creative_Link) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NativeAd_Creative_Link) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NativeAd_Creative_Link.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *NativeAd_Creative_Link) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NativeAd_Creative_Link.Merge(dst, src)
}
func (m *NativeAd_Creative_Link) XXX_Size() int {
	return m.Size()
}
func (m *NativeAd_Creative_Link) XXX_DiscardUnknown() {
	xxx_messageInfo_NativeAd_Creative_Link.DiscardUnknown(m)
}

var xxx_messageInfo_NativeAd_Creative_Link proto.InternalMessageInfo

func (m *NativeAd_Creative_Link) GetClickUrl() string {
	if m != nil && m.ClickUrl != nil {
		return *m.ClickUrl
	}
	return ""
}

func (m *NativeAd_Creative_Link) GetDeepLink() string {
	if m != nil && m.DeepLink != nil {
		return *m.DeepLink
	}
	return ""
}

func (m *NativeAd_Creative_Link) GetDeepLinkSuccessTracks() []string {
	if m != nil {
		return m.DeepLinkSuccessTracks
	}
	return nil
}

func (m *NativeAd_Creative_Link) GetLandingType() int32 {
	if m != nil && m.LandingType != nil {
		return *m.LandingType
	}
	return 0
}

func (m *NativeAd_Creative_Link) GetContentClickTracks() []string {
	if m != nil {
		return m.ContentClickTracks
	}
	return nil
}

func (m *NativeAd_Creative_Link) GetClickTracks() []string {
	if m != nil {
		return m.ClickTracks
	}
	return nil
}

// 应用下载类广告中应用的详细信息
// 应用下载类广告必须填写该字段
type NativeAd_AppAttr struct {
	// 应用（APP）的名称，例如：唯品会
	AppName *string `protobuf:"bytes,1,opt,name=app_name,json=appName" json:"app_name,omitempty"`
	// 应用（APP）的包名，例如：com.achievo.vipshop
	AppPkg *string `protobuf:"bytes,2,opt,name=app_pkg,json=appPkg" json:"app_pkg,omitempty"`
	// 应用（APP）的pkg包MD5后的值，例如：d8bff3104d4ac1b246061c9b6355bea4
	AppMd5 *string `protobuf:"bytes,3,opt,name=app_md5,json=appMd5" json:"app_md5,omitempty"`
	// 应用（APP）的版本号(version code)，例如：632
	AppVc *int32 `protobuf:"varint,4,opt,name=app_vc,json=appVc" json:"app_vc,omitempty"`
	// 应用（APP）的包大小，单位是字节，例如：41051697
	AppSize              *int32   `protobuf:"varint,5,opt,name=app_size,json=appSize" json:"app_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NativeAd_AppAttr) Reset()         { *m = NativeAd_AppAttr{} }
func (m *NativeAd_AppAttr) String() string { return proto.CompactTextString(m) }
func (*NativeAd_AppAttr) ProtoMessage()    {}
func (*NativeAd_AppAttr) Descriptor() ([]byte, []int) {
	return fileDescriptor_max360_cc82d1867cdb5338, []int{2, 1}
}
func (m *NativeAd_AppAttr) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NativeAd_AppAttr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NativeAd_AppAttr.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *NativeAd_AppAttr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NativeAd_AppAttr.Merge(dst, src)
}
func (m *NativeAd_AppAttr) XXX_Size() int {
	return m.Size()
}
func (m *NativeAd_AppAttr) XXX_DiscardUnknown() {
	xxx_messageInfo_NativeAd_AppAttr.DiscardUnknown(m)
}

var xxx_messageInfo_NativeAd_AppAttr proto.InternalMessageInfo

func (m *NativeAd_AppAttr) GetAppName() string {
	if m != nil && m.AppName != nil {
		return *m.AppName
	}
	return ""
}

func (m *NativeAd_AppAttr) GetAppPkg() string {
	if m != nil && m.AppPkg != nil {
		return *m.AppPkg
	}
	return ""
}

func (m *NativeAd_AppAttr) GetAppMd5() string {
	if m != nil && m.AppMd5 != nil {
		return *m.AppMd5
	}
	return ""
}

func (m *NativeAd_AppAttr) GetAppVc() int32 {
	if m != nil && m.AppVc != nil {
		return *m.AppVc
	}
	return 0
}

func (m *NativeAd_AppAttr) GetAppSize() int32 {
	if m != nil && m.AppSize != nil {
		return *m.AppSize
	}
	return 0
}

func init() {
	proto.RegisterType((*BidRequest)(nil), "protobuf.BidRequest")
	proto.RegisterType((*BidRequest_UserCategory)(nil), "protobuf.BidRequest.UserCategory")
	proto.RegisterType((*BidRequest_ContentCategory)(nil), "protobuf.BidRequest.ContentCategory")
	proto.RegisterType((*BidRequest_AdSlot)(nil), "protobuf.BidRequest.AdSlot")
	proto.RegisterType((*BidRequest_AdSlot_Native)(nil), "protobuf.BidRequest.AdSlot.Native")
	proto.RegisterType((*BidRequest_AdSlot_Native_NativeTemplate)(nil), "protobuf.BidRequest.AdSlot.Native.NativeTemplate")
	proto.RegisterType((*BidRequest_AdSlot_Native_NativeTemplate_ImageSize)(nil), "protobuf.BidRequest.AdSlot.Native.NativeTemplate.ImageSize")
	proto.RegisterType((*BidRequest_AdSlot_Deal)(nil), "protobuf.BidRequest.AdSlot.Deal")
	proto.RegisterType((*BidRequest_Mobile)(nil), "protobuf.BidRequest.Mobile")
	proto.RegisterType((*BidRequest_Mobile_Device)(nil), "protobuf.BidRequest.Mobile.Device")
	proto.RegisterType((*BidResponse)(nil), "protobuf.BidResponse")
	proto.RegisterType((*BidResponse_Ads)(nil), "protobuf.BidResponse.Ads")
	proto.RegisterType((*NativeAd)(nil), "protobuf.NativeAd")
	proto.RegisterType((*NativeAd_Creative)(nil), "protobuf.NativeAd.Creative")
	proto.RegisterType((*NativeAd_Creative_Image)(nil), "protobuf.NativeAd.Creative.Image")
	proto.RegisterType((*NativeAd_Creative_Video)(nil), "protobuf.NativeAd.Creative.Video")
	proto.RegisterType((*NativeAd_Creative_Link)(nil), "protobuf.NativeAd.Creative.Link")
	proto.RegisterType((*NativeAd_AppAttr)(nil), "protobuf.NativeAd.AppAttr")
	proto.RegisterEnum("protobuf.BidRequest_AdSlot_SlotVisibility", BidRequest_AdSlot_SlotVisibility_name, BidRequest_AdSlot_SlotVisibility_value)
	proto.RegisterEnum("protobuf.BidRequest_AdSlot_Deal_DealType", BidRequest_AdSlot_Deal_DealType_name, BidRequest_AdSlot_Deal_DealType_value)
	proto.RegisterEnum("protobuf.BidRequest_Mobile_Device_ScreenOrientation", BidRequest_Mobile_Device_ScreenOrientation_name, BidRequest_Mobile_Device_ScreenOrientation_value)
}
func (m *BidRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BidRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Bid == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0xa
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.Bid)))
		i += copy(dAtA[i:], *m.Bid)
	}
	if m.MediavUserId != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.MediavUserId)))
		i += copy(dAtA[i:], *m.MediavUserId)
	}
	if m.Ip != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.Ip)))
		i += copy(dAtA[i:], *m.Ip)
	}
	if m.UserAgent != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.UserAgent)))
		i += copy(dAtA[i:], *m.UserAgent)
	}
	if m.Url != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.Url)))
		i += copy(dAtA[i:], *m.Url)
	}
	if m.AdxType != nil {
		dAtA[i] = 0x30
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.AdxType))
	}
	if len(m.Adslot) > 0 {
		for _, msg := range m.Adslot {
			dAtA[i] = 0x3a
			i++
			i = encodeVarintMax360(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.Mobile != nil {
		dAtA[i] = 0x42
		i++
		i = encodeVarintMax360(dAtA, i, uint64(m.Mobile.Size()))
		n1, err := m.Mobile.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	if m.IsTest != nil {
		dAtA[i] = 0x48
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.IsTest))
	}
	if len(m.UserVertical) > 0 {
		for _, num := range m.UserVertical {
			dAtA[i] = 0x50
			i++
			i = encodeVarintMax360(dAtA, i, uint64(num))
		}
	}
	if m.DetectedLanguage != nil {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.DetectedLanguage)))
		i += copy(dAtA[i:], *m.DetectedLanguage)
	}
	if len(m.ExcludedAdCategory) > 0 {
		for _, num := range m.ExcludedAdCategory {
			dAtA[i] = 0x60
			i++
			i = encodeVarintMax360(dAtA, i, uint64(num))
		}
	}
	if m.PublisherId != nil {
		dAtA[i] = 0x68
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.PublisherId))
	}
	if len(m.PublisherCategory) > 0 {
		for _, num := range m.PublisherCategory {
			dAtA[i] = 0x70
			i++
			i = encodeVarintMax360(dAtA, i, uint64(num))
		}
	}
	if m.PublisherCategoryVersion != nil {
		dAtA[i] = 0x78
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.PublisherCategoryVersion))
	}
	if len(m.ExcludedAttribute) > 0 {
		for _, num := range m.ExcludedAttribute {
			dAtA[i] = 0x80
			i++
			dAtA[i] = 0x1
			i++
			i = encodeVarintMax360(dAtA, i, uint64(num))
		}
	}
	if m.MvUserId != nil {
		dAtA[i] = 0x8a
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.MvUserId)))
		i += copy(dAtA[i:], *m.MvUserId)
	}
	if len(m.ContentCategory) > 0 {
		for _, msg := range m.ContentCategory {
			dAtA[i] = 0x92
			i++
			dAtA[i] = 0x1
			i++
			i = encodeVarintMax360(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.UserCategory) > 0 {
		for _, msg := range m.UserCategory {
			dAtA[i] = 0x9a
			i++
			dAtA[i] = 0x1
			i++
			i = encodeVarintMax360(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.Mid != nil {
		dAtA[i] = 0xa2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.Mid)))
		i += copy(dAtA[i:], *m.Mid)
	}
	if m.IsHttps != nil {
		dAtA[i] = 0xa8
		i++
		dAtA[i] = 0x1
		i++
		if *m.IsHttps {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.ExtendData != nil {
		dAtA[i] = 0xa2
		i++
		dAtA[i] = 0x6
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.ExtendData)))
		i += copy(dAtA[i:], *m.ExtendData)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *BidRequest_UserCategory) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BidRequest_UserCategory) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Id == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.Id))
	}
	if m.Weight == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.Weight))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *BidRequest_ContentCategory) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BidRequest_ContentCategory) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Id == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.Id))
	}
	if m.Weight == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.Weight))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *BidRequest_AdSlot) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BidRequest_AdSlot) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Id == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.Id))
	}
	if m.Pid != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.Pid)))
		i += copy(dAtA[i:], *m.Pid)
	}
	if m.Width != nil {
		dAtA[i] = 0x18
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.Width))
	}
	if m.Height != nil {
		dAtA[i] = 0x20
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.Height))
	}
	if len(m.ViewType) > 0 {
		for _, num := range m.ViewType {
			dAtA[i] = 0x28
			i++
			i = encodeVarintMax360(dAtA, i, uint64(num))
		}
	}
	if m.MinCpmPrice != nil {
		dAtA[i] = 0x30
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.MinCpmPrice))
	}
	if m.SlotVisibility != nil {
		dAtA[i] = 0x38
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.SlotVisibility))
	}
	if m.Native != nil {
		dAtA[i] = 0x42
		i++
		i = encodeVarintMax360(dAtA, i, uint64(m.Native.Size()))
		n2, err := m.Native.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	if len(m.Deals) > 0 {
		for _, msg := range m.Deals {
			dAtA[i] = 0x4a
			i++
			i = encodeVarintMax360(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.AdslotLevel != nil {
		dAtA[i] = 0x50
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.AdslotLevel))
	}
	if len(m.ExcludedAdvertiserId) > 0 {
		for _, s := range m.ExcludedAdvertiserId {
			dAtA[i] = 0x5a
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *BidRequest_AdSlot_Native) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BidRequest_AdSlot_Native) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.AdNum != nil {
		dAtA[i] = 0x8
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.AdNum))
	}
	if len(m.LandingType) > 0 {
		for _, num := range m.LandingType {
			dAtA[i] = 0x10
			i++
			i = encodeVarintMax360(dAtA, i, uint64(num))
		}
	}
	if len(m.TemplateId) > 0 {
		for _, num := range m.TemplateId {
			dAtA[i] = 0x18
			i++
			i = encodeVarintMax360(dAtA, i, uint64(num))
		}
	}
	if len(m.NativeTemplate) > 0 {
		for _, msg := range m.NativeTemplate {
			dAtA[i] = 0x22
			i++
			i = encodeVarintMax360(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *BidRequest_AdSlot_Native_NativeTemplate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BidRequest_AdSlot_Native_NativeTemplate) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.TemplateId == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.TemplateId))
	}
	if m.TemplateDesc != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.TemplateDesc)))
		i += copy(dAtA[i:], *m.TemplateDesc)
	}
	if m.CreativeNum != nil {
		dAtA[i] = 0x18
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.CreativeNum))
	}
	if len(m.ImageSize) > 0 {
		for _, msg := range m.ImageSize {
			dAtA[i] = 0x22
			i++
			i = encodeVarintMax360(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *BidRequest_AdSlot_Native_NativeTemplate_ImageSize) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BidRequest_AdSlot_Native_NativeTemplate_ImageSize) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Width == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.Width))
	}
	if m.Height == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.Height))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *BidRequest_AdSlot_Deal) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BidRequest_AdSlot_Deal) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.DealId == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.DealId))
	}
	if m.DealType == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.DealType))
	}
	if m.Date != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.Date)))
		i += copy(dAtA[i:], *m.Date)
	}
	if m.Price != nil {
		dAtA[i] = 0x20
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.Price))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *BidRequest_Mobile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BidRequest_Mobile) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.IsApp != nil {
		dAtA[i] = 0x8
		i++
		if *m.IsApp {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.IsFullscreen != nil {
		dAtA[i] = 0x10
		i++
		if *m.IsFullscreen {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.AppId != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.AppId)))
		i += copy(dAtA[i:], *m.AppId)
	}
	if m.Device != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintMax360(dAtA, i, uint64(m.Device.Size()))
		n3, err := m.Device.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n3
	}
	if len(m.AppCategory) > 0 {
		for _, num := range m.AppCategory {
			dAtA[i] = 0x28
			i++
			i = encodeVarintMax360(dAtA, i, uint64(num))
		}
	}
	if m.PackageName != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.PackageName)))
		i += copy(dAtA[i:], *m.PackageName)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *BidRequest_Mobile_Device) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BidRequest_Mobile_Device) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Platform != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.Platform)))
		i += copy(dAtA[i:], *m.Platform)
	}
	if m.Model != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.Model)))
		i += copy(dAtA[i:], *m.Model)
	}
	if m.Os != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.Os)))
		i += copy(dAtA[i:], *m.Os)
	}
	if m.OsVersion != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.OsVersion)))
		i += copy(dAtA[i:], *m.OsVersion)
	}
	if m.Network != nil {
		dAtA[i] = 0x30
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.Network))
	}
	if m.CarrierId != nil {
		dAtA[i] = 0x38
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.CarrierId))
	}
	if m.Longitude != nil {
		dAtA[i] = 0x42
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.Longitude)))
		i += copy(dAtA[i:], *m.Longitude)
	}
	if m.Latitude != nil {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.Latitude)))
		i += copy(dAtA[i:], *m.Latitude)
	}
	if m.ScreenWidth != nil {
		dAtA[i] = 0x50
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.ScreenWidth))
	}
	if m.ScreenHeight != nil {
		dAtA[i] = 0x58
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.ScreenHeight))
	}
	if m.ScreenOrientation != nil {
		dAtA[i] = 0x60
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.ScreenOrientation))
	}
	if m.Idfa != nil {
		dAtA[i] = 0x6a
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.Idfa)))
		i += copy(dAtA[i:], *m.Idfa)
	}
	if m.HashedIdfa != nil {
		dAtA[i] = 0x72
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.HashedIdfa)))
		i += copy(dAtA[i:], *m.HashedIdfa)
	}
	if m.HashedImei != nil {
		dAtA[i] = 0x7a
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.HashedImei)))
		i += copy(dAtA[i:], *m.HashedImei)
	}
	if m.Imei != nil {
		dAtA[i] = 0x82
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.Imei)))
		i += copy(dAtA[i:], *m.Imei)
	}
	if m.AndroidId != nil {
		dAtA[i] = 0x8a
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.AndroidId)))
		i += copy(dAtA[i:], *m.AndroidId)
	}
	if m.HashedAndroidId != nil {
		dAtA[i] = 0x92
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.HashedAndroidId)))
		i += copy(dAtA[i:], *m.HashedAndroidId)
	}
	if m.Mac != nil {
		dAtA[i] = 0x9a
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.Mac)))
		i += copy(dAtA[i:], *m.Mac)
	}
	if m.HashedMac != nil {
		dAtA[i] = 0xa2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.HashedMac)))
		i += copy(dAtA[i:], *m.HashedMac)
	}
	if m.M2Id != nil {
		dAtA[i] = 0xaa
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.M2Id)))
		i += copy(dAtA[i:], *m.M2Id)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *BidResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BidResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Bid == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0xa
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.Bid)))
		i += copy(dAtA[i:], *m.Bid)
	}
	if len(m.Ads) > 0 {
		for _, msg := range m.Ads {
			dAtA[i] = 0x1a
			i++
			i = encodeVarintMax360(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *BidResponse_Ads) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BidResponse_Ads) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.AdslotId == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.AdslotId))
	}
	if m.MaxCpmPrice == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.MaxCpmPrice))
	}
	if m.HtmlSnippet != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.HtmlSnippet)))
		i += copy(dAtA[i:], *m.HtmlSnippet)
	}
	if len(m.Category) > 0 {
		for _, num := range m.Category {
			dAtA[i] = 0x20
			i++
			i = encodeVarintMax360(dAtA, i, uint64(num))
		}
	}
	if len(m.CreativeType) > 0 {
		for _, num := range m.CreativeType {
			dAtA[i] = 0x28
			i++
			i = encodeVarintMax360(dAtA, i, uint64(num))
		}
	}
	if len(m.DestinationUrl) > 0 {
		for _, s := range m.DestinationUrl {
			dAtA[i] = 0x32
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if m.AdvertiserId != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.AdvertiserId)))
		i += copy(dAtA[i:], *m.AdvertiserId)
	}
	if m.CreativeId != nil {
		dAtA[i] = 0x42
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.CreativeId)))
		i += copy(dAtA[i:], *m.CreativeId)
	}
	if m.Width != nil {
		dAtA[i] = 0x48
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.Width))
	}
	if m.Height != nil {
		dAtA[i] = 0x50
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.Height))
	}
	if m.ExtendData != nil {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.ExtendData)))
		i += copy(dAtA[i:], *m.ExtendData)
	}
	if m.Nurl != nil {
		dAtA[i] = 0x62
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.Nurl)))
		i += copy(dAtA[i:], *m.Nurl)
	}
	if len(m.NativeAd) > 0 {
		for _, msg := range m.NativeAd {
			dAtA[i] = 0x6a
			i++
			i = encodeVarintMax360(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.CreativeAttribute) > 0 {
		for _, num := range m.CreativeAttribute {
			dAtA[i] = 0x70
			i++
			i = encodeVarintMax360(dAtA, i, uint64(num))
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *NativeAd) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NativeAd) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.MaxCpmPrice == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.MaxCpmPrice))
	}
	if len(m.Creatives) > 0 {
		for _, msg := range m.Creatives {
			dAtA[i] = 0x12
			i++
			i = encodeVarintMax360(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.ImpressionTracks) > 0 {
		for _, s := range m.ImpressionTracks {
			dAtA[i] = 0x1a
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if len(m.Category) > 0 {
		for _, num := range m.Category {
			dAtA[i] = 0x20
			i++
			i = encodeVarintMax360(dAtA, i, uint64(num))
		}
	}
	if len(m.DestinationUrl) > 0 {
		for _, s := range m.DestinationUrl {
			dAtA[i] = 0x2a
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if m.AdvertiserId != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.AdvertiserId)))
		i += copy(dAtA[i:], *m.AdvertiserId)
	}
	if m.CreativeId != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.CreativeId)))
		i += copy(dAtA[i:], *m.CreativeId)
	}
	if m.DealId != nil {
		dAtA[i] = 0x40
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.DealId))
	}
	if m.AppAttr != nil {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintMax360(dAtA, i, uint64(m.AppAttr.Size()))
		n4, err := m.AppAttr.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n4
	}
	if m.TemplateId != nil {
		dAtA[i] = 0x50
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.TemplateId))
	}
	if len(m.WinNoticeTracks) > 0 {
		for _, s := range m.WinNoticeTracks {
			dAtA[i] = 0x5a
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if len(m.FilterNoticeTracks) > 0 {
		for _, s := range m.FilterNoticeTracks {
			dAtA[i] = 0x62
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *NativeAd_Creative) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NativeAd_Creative) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Title != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.Title)))
		i += copy(dAtA[i:], *m.Title)
	}
	if m.SubTitle != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.SubTitle)))
		i += copy(dAtA[i:], *m.SubTitle)
	}
	if m.Description != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.Description)))
		i += copy(dAtA[i:], *m.Description)
	}
	if m.ButtonName != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.ButtonName)))
		i += copy(dAtA[i:], *m.ButtonName)
	}
	if m.ContentImage != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintMax360(dAtA, i, uint64(m.ContentImage.Size()))
		n5, err := m.ContentImage.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n5
	}
	if m.Logo != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintMax360(dAtA, i, uint64(m.Logo.Size()))
		n6, err := m.Logo.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n6
	}
	if m.Link != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintMax360(dAtA, i, uint64(m.Link.Size()))
		n7, err := m.Link.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n7
	}
	if m.LinkedImage != nil {
		dAtA[i] = 0x42
		i++
		i = encodeVarintMax360(dAtA, i, uint64(m.LinkedImage.Size()))
		n8, err := m.LinkedImage.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n8
	}
	if m.TemplateId != nil {
		dAtA[i] = 0x48
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.TemplateId))
	}
	if len(m.MultiImages) > 0 {
		for _, msg := range m.MultiImages {
			dAtA[i] = 0x62
			i++
			i = encodeVarintMax360(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.Video != nil {
		dAtA[i] = 0x6a
		i++
		i = encodeVarintMax360(dAtA, i, uint64(m.Video.Size()))
		n9, err := m.Video.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n9
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *NativeAd_Creative_Image) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NativeAd_Creative_Image) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.ImageUrl != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.ImageUrl)))
		i += copy(dAtA[i:], *m.ImageUrl)
	}
	if m.ImageWidth != nil {
		dAtA[i] = 0x10
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.ImageWidth))
	}
	if m.ImageHeight != nil {
		dAtA[i] = 0x18
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.ImageHeight))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *NativeAd_Creative_Video) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NativeAd_Creative_Video) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.VideoUrl != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.VideoUrl)))
		i += copy(dAtA[i:], *m.VideoUrl)
	}
	if m.Duration != nil {
		dAtA[i] = 0x10
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.Duration))
	}
	if m.VideoMd5 != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.VideoMd5)))
		i += copy(dAtA[i:], *m.VideoMd5)
	}
	if m.VideoSize != nil {
		dAtA[i] = 0x20
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.VideoSize))
	}
	if len(m.VideoStartTracks) > 0 {
		for _, s := range m.VideoStartTracks {
			dAtA[i] = 0x2a
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if len(m.VideoPauseTracks) > 0 {
		for _, s := range m.VideoPauseTracks {
			dAtA[i] = 0x32
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if len(m.VideoContinueTracks) > 0 {
		for _, s := range m.VideoContinueTracks {
			dAtA[i] = 0x3a
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if len(m.VideoExitTracks) > 0 {
		for _, s := range m.VideoExitTracks {
			dAtA[i] = 0x42
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if len(m.VideoComplateTracks) > 0 {
		for _, s := range m.VideoComplateTracks {
			dAtA[i] = 0x4a
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *NativeAd_Creative_Link) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NativeAd_Creative_Link) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.ClickUrl != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.ClickUrl)))
		i += copy(dAtA[i:], *m.ClickUrl)
	}
	if m.LandingType != nil {
		dAtA[i] = 0x10
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.LandingType))
	}
	if len(m.ClickTracks) > 0 {
		for _, s := range m.ClickTracks {
			dAtA[i] = 0x1a
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if m.DeepLink != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.DeepLink)))
		i += copy(dAtA[i:], *m.DeepLink)
	}
	if len(m.ContentClickTracks) > 0 {
		for _, s := range m.ContentClickTracks {
			dAtA[i] = 0x2a
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if len(m.DeepLinkSuccessTracks) > 0 {
		for _, s := range m.DeepLinkSuccessTracks {
			dAtA[i] = 0x32
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *NativeAd_AppAttr) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NativeAd_AppAttr) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.AppName != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.AppName)))
		i += copy(dAtA[i:], *m.AppName)
	}
	if m.AppPkg != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.AppPkg)))
		i += copy(dAtA[i:], *m.AppPkg)
	}
	if m.AppMd5 != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintMax360(dAtA, i, uint64(len(*m.AppMd5)))
		i += copy(dAtA[i:], *m.AppMd5)
	}
	if m.AppVc != nil {
		dAtA[i] = 0x20
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.AppVc))
	}
	if m.AppSize != nil {
		dAtA[i] = 0x28
		i++
		i = encodeVarintMax360(dAtA, i, uint64(*m.AppSize))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintMax360(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *BidRequest) Size() (n int) {
	var l int
	_ = l
	if m.Bid != nil {
		l = len(*m.Bid)
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.MediavUserId != nil {
		l = len(*m.MediavUserId)
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.Ip != nil {
		l = len(*m.Ip)
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.UserAgent != nil {
		l = len(*m.UserAgent)
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.Url != nil {
		l = len(*m.Url)
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.AdxType != nil {
		n += 1 + sovMax360(uint64(*m.AdxType))
	}
	if len(m.Adslot) > 0 {
		for _, e := range m.Adslot {
			l = e.Size()
			n += 1 + l + sovMax360(uint64(l))
		}
	}
	if m.Mobile != nil {
		l = m.Mobile.Size()
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.IsTest != nil {
		n += 1 + sovMax360(uint64(*m.IsTest))
	}
	if len(m.UserVertical) > 0 {
		for _, e := range m.UserVertical {
			n += 1 + sovMax360(uint64(e))
		}
	}
	if m.DetectedLanguage != nil {
		l = len(*m.DetectedLanguage)
		n += 1 + l + sovMax360(uint64(l))
	}
	if len(m.ExcludedAdCategory) > 0 {
		for _, e := range m.ExcludedAdCategory {
			n += 1 + sovMax360(uint64(e))
		}
	}
	if m.PublisherId != nil {
		n += 1 + sovMax360(uint64(*m.PublisherId))
	}
	if len(m.PublisherCategory) > 0 {
		for _, e := range m.PublisherCategory {
			n += 1 + sovMax360(uint64(e))
		}
	}
	if m.PublisherCategoryVersion != nil {
		n += 1 + sovMax360(uint64(*m.PublisherCategoryVersion))
	}
	if len(m.ExcludedAttribute) > 0 {
		for _, e := range m.ExcludedAttribute {
			n += 2 + sovMax360(uint64(e))
		}
	}
	if m.MvUserId != nil {
		l = len(*m.MvUserId)
		n += 2 + l + sovMax360(uint64(l))
	}
	if len(m.ContentCategory) > 0 {
		for _, e := range m.ContentCategory {
			l = e.Size()
			n += 2 + l + sovMax360(uint64(l))
		}
	}
	if len(m.UserCategory) > 0 {
		for _, e := range m.UserCategory {
			l = e.Size()
			n += 2 + l + sovMax360(uint64(l))
		}
	}
	if m.Mid != nil {
		l = len(*m.Mid)
		n += 2 + l + sovMax360(uint64(l))
	}
	if m.IsHttps != nil {
		n += 3
	}
	if m.ExtendData != nil {
		l = len(*m.ExtendData)
		n += 2 + l + sovMax360(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BidRequest_UserCategory) Size() (n int) {
	var l int
	_ = l
	if m.Id != nil {
		n += 1 + sovMax360(uint64(*m.Id))
	}
	if m.Weight != nil {
		n += 1 + sovMax360(uint64(*m.Weight))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BidRequest_ContentCategory) Size() (n int) {
	var l int
	_ = l
	if m.Id != nil {
		n += 1 + sovMax360(uint64(*m.Id))
	}
	if m.Weight != nil {
		n += 1 + sovMax360(uint64(*m.Weight))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BidRequest_AdSlot) Size() (n int) {
	var l int
	_ = l
	if m.Id != nil {
		n += 1 + sovMax360(uint64(*m.Id))
	}
	if m.Pid != nil {
		l = len(*m.Pid)
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.Width != nil {
		n += 1 + sovMax360(uint64(*m.Width))
	}
	if m.Height != nil {
		n += 1 + sovMax360(uint64(*m.Height))
	}
	if len(m.ViewType) > 0 {
		for _, e := range m.ViewType {
			n += 1 + sovMax360(uint64(e))
		}
	}
	if m.MinCpmPrice != nil {
		n += 1 + sovMax360(uint64(*m.MinCpmPrice))
	}
	if m.SlotVisibility != nil {
		n += 1 + sovMax360(uint64(*m.SlotVisibility))
	}
	if m.Native != nil {
		l = m.Native.Size()
		n += 1 + l + sovMax360(uint64(l))
	}
	if len(m.Deals) > 0 {
		for _, e := range m.Deals {
			l = e.Size()
			n += 1 + l + sovMax360(uint64(l))
		}
	}
	if m.AdslotLevel != nil {
		n += 1 + sovMax360(uint64(*m.AdslotLevel))
	}
	if len(m.ExcludedAdvertiserId) > 0 {
		for _, s := range m.ExcludedAdvertiserId {
			l = len(s)
			n += 1 + l + sovMax360(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BidRequest_AdSlot_Native) Size() (n int) {
	var l int
	_ = l
	if m.AdNum != nil {
		n += 1 + sovMax360(uint64(*m.AdNum))
	}
	if len(m.LandingType) > 0 {
		for _, e := range m.LandingType {
			n += 1 + sovMax360(uint64(e))
		}
	}
	if len(m.TemplateId) > 0 {
		for _, e := range m.TemplateId {
			n += 1 + sovMax360(uint64(e))
		}
	}
	if len(m.NativeTemplate) > 0 {
		for _, e := range m.NativeTemplate {
			l = e.Size()
			n += 1 + l + sovMax360(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BidRequest_AdSlot_Native_NativeTemplate) Size() (n int) {
	var l int
	_ = l
	if m.TemplateId != nil {
		n += 1 + sovMax360(uint64(*m.TemplateId))
	}
	if m.TemplateDesc != nil {
		l = len(*m.TemplateDesc)
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.CreativeNum != nil {
		n += 1 + sovMax360(uint64(*m.CreativeNum))
	}
	if len(m.ImageSize) > 0 {
		for _, e := range m.ImageSize {
			l = e.Size()
			n += 1 + l + sovMax360(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BidRequest_AdSlot_Native_NativeTemplate_ImageSize) Size() (n int) {
	var l int
	_ = l
	if m.Width != nil {
		n += 1 + sovMax360(uint64(*m.Width))
	}
	if m.Height != nil {
		n += 1 + sovMax360(uint64(*m.Height))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BidRequest_AdSlot_Deal) Size() (n int) {
	var l int
	_ = l
	if m.DealId != nil {
		n += 1 + sovMax360(uint64(*m.DealId))
	}
	if m.DealType != nil {
		n += 1 + sovMax360(uint64(*m.DealType))
	}
	if m.Date != nil {
		l = len(*m.Date)
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.Price != nil {
		n += 1 + sovMax360(uint64(*m.Price))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BidRequest_Mobile) Size() (n int) {
	var l int
	_ = l
	if m.IsApp != nil {
		n += 2
	}
	if m.IsFullscreen != nil {
		n += 2
	}
	if m.AppId != nil {
		l = len(*m.AppId)
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.Device != nil {
		l = m.Device.Size()
		n += 1 + l + sovMax360(uint64(l))
	}
	if len(m.AppCategory) > 0 {
		for _, e := range m.AppCategory {
			n += 1 + sovMax360(uint64(e))
		}
	}
	if m.PackageName != nil {
		l = len(*m.PackageName)
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BidRequest_Mobile_Device) Size() (n int) {
	var l int
	_ = l
	if m.Platform != nil {
		l = len(*m.Platform)
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.Model != nil {
		l = len(*m.Model)
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.Os != nil {
		l = len(*m.Os)
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.OsVersion != nil {
		l = len(*m.OsVersion)
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.Network != nil {
		n += 1 + sovMax360(uint64(*m.Network))
	}
	if m.CarrierId != nil {
		n += 1 + sovMax360(uint64(*m.CarrierId))
	}
	if m.Longitude != nil {
		l = len(*m.Longitude)
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.Latitude != nil {
		l = len(*m.Latitude)
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.ScreenWidth != nil {
		n += 1 + sovMax360(uint64(*m.ScreenWidth))
	}
	if m.ScreenHeight != nil {
		n += 1 + sovMax360(uint64(*m.ScreenHeight))
	}
	if m.ScreenOrientation != nil {
		n += 1 + sovMax360(uint64(*m.ScreenOrientation))
	}
	if m.Idfa != nil {
		l = len(*m.Idfa)
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.HashedIdfa != nil {
		l = len(*m.HashedIdfa)
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.HashedImei != nil {
		l = len(*m.HashedImei)
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.Imei != nil {
		l = len(*m.Imei)
		n += 2 + l + sovMax360(uint64(l))
	}
	if m.AndroidId != nil {
		l = len(*m.AndroidId)
		n += 2 + l + sovMax360(uint64(l))
	}
	if m.HashedAndroidId != nil {
		l = len(*m.HashedAndroidId)
		n += 2 + l + sovMax360(uint64(l))
	}
	if m.Mac != nil {
		l = len(*m.Mac)
		n += 2 + l + sovMax360(uint64(l))
	}
	if m.HashedMac != nil {
		l = len(*m.HashedMac)
		n += 2 + l + sovMax360(uint64(l))
	}
	if m.M2Id != nil {
		l = len(*m.M2Id)
		n += 2 + l + sovMax360(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BidResponse) Size() (n int) {
	var l int
	_ = l
	if m.Bid != nil {
		l = len(*m.Bid)
		n += 1 + l + sovMax360(uint64(l))
	}
	if len(m.Ads) > 0 {
		for _, e := range m.Ads {
			l = e.Size()
			n += 1 + l + sovMax360(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BidResponse_Ads) Size() (n int) {
	var l int
	_ = l
	if m.AdslotId != nil {
		n += 1 + sovMax360(uint64(*m.AdslotId))
	}
	if m.MaxCpmPrice != nil {
		n += 1 + sovMax360(uint64(*m.MaxCpmPrice))
	}
	if m.HtmlSnippet != nil {
		l = len(*m.HtmlSnippet)
		n += 1 + l + sovMax360(uint64(l))
	}
	if len(m.Category) > 0 {
		for _, e := range m.Category {
			n += 1 + sovMax360(uint64(e))
		}
	}
	if len(m.CreativeType) > 0 {
		for _, e := range m.CreativeType {
			n += 1 + sovMax360(uint64(e))
		}
	}
	if len(m.DestinationUrl) > 0 {
		for _, s := range m.DestinationUrl {
			l = len(s)
			n += 1 + l + sovMax360(uint64(l))
		}
	}
	if m.AdvertiserId != nil {
		l = len(*m.AdvertiserId)
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.CreativeId != nil {
		l = len(*m.CreativeId)
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.Width != nil {
		n += 1 + sovMax360(uint64(*m.Width))
	}
	if m.Height != nil {
		n += 1 + sovMax360(uint64(*m.Height))
	}
	if m.ExtendData != nil {
		l = len(*m.ExtendData)
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.Nurl != nil {
		l = len(*m.Nurl)
		n += 1 + l + sovMax360(uint64(l))
	}
	if len(m.NativeAd) > 0 {
		for _, e := range m.NativeAd {
			l = e.Size()
			n += 1 + l + sovMax360(uint64(l))
		}
	}
	if len(m.CreativeAttribute) > 0 {
		for _, e := range m.CreativeAttribute {
			n += 1 + sovMax360(uint64(e))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NativeAd) Size() (n int) {
	var l int
	_ = l
	if m.MaxCpmPrice != nil {
		n += 1 + sovMax360(uint64(*m.MaxCpmPrice))
	}
	if len(m.Creatives) > 0 {
		for _, e := range m.Creatives {
			l = e.Size()
			n += 1 + l + sovMax360(uint64(l))
		}
	}
	if len(m.ImpressionTracks) > 0 {
		for _, s := range m.ImpressionTracks {
			l = len(s)
			n += 1 + l + sovMax360(uint64(l))
		}
	}
	if len(m.Category) > 0 {
		for _, e := range m.Category {
			n += 1 + sovMax360(uint64(e))
		}
	}
	if len(m.DestinationUrl) > 0 {
		for _, s := range m.DestinationUrl {
			l = len(s)
			n += 1 + l + sovMax360(uint64(l))
		}
	}
	if m.AdvertiserId != nil {
		l = len(*m.AdvertiserId)
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.CreativeId != nil {
		l = len(*m.CreativeId)
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.DealId != nil {
		n += 1 + sovMax360(uint64(*m.DealId))
	}
	if m.AppAttr != nil {
		l = m.AppAttr.Size()
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.TemplateId != nil {
		n += 1 + sovMax360(uint64(*m.TemplateId))
	}
	if len(m.WinNoticeTracks) > 0 {
		for _, s := range m.WinNoticeTracks {
			l = len(s)
			n += 1 + l + sovMax360(uint64(l))
		}
	}
	if len(m.FilterNoticeTracks) > 0 {
		for _, s := range m.FilterNoticeTracks {
			l = len(s)
			n += 1 + l + sovMax360(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NativeAd_Creative) Size() (n int) {
	var l int
	_ = l
	if m.Title != nil {
		l = len(*m.Title)
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.SubTitle != nil {
		l = len(*m.SubTitle)
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.Description != nil {
		l = len(*m.Description)
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.ButtonName != nil {
		l = len(*m.ButtonName)
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.ContentImage != nil {
		l = m.ContentImage.Size()
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.Logo != nil {
		l = m.Logo.Size()
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.Link != nil {
		l = m.Link.Size()
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.LinkedImage != nil {
		l = m.LinkedImage.Size()
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.TemplateId != nil {
		n += 1 + sovMax360(uint64(*m.TemplateId))
	}
	if len(m.MultiImages) > 0 {
		for _, e := range m.MultiImages {
			l = e.Size()
			n += 1 + l + sovMax360(uint64(l))
		}
	}
	if m.Video != nil {
		l = m.Video.Size()
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NativeAd_Creative_Image) Size() (n int) {
	var l int
	_ = l
	if m.ImageUrl != nil {
		l = len(*m.ImageUrl)
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.ImageWidth != nil {
		n += 1 + sovMax360(uint64(*m.ImageWidth))
	}
	if m.ImageHeight != nil {
		n += 1 + sovMax360(uint64(*m.ImageHeight))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NativeAd_Creative_Video) Size() (n int) {
	var l int
	_ = l
	if m.VideoUrl != nil {
		l = len(*m.VideoUrl)
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.Duration != nil {
		n += 1 + sovMax360(uint64(*m.Duration))
	}
	if m.VideoMd5 != nil {
		l = len(*m.VideoMd5)
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.VideoSize != nil {
		n += 1 + sovMax360(uint64(*m.VideoSize))
	}
	if len(m.VideoStartTracks) > 0 {
		for _, s := range m.VideoStartTracks {
			l = len(s)
			n += 1 + l + sovMax360(uint64(l))
		}
	}
	if len(m.VideoPauseTracks) > 0 {
		for _, s := range m.VideoPauseTracks {
			l = len(s)
			n += 1 + l + sovMax360(uint64(l))
		}
	}
	if len(m.VideoContinueTracks) > 0 {
		for _, s := range m.VideoContinueTracks {
			l = len(s)
			n += 1 + l + sovMax360(uint64(l))
		}
	}
	if len(m.VideoExitTracks) > 0 {
		for _, s := range m.VideoExitTracks {
			l = len(s)
			n += 1 + l + sovMax360(uint64(l))
		}
	}
	if len(m.VideoComplateTracks) > 0 {
		for _, s := range m.VideoComplateTracks {
			l = len(s)
			n += 1 + l + sovMax360(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NativeAd_Creative_Link) Size() (n int) {
	var l int
	_ = l
	if m.ClickUrl != nil {
		l = len(*m.ClickUrl)
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.LandingType != nil {
		n += 1 + sovMax360(uint64(*m.LandingType))
	}
	if len(m.ClickTracks) > 0 {
		for _, s := range m.ClickTracks {
			l = len(s)
			n += 1 + l + sovMax360(uint64(l))
		}
	}
	if m.DeepLink != nil {
		l = len(*m.DeepLink)
		n += 1 + l + sovMax360(uint64(l))
	}
	if len(m.ContentClickTracks) > 0 {
		for _, s := range m.ContentClickTracks {
			l = len(s)
			n += 1 + l + sovMax360(uint64(l))
		}
	}
	if len(m.DeepLinkSuccessTracks) > 0 {
		for _, s := range m.DeepLinkSuccessTracks {
			l = len(s)
			n += 1 + l + sovMax360(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NativeAd_AppAttr) Size() (n int) {
	var l int
	_ = l
	if m.AppName != nil {
		l = len(*m.AppName)
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.AppPkg != nil {
		l = len(*m.AppPkg)
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.AppMd5 != nil {
		l = len(*m.AppMd5)
		n += 1 + l + sovMax360(uint64(l))
	}
	if m.AppVc != nil {
		n += 1 + sovMax360(uint64(*m.AppVc))
	}
	if m.AppSize != nil {
		n += 1 + sovMax360(uint64(*m.AppSize))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovMax360(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozMax360(x uint64) (n int) {
	return sovMax360(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *BidRequest) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMax360
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BidRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BidRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Bid = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MediavUserId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.MediavUserId = &s
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ip", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Ip = &s
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserAgent", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.UserAgent = &s
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Url = &s
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdxType", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AdxType = &v
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Adslot", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Adslot = append(m.Adslot, &BidRequest_AdSlot{})
			if err := m.Adslot[len(m.Adslot)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mobile", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Mobile == nil {
				m.Mobile = &BidRequest_Mobile{}
			}
			if err := m.Mobile.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsTest", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsTest = &v
		case 10:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMax360
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.UserVertical = append(m.UserVertical, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMax360
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthMax360
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowMax360
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.UserVertical = append(m.UserVertical, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field UserVertical", wireType)
			}
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DetectedLanguage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.DetectedLanguage = &s
			iNdEx = postIndex
		case 12:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMax360
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.ExcludedAdCategory = append(m.ExcludedAdCategory, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMax360
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthMax360
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowMax360
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.ExcludedAdCategory = append(m.ExcludedAdCategory, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ExcludedAdCategory", wireType)
			}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PublisherId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PublisherId = &v
		case 14:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMax360
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.PublisherCategory = append(m.PublisherCategory, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMax360
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthMax360
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowMax360
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.PublisherCategory = append(m.PublisherCategory, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field PublisherCategory", wireType)
			}
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PublisherCategoryVersion", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PublisherCategoryVersion = &v
		case 16:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMax360
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.ExcludedAttribute = append(m.ExcludedAttribute, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMax360
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthMax360
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowMax360
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.ExcludedAttribute = append(m.ExcludedAttribute, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ExcludedAttribute", wireType)
			}
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MvUserId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.MvUserId = &s
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContentCategory", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ContentCategory = append(m.ContentCategory, &BidRequest_ContentCategory{})
			if err := m.ContentCategory[len(m.ContentCategory)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 19:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserCategory", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserCategory = append(m.UserCategory, &BidRequest_UserCategory{})
			if err := m.UserCategory[len(m.UserCategory)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Mid = &s
			iNdEx = postIndex
		case 21:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsHttps", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.IsHttps = &b
		case 100:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExtendData", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ExtendData = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMax360(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMax360
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BidRequest_UserCategory) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMax360
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserCategory: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserCategory: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Id = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Weight", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Weight = &v
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipMax360(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMax360
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BidRequest_ContentCategory) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMax360
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContentCategory: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContentCategory: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Id = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Weight", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Weight = &v
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipMax360(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMax360
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BidRequest_AdSlot) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMax360
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AdSlot: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AdSlot: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Id = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Pid = &s
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Width", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Width = &v
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Height = &v
		case 5:
			if wireType == 0 {
				var v uint32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMax360
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (uint32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.ViewType = append(m.ViewType, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMax360
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthMax360
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v uint32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowMax360
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (uint32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.ViewType = append(m.ViewType, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ViewType", wireType)
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinCpmPrice", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MinCpmPrice = &v
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SlotVisibility", wireType)
			}
			var v BidRequest_AdSlot_SlotVisibility
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (BidRequest_AdSlot_SlotVisibility(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SlotVisibility = &v
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Native", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Native == nil {
				m.Native = &BidRequest_AdSlot_Native{}
			}
			if err := m.Native.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Deals", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Deals = append(m.Deals, &BidRequest_AdSlot_Deal{})
			if err := m.Deals[len(m.Deals)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdslotLevel", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AdslotLevel = &v
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExcludedAdvertiserId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExcludedAdvertiserId = append(m.ExcludedAdvertiserId, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMax360(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMax360
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BidRequest_AdSlot_Native) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMax360
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Native: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Native: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdNum", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AdNum = &v
		case 2:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMax360
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.LandingType = append(m.LandingType, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMax360
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthMax360
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowMax360
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.LandingType = append(m.LandingType, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field LandingType", wireType)
			}
		case 3:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMax360
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.TemplateId = append(m.TemplateId, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMax360
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthMax360
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowMax360
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.TemplateId = append(m.TemplateId, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field TemplateId", wireType)
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NativeTemplate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NativeTemplate = append(m.NativeTemplate, &BidRequest_AdSlot_Native_NativeTemplate{})
			if err := m.NativeTemplate[len(m.NativeTemplate)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMax360(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMax360
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BidRequest_AdSlot_Native_NativeTemplate) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMax360
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NativeTemplate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NativeTemplate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TemplateId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TemplateId = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TemplateDesc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.TemplateDesc = &s
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreativeNum", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CreativeNum = &v
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImageSize", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ImageSize = append(m.ImageSize, &BidRequest_AdSlot_Native_NativeTemplate_ImageSize{})
			if err := m.ImageSize[len(m.ImageSize)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMax360(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMax360
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BidRequest_AdSlot_Native_NativeTemplate_ImageSize) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMax360
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ImageSize: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ImageSize: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Width", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Width = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Height = &v
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipMax360(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMax360
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BidRequest_AdSlot_Deal) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMax360
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Deal: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Deal: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DealId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DealId = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DealType", wireType)
			}
			var v BidRequest_AdSlot_Deal_DealType
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (BidRequest_AdSlot_Deal_DealType(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DealType = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Date", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Date = &s
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Price", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Price = &v
		default:
			iNdEx = preIndex
			skippy, err := skipMax360(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMax360
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BidRequest_Mobile) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMax360
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Mobile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Mobile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsApp", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.IsApp = &b
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsFullscreen", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.IsFullscreen = &b
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.AppId = &s
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Device", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Device == nil {
				m.Device = &BidRequest_Mobile_Device{}
			}
			if err := m.Device.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMax360
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.AppCategory = append(m.AppCategory, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMax360
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthMax360
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowMax360
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.AppCategory = append(m.AppCategory, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field AppCategory", wireType)
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PackageName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.PackageName = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMax360(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMax360
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BidRequest_Mobile_Device) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMax360
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Device: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Device: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Platform", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Platform = &s
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Model", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Model = &s
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Os", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Os = &s
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OsVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.OsVersion = &s
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Network", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Network = &v
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CarrierId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CarrierId = &v
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Longitude", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Longitude = &s
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Latitude", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Latitude = &s
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ScreenWidth", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ScreenWidth = &v
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ScreenHeight", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ScreenHeight = &v
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ScreenOrientation", wireType)
			}
			var v BidRequest_Mobile_Device_ScreenOrientation
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (BidRequest_Mobile_Device_ScreenOrientation(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ScreenOrientation = &v
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Idfa", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Idfa = &s
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HashedIdfa", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.HashedIdfa = &s
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HashedImei", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.HashedImei = &s
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Imei", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Imei = &s
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AndroidId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.AndroidId = &s
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HashedAndroidId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.HashedAndroidId = &s
			iNdEx = postIndex
		case 19:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mac", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Mac = &s
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HashedMac", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.HashedMac = &s
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field M2Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.M2Id = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMax360(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMax360
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BidResponse) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMax360
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BidResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BidResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Bid = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ads", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ads = append(m.Ads, &BidResponse_Ads{})
			if err := m.Ads[len(m.Ads)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMax360(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMax360
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BidResponse_Ads) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMax360
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Ads: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Ads: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdslotId", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AdslotId = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxCpmPrice", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MaxCpmPrice = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HtmlSnippet", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.HtmlSnippet = &s
			iNdEx = postIndex
		case 4:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMax360
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Category = append(m.Category, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMax360
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthMax360
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowMax360
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Category = append(m.Category, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Category", wireType)
			}
		case 5:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMax360
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.CreativeType = append(m.CreativeType, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMax360
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthMax360
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowMax360
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.CreativeType = append(m.CreativeType, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field CreativeType", wireType)
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DestinationUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DestinationUrl = append(m.DestinationUrl, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdvertiserId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.AdvertiserId = &s
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreativeId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.CreativeId = &s
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Width", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Width = &v
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Height = &v
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExtendData", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ExtendData = &s
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nurl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Nurl = &s
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NativeAd", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NativeAd = append(m.NativeAd, &NativeAd{})
			if err := m.NativeAd[len(m.NativeAd)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 14:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMax360
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.CreativeAttribute = append(m.CreativeAttribute, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMax360
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthMax360
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowMax360
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.CreativeAttribute = append(m.CreativeAttribute, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field CreativeAttribute", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMax360(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMax360
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NativeAd) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMax360
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NativeAd: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NativeAd: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxCpmPrice", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MaxCpmPrice = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creatives", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creatives = append(m.Creatives, &NativeAd_Creative{})
			if err := m.Creatives[len(m.Creatives)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImpressionTracks", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ImpressionTracks = append(m.ImpressionTracks, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 4:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMax360
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Category = append(m.Category, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMax360
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthMax360
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowMax360
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Category = append(m.Category, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Category", wireType)
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DestinationUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DestinationUrl = append(m.DestinationUrl, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdvertiserId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.AdvertiserId = &s
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreativeId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.CreativeId = &s
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DealId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DealId = &v
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppAttr", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AppAttr == nil {
				m.AppAttr = &NativeAd_AppAttr{}
			}
			if err := m.AppAttr.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TemplateId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TemplateId = &v
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WinNoticeTracks", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WinNoticeTracks = append(m.WinNoticeTracks, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FilterNoticeTracks", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FilterNoticeTracks = append(m.FilterNoticeTracks, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMax360(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMax360
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NativeAd_Creative) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMax360
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Creative: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Creative: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Title = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubTitle", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.SubTitle = &s
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Description = &s
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ButtonName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ButtonName = &s
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContentImage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ContentImage == nil {
				m.ContentImage = &NativeAd_Creative_Image{}
			}
			if err := m.ContentImage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Logo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Logo == nil {
				m.Logo = &NativeAd_Creative_Image{}
			}
			if err := m.Logo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Link", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Link == nil {
				m.Link = &NativeAd_Creative_Link{}
			}
			if err := m.Link.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LinkedImage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LinkedImage == nil {
				m.LinkedImage = &NativeAd_Creative_Image{}
			}
			if err := m.LinkedImage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TemplateId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TemplateId = &v
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MultiImages", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MultiImages = append(m.MultiImages, &NativeAd_Creative_Image{})
			if err := m.MultiImages[len(m.MultiImages)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Video", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Video == nil {
				m.Video = &NativeAd_Creative_Video{}
			}
			if err := m.Video.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMax360(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMax360
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NativeAd_Creative_Image) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMax360
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Image: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Image: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImageUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ImageUrl = &s
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImageWidth", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ImageWidth = &v
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImageHeight", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ImageHeight = &v
		default:
			iNdEx = preIndex
			skippy, err := skipMax360(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMax360
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NativeAd_Creative_Video) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMax360
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Video: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Video: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VideoUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.VideoUrl = &s
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Duration", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Duration = &v
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VideoMd5", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.VideoMd5 = &s
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VideoSize", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.VideoSize = &v
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VideoStartTracks", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VideoStartTracks = append(m.VideoStartTracks, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VideoPauseTracks", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VideoPauseTracks = append(m.VideoPauseTracks, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VideoContinueTracks", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VideoContinueTracks = append(m.VideoContinueTracks, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VideoExitTracks", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VideoExitTracks = append(m.VideoExitTracks, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VideoComplateTracks", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VideoComplateTracks = append(m.VideoComplateTracks, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMax360(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMax360
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NativeAd_Creative_Link) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMax360
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Link: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Link: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClickUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ClickUrl = &s
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LandingType", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LandingType = &v
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClickTracks", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClickTracks = append(m.ClickTracks, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeepLink", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.DeepLink = &s
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContentClickTracks", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ContentClickTracks = append(m.ContentClickTracks, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeepLinkSuccessTracks", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeepLinkSuccessTracks = append(m.DeepLinkSuccessTracks, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMax360(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMax360
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NativeAd_AppAttr) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMax360
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AppAttr: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AppAttr: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.AppName = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppPkg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.AppPkg = &s
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppMd5", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMax360
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.AppMd5 = &s
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppVc", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AppVc = &v
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppSize", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AppSize = &v
		default:
			iNdEx = preIndex
			skippy, err := skipMax360(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMax360
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMax360(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMax360
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMax360
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthMax360
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowMax360
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipMax360(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthMax360 = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMax360   = fmt.Errorf("proto: integer overflow")
)

func init() {
	proto.RegisterFile("internal/protobuf/max360.proto", fileDescriptor_max360_cc82d1867cdb5338)
}

var fileDescriptor_max360_cc82d1867cdb5338 = []byte{
	// 2417 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x58, 0x4d, 0x6f, 0x1b, 0xc7,
	0xf9, 0x0f, 0x49, 0xf1, 0x65, 0x1f, 0x52, 0x14, 0x35, 0xb6, 0x93, 0x35, 0xed, 0xd8, 0xb4, 0xf2,
	0x07, 0xfe, 0xaa, 0xd3, 0x2a, 0x8a, 0x12, 0x27, 0x88, 0x1b, 0xa0, 0xa0, 0x25, 0x1a, 0x61, 0xab,
	0x50, 0xc2, 0x88, 0x56, 0x90, 0x5c, 0x16, 0xab, 0x9d, 0xb1, 0x34, 0xd0, 0xbe, 0x95, 0x3b, 0x94,
	0xe5, 0x5c, 0x7a, 0xcd, 0xb1, 0xb7, 0xf6, 0x3b, 0xf4, 0x8b, 0xf4, 0x58, 0xf4, 0xdc, 0x43, 0x91,
	0x02, 0x41, 0x0f, 0xbd, 0xf4, 0x50, 0xf4, 0x5a, 0x3c, 0xcf, 0xcc, 0x2e, 0x49, 0x51, 0xb1, 0x9d,
	0x8b, 0xb4, 0xf3, 0x7b, 0x5e, 0xe6, 0xe5, 0x79, 0x27, 0xdc, 0x53, 0xb1, 0x96, 0x93, 0xd8, 0x0f,
	0x3f, 0x48, 0x27, 0x89, 0x4e, 0x4e, 0xa6, 0xcf, 0x3f, 0x88, 0xfc, 0xcb, 0x8f, 0x3e, 0xd9, 0xde,
	0xa2, 0x35, 0x6b, 0xe4, 0xf0, 0xc6, 0x0f, 0xb7, 0x01, 0x9e, 0x28, 0xc1, 0xe5, 0x6f, 0xa7, 0x32,
	0xd3, 0xac, 0x03, 0x95, 0x13, 0x25, 0xdc, 0x52, 0xaf, 0xbc, 0xe9, 0x70, 0xfc, 0x64, 0x9b, 0xd0,
	0x8e, 0xa4, 0x50, 0xfe, 0x85, 0x37, 0xcd, 0xe4, 0xc4, 0x53, 0xc2, 0x2d, 0xf7, 0x4a, 0x9b, 0xce,
	0x93, 0xb2, 0x5b, 0xe2, 0x2d, 0x43, 0x79, 0x96, 0xc9, 0xc9, 0x50, 0xb0, 0x36, 0x94, 0x55, 0xea,
	0x56, 0x90, 0xca, 0xcb, 0x2a, 0x65, 0xef, 0x02, 0x90, 0x88, 0x7f, 0x2a, 0x63, 0xed, 0xae, 0x10,
	0xee, 0x20, 0xd2, 0x47, 0x00, 0xb7, 0x9a, 0x4e, 0x42, 0xb7, 0x4a, 0x38, 0x7e, 0xb2, 0xbb, 0xd0,
	0xf0, 0xc5, 0xa5, 0xa7, 0x5f, 0xa6, 0xd2, 0xad, 0xf5, 0x4a, 0x9b, 0xab, 0x8f, 0x4b, 0xdb, 0xbc,
	0xee, 0x8b, 0xcb, 0xf1, 0xcb, 0x54, 0xb2, 0x8f, 0xa0, 0xe6, 0x8b, 0x2c, 0x4c, 0xb4, 0x5b, 0xef,
	0x55, 0x36, 0x9b, 0x3b, 0x77, 0xb6, 0xf2, 0x4b, 0x6c, 0xcd, 0x2e, 0xb0, 0xd5, 0x17, 0x47, 0x61,
	0xa2, 0xb9, 0x65, 0x45, 0xa1, 0x28, 0x39, 0x51, 0xa1, 0x74, 0x1b, 0xbd, 0xd2, 0x8f, 0x0a, 0x7d,
	0x49, 0x2c, 0xdc, 0xb2, 0xb2, 0x2e, 0xd4, 0x55, 0xe6, 0x69, 0x99, 0x69, 0xd7, 0xc9, 0x8f, 0x51,
	0x53, 0xd9, 0x18, 0x1f, 0xe8, 0x3d, 0x58, 0xa5, 0x4b, 0x5d, 0xc8, 0x89, 0x56, 0x81, 0x1f, 0xba,
	0xd0, 0xab, 0x6c, 0x56, 0x79, 0x0b, 0xc1, 0x63, 0x8b, 0xb1, 0xf7, 0x61, 0x5d, 0x48, 0x2d, 0x03,
	0x2d, 0x85, 0x17, 0xfa, 0xf1, 0xe9, 0xd4, 0x3f, 0x95, 0x6e, 0x93, 0x2e, 0xda, 0xc9, 0x09, 0xfb,
	0x16, 0x67, 0xdb, 0x70, 0x53, 0x5e, 0x06, 0xe1, 0x54, 0x48, 0xe1, 0xf9, 0xc2, 0x0b, 0x7c, 0x2d,
	0x4f, 0x93, 0xc9, 0x4b, 0xb7, 0x45, 0x8a, 0x59, 0x4e, 0xeb, 0x8b, 0x5d, 0x4b, 0x61, 0x0f, 0xa0,
	0x95, 0x4e, 0x4f, 0x42, 0x95, 0x9d, 0x19, 0x83, 0xac, 0xf6, 0x4a, 0x9b, 0x55, 0xde, 0x2c, 0xb0,
	0xa1, 0x60, 0xbf, 0x00, 0x36, 0x63, 0x29, 0x54, 0xb6, 0x49, 0xe5, 0x7a, 0x41, 0x29, 0x34, 0x7e,
	0x0e, 0xdd, 0x65, 0x76, 0xbc, 0x63, 0xa6, 0x92, 0xd8, 0x5d, 0x23, 0xfd, 0xee, 0x92, 0xd8, 0xb1,
	0xa1, 0xe3, 0x66, 0xb3, 0x1b, 0x68, 0x3d, 0x51, 0x27, 0x53, 0x2d, 0xdd, 0x8e, 0xd9, 0xac, 0x38,
	0x7f, 0x4e, 0x60, 0x77, 0x01, 0xa2, 0x99, 0x37, 0xad, 0xd3, 0xb3, 0x34, 0xa2, 0xdc, 0x8b, 0x0e,
	0xa0, 0x13, 0x24, 0xb1, 0x96, 0xb1, 0x9e, 0x9d, 0x9b, 0x91, 0xc1, 0xff, 0xef, 0x5a, 0xdb, 0xed,
	0x1a, 0xe6, 0xfc, 0x4c, 0x7c, 0x2d, 0x58, 0x04, 0xd8, 0x53, 0x6b, 0xb1, 0x42, 0xdb, 0x0d, 0xd2,
	0xf6, 0xe0, 0x5a, 0x6d, 0x78, 0x88, 0x42, 0x15, 0x19, 0xb5, 0xd0, 0xd3, 0x81, 0x4a, 0xa4, 0x84,
	0x7b, 0xd3, 0xf8, 0x6b, 0xa4, 0x04, 0xbb, 0x0d, 0x0d, 0x95, 0x79, 0x67, 0x5a, 0xa7, 0x99, 0x7b,
	0xab, 0x57, 0xda, 0x6c, 0xf0, 0xba, 0xca, 0xbe, 0xc0, 0x25, 0xbb, 0x0f, 0x4d, 0x79, 0xa9, 0x65,
	0x2c, 0x3c, 0xe1, 0x6b, 0xdf, 0x15, 0x24, 0x04, 0x06, 0xda, 0xf3, 0xb5, 0xdf, 0xfd, 0x1c, 0x5a,
	0xf3, 0x7b, 0x51, 0xf0, 0x98, 0xb8, 0xab, 0xf2, 0xb2, 0x12, 0xec, 0x2e, 0xd4, 0x5e, 0x48, 0x75,
	0x7a, 0xa6, 0xdd, 0x32, 0x62, 0x8f, 0x57, 0x3e, 0xdc, 0xde, 0xde, 0xe6, 0x16, 0xeb, 0xfe, 0x0a,
	0xd6, 0xae, 0xdc, 0xfb, 0x27, 0x2a, 0xf8, 0x8f, 0x03, 0x35, 0x13, 0x2a, 0x73, 0x82, 0xab, 0x24,
	0xd8, 0x81, 0x4a, 0x9a, 0x47, 0x39, 0xc7, 0x4f, 0x76, 0x13, 0xaa, 0x2f, 0x94, 0xd0, 0x67, 0x14,
	0xdb, 0x55, 0x6e, 0x16, 0xec, 0x6d, 0xa8, 0x9d, 0x99, 0x0d, 0x56, 0x08, 0xb6, 0x2b, 0x76, 0x07,
	0x9c, 0x0b, 0x25, 0x5f, 0x98, 0x30, 0xae, 0xf6, 0x2a, 0x9b, 0xab, 0xbc, 0x81, 0x00, 0x05, 0xf1,
	0x06, 0xac, 0x46, 0x2a, 0xf6, 0x82, 0x34, 0xf2, 0xd2, 0x89, 0x0a, 0x6c, 0x9c, 0xf3, 0x66, 0xa4,
	0xe2, 0xdd, 0x34, 0x3a, 0x44, 0x88, 0xf9, 0xb0, 0x86, 0xb1, 0xeb, 0x5d, 0xa8, 0x4c, 0x9d, 0xa8,
	0x50, 0xe9, 0x97, 0x6e, 0xbd, 0x57, 0xda, 0x6c, 0xef, 0x3c, 0x7c, 0x45, 0xc4, 0x6f, 0xe1, 0x9f,
	0xe3, 0x42, 0xe2, 0x71, 0x6b, 0x74, 0xe0, 0xed, 0x0d, 0xc6, 0x83, 0xdd, 0xf1, 0xf0, 0x60, 0xc4,
	0xdb, 0xd9, 0x02, 0x95, 0x3d, 0x86, 0x5a, 0xec, 0x6b, 0x75, 0x91, 0xa7, 0x85, 0x8d, 0x57, 0x69,
	0x1e, 0x11, 0x27, 0xb7, 0x12, 0xec, 0x13, 0xa8, 0x0a, 0xe9, 0x87, 0x99, 0xeb, 0x90, 0x1f, 0xf5,
	0x5e, 0x25, 0xba, 0x27, 0xfd, 0x90, 0x1b, 0x76, 0x8c, 0x5a, 0x93, 0x94, 0xbc, 0x50, 0x5e, 0x48,
	0x4c, 0x1c, 0x74, 0x73, 0x83, 0xed, 0x23, 0xc4, 0x3e, 0x86, 0xb7, 0xe7, 0x52, 0x01, 0xa5, 0x18,
	0x1b, 0x25, 0xcd, 0x5e, 0x65, 0xd3, 0xe1, 0x37, 0x67, 0xc9, 0x20, 0x27, 0x0e, 0x45, 0xf7, 0xaf,
	0x15, 0xa8, 0x99, 0x33, 0xb2, 0x5b, 0x98, 0x23, 0xbd, 0x78, 0x1a, 0xb9, 0x25, 0xd2, 0x5e, 0xf5,
	0xc5, 0x68, 0x1a, 0xe1, 0xd6, 0xa1, 0x1f, 0x0b, 0x15, 0x9f, 0x1a, 0xab, 0x94, 0x29, 0x34, 0x9b,
	0x16, 0x23, 0xc3, 0xdc, 0x87, 0xa6, 0x96, 0x51, 0x1a, 0xfa, 0x5a, 0xe2, 0x7e, 0x15, 0xe2, 0x80,
	0x1c, 0x1a, 0x0a, 0xf6, 0x0d, 0xac, 0x99, 0x07, 0xf0, 0x72, 0xd0, 0x5d, 0xa1, 0x07, 0xf8, 0xf0,
	0xf5, 0x6f, 0x67, 0xff, 0x8d, 0xad, 0x20, 0x6f, 0xc7, 0x0b, 0xeb, 0xee, 0xef, 0xcb, 0xd0, 0x5e,
	0x64, 0xb9, 0x7a, 0x1e, 0xe3, 0xd7, 0xf3, 0xe7, 0x79, 0x0f, 0x56, 0x0b, 0x06, 0x21, 0xb3, 0xc0,
	0x3a, 0x6c, 0x2b, 0x07, 0xf7, 0x64, 0x16, 0xe0, 0xc5, 0x83, 0x89, 0x34, 0xc7, 0xc6, 0x57, 0x31,
	0x0e, 0xdc, 0xcc, 0x31, 0x7c, 0x9b, 0x6f, 0x00, 0x54, 0xe4, 0x9f, 0x4a, 0x2f, 0x53, 0xdf, 0xe6,
	0x57, 0xfa, 0xe5, 0x4f, 0xbe, 0xd2, 0xd6, 0x10, 0x75, 0x1c, 0xa9, 0x6f, 0x25, 0x77, 0x54, 0xfe,
	0xd9, 0xfd, 0x0c, 0x9c, 0x02, 0x9f, 0x45, 0x91, 0xb9, 0xcb, 0x52, 0x14, 0x51, 0x98, 0xe6, 0x51,
	0xd4, 0xfd, 0xae, 0x0c, 0x2b, 0xe8, 0x3d, 0xec, 0x1d, 0xa8, 0xa3, 0xff, 0xe4, 0x8f, 0x50, 0xe1,
	0x35, 0x5c, 0x0e, 0x05, 0xfb, 0x1a, 0x1c, 0x22, 0x58, 0x8b, 0x96, 0x37, 0xdb, 0x3b, 0x3f, 0x7b,
	0x9d, 0x2f, 0xd2, 0x1f, 0xb4, 0xf7, 0xe3, 0xf5, 0x67, 0xa3, 0xdf, 0x8c, 0x0e, 0xbe, 0x1a, 0x79,
	0x7b, 0x83, 0xfe, 0xbe, 0x37, 0xfe, 0xfa, 0x70, 0xc0, 0x1b, 0xc2, 0x12, 0x19, 0x83, 0x15, 0x81,
	0x06, 0x36, 0xb5, 0x9c, 0xbe, 0xf1, 0xf8, 0x26, 0x62, 0x57, 0x8c, 0x67, 0xd1, 0x62, 0xe3, 0x04,
	0x1a, 0xb9, 0x4a, 0x76, 0x0b, 0x96, 0x95, 0x76, 0xde, 0x62, 0x0c, 0xda, 0x87, 0x7c, 0xf0, 0x74,
	0xc0, 0xf9, 0x60, 0x8f, 0x08, 0x9d, 0x12, 0xbb, 0x01, 0x6b, 0x87, 0x7c, 0x78, 0xdc, 0x1f, 0x0f,
	0xbc, 0xfe, 0x33, 0x0a, 0xd1, 0x4e, 0x99, 0xbd, 0x0d, 0x2c, 0x07, 0xf7, 0x86, 0x7c, 0xb0, 0x3b,
	0xf6, 0x9e, 0x3c, 0xfb, 0xba, 0x53, 0xd9, 0xf8, 0x35, 0xb4, 0x17, 0x83, 0x9b, 0x75, 0x60, 0x21,
	0xbc, 0xcd, 0x26, 0xfd, 0x27, 0x07, 0xc7, 0x03, 0x6f, 0xfc, 0xc5, 0xc0, 0x7b, 0x7a, 0xb0, 0xbf,
	0xd7, 0x29, 0x21, 0xf6, 0x64, 0xb0, 0x7f, 0xf0, 0xd5, 0x0c, 0x2b, 0x77, 0xff, 0x5b, 0x87, 0x9a,
	0xa9, 0xf6, 0x18, 0x2b, 0x2a, 0xf3, 0xfc, 0x34, 0xa5, 0x58, 0x69, 0xf0, 0xaa, 0xca, 0xfa, 0x69,
	0x8a, 0x7e, 0xa5, 0x32, 0xef, 0xf9, 0x34, 0x0c, 0xb3, 0x60, 0x22, 0x65, 0x4c, 0x7e, 0xd5, 0xe0,
	0x2d, 0x95, 0x3d, 0x2d, 0x30, 0x8a, 0xb3, 0x34, 0x35, 0x81, 0x82, 0x4f, 0x54, 0xf5, 0xd3, 0x74,
	0x28, 0x30, 0xad, 0x08, 0x79, 0x91, 0x3f, 0xd2, 0x8f, 0xa5, 0x15, 0xb3, 0xff, 0xd6, 0x1e, 0x71,
	0x72, 0x2b, 0x41, 0xe9, 0x21, 0x4d, 0x67, 0x55, 0xaa, 0x6a, 0x62, 0xd4, 0x4f, 0xd3, 0x85, 0xba,
	0xef, 0x07, 0xe7, 0xe8, 0xac, 0xb1, 0x1f, 0x99, 0xdc, 0xe9, 0xf0, 0xa6, 0xc5, 0x46, 0x7e, 0x24,
	0xbb, 0x7f, 0xa8, 0x41, 0xcd, 0x28, 0x66, 0x5d, 0x68, 0xa0, 0x6b, 0x3e, 0x4f, 0x26, 0x26, 0x1b,
	0x38, 0xbc, 0x58, 0xa3, 0x31, 0xa3, 0x44, 0xc8, 0x30, 0x3f, 0x3e, 0x2d, 0xb0, 0x12, 0x24, 0x99,
	0x6d, 0xd4, 0xca, 0x49, 0x86, 0x0d, 0x5c, 0x92, 0x15, 0x5d, 0x80, 0x69, 0xd4, 0x9c, 0x24, 0xcb,
	0xcb, 0xbe, 0x0b, 0xf5, 0x58, 0xea, 0x17, 0xc9, 0xe4, 0xdc, 0x66, 0xf1, 0x7c, 0x89, 0x82, 0x81,
	0x3f, 0x99, 0x28, 0x93, 0xbb, 0xea, 0x14, 0x74, 0x8e, 0x45, 0x86, 0x58, 0x9a, 0x9c, 0x30, 0x89,
	0x4f, 0x95, 0x9e, 0x0a, 0x93, 0x80, 0x1d, 0x3e, 0x03, 0xf0, 0xdc, 0xa1, 0xaf, 0x0d, 0xd1, 0x31,
	0xe7, 0xce, 0xd7, 0xf8, 0x02, 0xc6, 0x02, 0x9e, 0x09, 0x25, 0x30, 0xf1, 0x6c, 0xb0, 0xaf, 0x28,
	0xa0, 0xde, 0x83, 0x55, 0xcb, 0x62, 0xe3, 0xaa, 0x49, 0x3c, 0x56, 0xee, 0x0b, 0x53, 0xa3, 0x7e,
	0x07, 0xcc, 0x32, 0x25, 0x13, 0x25, 0x63, 0xed, 0x6b, 0xbc, 0x61, 0x8b, 0xaa, 0xcc, 0xc7, 0xaf,
	0x37, 0xda, 0xd6, 0x11, 0x09, 0x1f, 0xcc, 0x64, 0x1f, 0x77, 0x8f, 0x76, 0xf9, 0x60, 0x30, 0xf2,
	0x0e, 0xf8, 0x70, 0x30, 0x1a, 0xf7, 0xd1, 0x2d, 0x3d, 0x1b, 0x0d, 0x7c, 0x3d, 0xbb, 0xca, 0x8e,
	0x11, 0xa6, 0xc4, 0x73, 0x9f, 0x5a, 0x37, 0x87, 0xd3, 0x37, 0xa6, 0xbc, 0x33, 0x3f, 0x3b, 0x93,
	0xc2, 0x23, 0x52, 0xdb, 0xf4, 0x0c, 0x06, 0x1a, 0x5e, 0x61, 0x88, 0xa4, 0xa2, 0xb6, 0x6c, 0xc6,
	0x10, 0x49, 0x45, 0x5a, 0x91, 0xd2, 0xb1, 0x5a, 0x11, 0x7b, 0x17, 0xc0, 0x8f, 0xc5, 0x24, 0x51,
	0x62, 0xd6, 0x6d, 0x39, 0x16, 0x19, 0x0a, 0xf6, 0x10, 0xd6, 0xad, 0xce, 0x39, 0x2e, 0x46, 0x5c,
	0x6b, 0x86, 0xd0, 0x2f, 0x78, 0xb1, 0x03, 0xf2, 0x03, 0xf7, 0x86, 0xed, 0x80, 0xfc, 0x00, 0x95,
	0x5b, 0x69, 0x24, 0x98, 0xd6, 0xc8, 0x31, 0xc8, 0x97, 0x7e, 0x80, 0xe7, 0x89, 0x76, 0x94, 0xa0,
	0xe6, 0xc8, 0xe1, 0xf4, 0xbd, 0x71, 0x01, 0xeb, 0x4b, 0xaf, 0xc7, 0xee, 0xc1, 0x2b, 0xde, 0xaf,
	0xf3, 0x16, 0xbb, 0x0f, 0x77, 0xae, 0xa1, 0x1f, 0x1e, 0xf0, 0x31, 0xef, 0x0f, 0xc7, 0x9d, 0x12,
	0xeb, 0xc1, 0xdd, 0x6b, 0x18, 0xf6, 0xfb, 0xa3, 0xbd, 0xa3, 0xdd, 0xfe, 0xe1, 0xa0, 0x53, 0xde,
	0xf8, 0xd3, 0x0a, 0x34, 0xc9, 0x9e, 0x59, 0x9a, 0xc4, 0x99, 0xbc, 0x66, 0xd2, 0x79, 0x1f, 0x2a,
	0xbe, 0xc8, 0xa8, 0xf4, 0x35, 0x77, 0x6e, 0x5f, 0xf1, 0x02, 0x23, 0xb5, 0xd5, 0x17, 0x19, 0x47,
	0xae, 0xee, 0xdf, 0x2a, 0x50, 0xe9, 0x8b, 0x0c, 0xbb, 0x1d, 0x5b, 0xd5, 0x8b, 0x26, 0xaa, 0x61,
	0x80, 0xa1, 0xa0, 0x6e, 0xc7, 0xbf, 0x9c, 0xeb, 0x76, 0xca, 0xc4, 0xd0, 0x8c, 0xfc, 0xcb, 0xa2,
	0xdb, 0x79, 0x00, 0xad, 0x33, 0x1d, 0x85, 0x5e, 0x16, 0xab, 0x34, 0x95, 0xda, 0x46, 0x64, 0x13,
	0xb1, 0x23, 0x03, 0x61, 0x44, 0x14, 0x69, 0x61, 0x85, 0xd2, 0x42, 0xb1, 0x46, 0x77, 0x2f, 0x2a,
	0x5c, 0xd1, 0x71, 0x55, 0x79, 0x51, 0xf6, 0x28, 0x33, 0xff, 0x3f, 0xac, 0x09, 0x99, 0x69, 0x15,
	0xd3, 0x6b, 0x7b, 0x38, 0x76, 0xd5, 0xa8, 0xa1, 0x68, 0xcf, 0xc1, 0xcf, 0x26, 0x21, 0x6a, 0x5b,
	0xec, 0x3b, 0xea, 0xa6, 0xa8, 0xfa, 0x73, 0xfd, 0x06, 0xba, 0x61, 0xb1, 0xa5, 0x12, 0x36, 0x80,
	0x21, 0x87, 0x86, 0x73, 0xfd, 0xa2, 0x73, 0x7d, 0xbf, 0x08, 0x0b, 0xfd, 0xe2, 0x95, 0x56, 0xb9,
	0x79, 0xb5, 0x55, 0x46, 0x2f, 0x8a, 0xf1, 0xc8, 0x2d, 0xe3, 0x45, 0xf8, 0xcd, 0x3e, 0x00, 0xc7,
	0x76, 0x23, 0x3e, 0xce, 0x3f, 0x68, 0x31, 0x36, 0xb3, 0x98, 0xa9, 0xcd, 0x7d, 0xc1, 0x1b, 0xb1,
	0xfd, 0xc2, 0x19, 0xa5, 0x38, 0xf4, 0x6c, 0x46, 0xb1, 0x03, 0x51, 0x4e, 0x29, 0x66, 0x94, 0x8d,
	0x1f, 0xda, 0xd0, 0xc8, 0xb5, 0x2c, 0x9b, 0xb1, 0xb4, 0x6c, 0xc6, 0xcf, 0xc0, 0xc9, 0xb5, 0x64,
	0xd4, 0x5f, 0x2d, 0xcc, 0x9a, 0xb9, 0xaa, 0xad, 0x5d, 0xcb, 0xc3, 0x67, 0xdc, 0x38, 0x2d, 0xaa,
	0x28, 0x9d, 0xc8, 0x0c, 0xb3, 0xaa, 0xa7, 0x27, 0x7e, 0x70, 0x6e, 0xbc, 0xd0, 0xe1, 0x9d, 0x19,
	0x61, 0x4c, 0xf8, 0x2b, 0x7d, 0xe1, 0x1a, 0x33, 0x57, 0xdf, 0xcc, 0xcc, 0xb5, 0xd7, 0x9b, 0xb9,
	0xbe, 0x64, 0xe6, 0xb9, 0xce, 0x04, 0x7d, 0x60, 0xd6, 0x99, 0x3c, 0x82, 0x06, 0x96, 0x32, 0x7c,
	0x66, 0x72, 0x81, 0xe6, 0x4e, 0xf7, 0x9a, 0xa7, 0xe8, 0xa7, 0x29, 0xbe, 0x37, 0xaf, 0xfb, 0xe6,
	0xe3, 0x6a, 0xcb, 0x67, 0xbc, 0x64, 0xbe, 0xe5, 0x7b, 0x08, 0xeb, 0x2f, 0x54, 0xec, 0xc5, 0x89,
	0x56, 0x81, 0xcc, 0x1f, 0xca, 0x74, 0xc6, 0x6b, 0x2f, 0x54, 0x3c, 0x22, 0xdc, 0xbe, 0xd3, 0x36,
	0xdc, 0x7c, 0xae, 0x42, 0x2d, 0x27, 0x57, 0xd8, 0x5b, 0xc4, 0xce, 0x0c, 0x6d, 0x5e, 0xa2, 0xfb,
	0x4f, 0x07, 0x1a, 0xb9, 0x79, 0xd0, 0x85, 0xb5, 0xd2, 0xa1, 0xb4, 0x95, 0xd3, 0x2c, 0x30, 0xd8,
	0xb3, 0xe9, 0x89, 0x67, 0x28, 0xa6, 0xdf, 0x6c, 0x64, 0xd3, 0x93, 0x31, 0x11, 0x7b, 0xd0, 0xc4,
	0x3e, 0x74, 0xa2, 0x52, 0x2a, 0x26, 0x36, 0x8e, 0xe7, 0x20, 0xbc, 0xe0, 0xc9, 0x54, 0xeb, 0x24,
	0x36, 0xe5, 0xdb, 0x14, 0x5a, 0x30, 0x10, 0x56, 0x6f, 0x1c, 0x55, 0xf3, 0xd9, 0x97, 0x9a, 0x48,
	0xaa, 0xb9, 0x0b, 0xa3, 0xea, 0x92, 0x23, 0x99, 0xc6, 0x93, 0xb7, 0xac, 0x1c, 0xad, 0xd8, 0x23,
	0x58, 0x09, 0x93, 0xd3, 0x84, 0xcc, 0xfa, 0x46, 0xe2, 0xc4, 0xce, 0x3e, 0x86, 0x95, 0x50, 0xc5,
	0xe7, 0x64, 0xea, 0x85, 0xc1, 0x66, 0x59, 0x6c, 0x5f, 0xc5, 0xe7, 0x9c, 0xb8, 0xd9, 0x1e, 0xb4,
	0xf0, 0x3f, 0x55, 0x25, 0x3c, 0x73, 0xe3, 0x4d, 0x37, 0x6d, 0x1a, 0x31, 0x73, 0xe4, 0x2b, 0xc6,
	0x77, 0x96, 0x8c, 0xbf, 0x07, 0xad, 0x68, 0x1a, 0x6a, 0x65, 0x76, 0x31, 0x86, 0x7c, 0xb3, 0x6d,
	0x48, 0x8c, 0xbe, 0x33, 0xf6, 0x29, 0x54, 0x2f, 0x94, 0x90, 0x09, 0x15, 0xde, 0xd7, 0x88, 0x1f,
	0x23, 0x23, 0x37, 0xfc, 0xdd, 0x33, 0xa8, 0x9a, 0x83, 0xde, 0x01, 0xd3, 0xe0, 0x53, 0x78, 0xd9,
	0xbe, 0x8a, 0x00, 0x0c, 0xac, 0xfb, 0xd0, 0x34, 0x44, 0x93, 0xff, 0xca, 0xe6, 0x16, 0x04, 0x99,
	0xee, 0xe4, 0x01, 0xb4, 0x0c, 0x83, 0x4d, 0x85, 0x76, 0x20, 0x21, 0xcc, 0xf4, 0x26, 0xdd, 0x7f,
	0x95, 0xa1, 0x4a, 0x5b, 0x9b, 0x49, 0x5a, 0xc8, 0x64, 0x7e, 0x2b, 0x02, 0x70, 0xab, 0x2e, 0x34,
	0xc4, 0x74, 0x62, 0x1a, 0x17, 0xb3, 0x4f, 0xb1, 0x9e, 0x09, 0x46, 0xe2, 0x91, 0x75, 0x44, 0x23,
	0xf8, 0xa5, 0x78, 0x84, 0x35, 0xdb, 0x10, 0xed, 0xc0, 0x43, 0xcd, 0x19, 0x21, 0x34, 0xa6, 0xfc,
	0x1c, 0x98, 0x25, 0x6b, 0x7f, 0xa2, 0xf3, 0xb0, 0x31, 0x79, 0xa4, 0x63, 0xd8, 0x90, 0x60, 0xc3,
	0xac, 0xe0, 0x4e, 0xfd, 0x69, 0x56, 0x04, 0x59, 0x6d, 0x8e, 0xfb, 0x10, 0x09, 0x96, 0x7b, 0x07,
	0x6e, 0x19, 0x6e, 0xf4, 0x56, 0x15, 0x4f, 0x0b, 0x81, 0x3a, 0x09, 0xdc, 0x20, 0xe2, 0xae, 0xa5,
	0x59, 0x99, 0x87, 0xb0, 0x6e, 0x64, 0xe4, 0xa5, 0x2a, 0x8e, 0xd3, 0x30, 0x41, 0x4f, 0x84, 0xc1,
	0xa5, 0xd2, 0xcb, 0xfa, 0xad, 0x2b, 0x59, 0x7e, 0x67, 0x41, 0xbf, 0xa1, 0xd9, 0xb0, 0xff, 0x77,
	0x09, 0x56, 0xd0, 0x9b, 0xf1, 0xd1, 0x82, 0x50, 0x05, 0xe7, 0xf3, 0xaf, 0x4d, 0x00, 0xbe, 0xf6,
	0xf2, 0x04, 0x5d, 0xba, 0x3a, 0x41, 0xe3, 0xac, 0x49, 0xf2, 0x0b, 0x19, 0xbc, 0x49, 0x98, 0x3d,
	0xdf, 0x1d, 0x1c, 0xd9, 0x64, 0xea, 0x51, 0x94, 0x99, 0xf0, 0x6f, 0x20, 0x40, 0xfb, 0x6f, 0xc3,
	0xcd, 0xe2, 0x87, 0xaf, 0x79, 0x3d, 0xe6, 0xe9, 0x59, 0xfe, 0xb3, 0xd6, 0x9c, 0xba, 0x4f, 0xc1,
	0x2d, 0xd4, 0x79, 0xd9, 0x34, 0x08, 0x64, 0x96, 0x2d, 0x9a, 0xe0, 0x56, 0xae, 0xfd, 0xc8, 0x50,
	0xed, 0x9d, 0xbf, 0x2b, 0x41, 0xdd, 0xa6, 0x5f, 0x76, 0xdb, 0x24, 0x6b, 0xca, 0x48, 0xe6, 0xd6,
	0x98, 0x90, 0x29, 0x1d, 0xbd, 0x03, 0xf8, 0xe9, 0xa5, 0xe7, 0xa7, 0x36, 0xd9, 0xe1, 0xd0, 0x73,
	0x78, 0x7e, 0x9a, 0x13, 0x66, 0xde, 0x85, 0x04, 0xf4, 0x2d, 0x3b, 0x17, 0x5d, 0x04, 0xd6, 0xaf,
	0x70, 0x2e, 0x3a, 0x0e, 0xf2, 0x3d, 0xc8, 0xe1, 0xaa, 0x44, 0x40, 0x79, 0x74, 0xb7, 0x27, 0x9d,
	0x3f, 0x7f, 0x7f, 0xaf, 0xf4, 0x97, 0xef, 0xef, 0x95, 0xfe, 0xfe, 0xfd, 0xbd, 0xd2, 0x1f, 0xff,
	0x71, 0xef, 0xad, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0x14, 0x23, 0x34, 0x1e, 0xbc, 0x16, 0x00,
	0x00,
}
